{
  "version": 3,
  "sources": ["../bundle-FWfNe3/checked-fetch.js", "../bundle-ulc5eL/checked-fetch.js", "../../../functions/api/notifications/%5Bproject_id%5D/%5Bnotification_id%5D/read.ts", "../../../functions/api/auth/shared/email-notifications.ts", "../../../functions/api/auth/facebook/callback.ts", "../../../functions/api/auth/github/callback.ts", "../../../functions/api/auth/google/callback.ts", "../../../functions/api/user/progress/%5BcourseId%5D/index.ts", "../../../functions/api/job/%5Bjob_id%5D/monitor.ts", "../../../functions/api/job/%5Bjob_id%5D/status.ts", "../../../functions/api/notifications/%5Bproject_id%5D/read-all.ts", "../../../functions/api/projects/%5Bproject_id%5D/credentials-summary.ts", "../../../functions/api/projects/%5Bproject_id%5D/link-rot.ts", "../../../functions/api/projects/%5Bproject_id%5D/merchants.ts", "../../../functions/api/projects/%5Bproject_id%5D/networks.ts", "../../../functions/api/projects/%5Bproject_id%5D/notifications.ts", "../../../functions/api/projects/%5Bproject_id%5D/search.ts", "../../../functions/api/notifications/%5Bproject_id%5D/%5Bnotification_id%5D.ts", "../../../functions/api/auth/facebook/index.ts", "../../../functions/api/auth/github/index.ts", "../../../functions/api/auth/google/index.ts", "../../../functions/api/auth/register/index.ts", "../../../node_modules/crypto-js/core.js", "../../../node_modules/crypto-js/x64-core.js", "../../../node_modules/crypto-js/lib-typedarrays.js", "../../../node_modules/crypto-js/enc-utf16.js", "../../../node_modules/crypto-js/enc-base64.js", "../../../node_modules/crypto-js/enc-base64url.js", "../../../node_modules/crypto-js/md5.js", "../../../node_modules/crypto-js/sha1.js", "../../../node_modules/crypto-js/sha256.js", "../../../node_modules/crypto-js/sha224.js", "../../../node_modules/crypto-js/sha512.js", "../../../node_modules/crypto-js/sha384.js", "../../../node_modules/crypto-js/sha3.js", "../../../node_modules/crypto-js/ripemd160.js", "../../../node_modules/crypto-js/hmac.js", "../../../node_modules/crypto-js/pbkdf2.js", "../../../node_modules/crypto-js/evpkdf.js", "../../../node_modules/crypto-js/cipher-core.js", "../../../node_modules/crypto-js/mode-cfb.js", "../../../node_modules/crypto-js/mode-ctr.js", "../../../node_modules/crypto-js/mode-ctr-gladman.js", "../../../node_modules/crypto-js/mode-ofb.js", "../../../node_modules/crypto-js/mode-ecb.js", "../../../node_modules/crypto-js/pad-ansix923.js", "../../../node_modules/crypto-js/pad-iso10126.js", "../../../node_modules/crypto-js/pad-iso97971.js", "../../../node_modules/crypto-js/pad-zeropadding.js", "../../../node_modules/crypto-js/pad-nopadding.js", "../../../node_modules/crypto-js/format-hex.js", "../../../node_modules/crypto-js/aes.js", "../../../node_modules/crypto-js/tripledes.js", "../../../node_modules/crypto-js/rc4.js", "../../../node_modules/crypto-js/rabbit.js", "../../../node_modules/crypto-js/rabbit-legacy.js", "../../../node_modules/crypto-js/blowfish.js", "../../../node_modules/crypto-js/index.js", "../../../functions/api/credentials/create.ts", "../../../functions/api/credentials/delete.ts", "../../../functions/api/credentials/update.ts", "../../../functions/api/merchants/hide.ts", "../../../src/lib/jwt.ts", "../../../functions/api/profile/billing-address.ts", "../../../functions/api/profile/completion-status.ts", "../../../functions/api/profile/invoices.ts", "../../../functions/api/profile/preferences.ts", "../../../src/lib/invoice-generator.ts", "../../../functions/api/profile/process-pending-invoices.ts", "../../../functions/api/queue/status.ts", "../../../functions/api/tools/affiliate-link-checker.ts", "../../../functions/api/tools/affiliate-network-uptime.ts", "../../../src/pricing-plans.json", "../../../src/locales/settings.ts", "../../../functions/api/stripe/create-checkout-session.ts", "../../../functions/api/stripe/create-portal-session.ts", "../../../functions/api/stripe/create-user-account.ts", "../../../functions/api/stripe/webhook.ts", "../../../functions/api/invoice/%5BinvoiceNumber%5D.ts", "../../../functions/api/users/%5BuserId%5D/index.ts", "../../../functions/api/contact/index.ts", "../../../functions/api/credential-schemas.ts", "../../../functions/api/decrypt-credentials.ts", "../../../functions/api/import-network.ts", "../../../functions/api/logo/index.ts", "../../../functions/api/logout/index.ts", "../../../functions/api/magic-login/index.ts", "../../../functions/api/mistake-report/index.ts", "../../../functions/api/network-monitors/index.ts", "../../../functions/api/profile/index.ts", "../../../functions/api/refresh-published/index.ts", "../../../functions/api/refresh-wishlist/index.ts", "../../../functions/api/refund-request/index.ts", "../../../functions/api/request-magic-link/index.ts", "../../../functions/api/user/index.ts", "../../../functions/api/user-preferences.ts", "../../../functions/api/wishlist-info/index.ts", "../../../functions/api/currency-rates.ts", "../pages-OkNYjb/functionsRoutes-0.5227351204984628.mjs", "../bundle-ulc5eL/middleware-loader.entry.ts", "../bundle-ulc5eL/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/pages-template-worker.ts", "../../../node_modules/path-to-regexp/src/index.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../../../node_modules/wrangler/templates/middleware/common.ts", "../../../node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts", "../../../node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts", "../bundle-FWfNe3/middleware-insertion-facade.js", "../../../node_modules/wrangler/templates/middleware/common.ts", "../bundle-FWfNe3/middleware-loader.entry.ts"],
  "sourceRoot": "/Users/sjoerdcopier/PhpstormProjects/affensus_web/.wrangler/tmp/dev-FjNvY9",
  "sourcesContent": ["const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "const urls = new Set();\n\nfunction checkURL(request, init) {\n\tconst url =\n\t\trequest instanceof URL\n\t\t\t? request\n\t\t\t: new URL(\n\t\t\t\t\t(typeof request === \"string\"\n\t\t\t\t\t\t? new Request(request, init)\n\t\t\t\t\t\t: request\n\t\t\t\t\t).url\n\t\t\t\t);\n\tif (url.port && url.port !== \"443\" && url.protocol === \"https:\") {\n\t\tif (!urls.has(url.toString())) {\n\t\t\turls.add(url.toString());\n\t\t\tconsole.warn(\n\t\t\t\t`WARNING: known issue with \\`fetch()\\` requests to custom HTTPS ports in published Workers:\\n` +\n\t\t\t\t\t` - ${url.toString()} - the custom port will be ignored when the Worker is published using the \\`wrangler deploy\\` command.\\n`\n\t\t\t);\n\t\t}\n\t}\n}\n\nglobalThis.fetch = new Proxy(globalThis.fetch, {\n\tapply(target, thisArg, argArray) {\n\t\tconst [request, init] = argArray;\n\t\tcheckURL(request, init);\n\t\treturn Reflect.apply(target, thisArg, argArray);\n\t},\n});\n", "export async function onRequestOptions() {\n  return new Response(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'PUT, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n    },\n  });\n}\n\nexport async function onRequestPut(context: { request: Request; env: any; params: any }) {\n  try {\n    const { env, params } = context;\n    const projectId = params.project_id;\n    const notificationId = params.notification_id;\n\n    if (!projectId || !notificationId) {\n      return new Response(JSON.stringify({\n        success: false,\n        error: 'Project ID and Notification ID are required'\n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    const bearerToken = env.AFFENSUS_CREDENTIALS_PASSWORD;\n    if (!bearerToken) {\n      throw new Error('AFFENSUS_CREDENTIALS_PASSWORD not configured');\n    }\n\n    const apiUrl = `https://apiv2.affensus.com/api/notifications/${projectId}/${notificationId}/read`;\n\n    const response = await fetch(apiUrl, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${bearerToken}`,\n      },\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(`External API error: ${response.status} ${response.statusText} - ${errorText}`);\n    }\n\n    const data = await response.json();\n\n    return new Response(JSON.stringify({\n      success: true,\n      data: data\n    }), {\n      status: 200,\n      headers: {\n        'Content-Type': 'application/json',\n        'Cache-Control': 'private, max-age=0, s-maxage=0'\n      }\n    });\n  } catch (error) {\n    console.error('Error marking notification as read:', error);\n    return new Response(JSON.stringify({\n      success: false,\n      error: 'Failed to mark notification as read'\n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}", "async function sendNewUserNotification(userEmail: string, loginMethod: string, resendApiKey: string) {\n  const response = await fetch('https://api.resend.com/emails', {\n    method: 'POST',\n    headers: {\n      'Authorization': `Bearer ${resendApiKey}`,\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      from: 'noreply@email.morsexpress.com',\n      to: 's.copier@gmail.com',\n      subject: '\uD83C\uDF89 New User Registered - MorseXpress',\n      html: `\n        <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;\">\n          <div style=\"text-align: center; margin-bottom: 30px;\">\n            <h1 style=\"color: #1f2937; margin-bottom: 10px;\">\uD83C\uDF89 MorseXpress</h1>\n            <h2 style=\"color: #4b5563; font-weight: normal; margin-top: 0;\">New User Registration</h2>\n          </div>\n          \n          <div style=\"background-color: #f3f4f6; padding: 20px; border-radius: 8px; margin-bottom: 20px;\">\n            <h3 style=\"color: #1f2937; margin-top: 0;\">User Details:</h3>\n            <p style=\"color: #374151; margin: 8px 0;\"><strong>Email:</strong> ${userEmail}</p>\n            <p style=\"color: #374151; margin: 8px 0;\"><strong>Login Method:</strong> ${loginMethod}</p>\n            <p style=\"color: #374151; margin: 8px 0;\"><strong>Registration Time:</strong> ${new Date().toISOString()}</p>\n          </div>\n          \n          <p style=\"color: #374151; font-size: 16px; line-height: 1.5;\">\n            A new user has successfully registered for MorseXpress! \uD83D\uDE80\n          </p>\n          \n          <hr style=\"border: none; border-top: 1px solid #e5e7eb; margin: 30px 0;\">\n          \n          <p style=\"color: #9ca3af; font-size: 12px; text-align: center;\">\n            This is an automated notification from MorseXpress.\n          </p>\n        </div>\n      `,\n      text: `\nNew User Registration - MorseXpress\n\nUser Details:\n- Email: ${userEmail}\n- Login Method: ${loginMethod}\n- Registration Time: ${new Date().toISOString()}\n\nA new user has successfully registered for MorseXpress!\n\nThis is an automated notification from MorseXpress.\n      `.trim()\n    })\n  })\n\n  if (!response.ok) {\n    const errorText = await response.text()\n    console.error('Failed to send new user notification:', errorText)\n    // Don't throw error - we don't want to break user registration if email fails\n    return false\n  }\n\n  const result = await response.json()\n  console.log('New user notification sent successfully:', result)\n  return true\n}\n\nexport { sendNewUserNotification } ", "interface FacebookUserInfo {\n  id: string\n  email: string\n  name: string\n}\n\nfunction parseCookies(cookieHeader: string | null): Record<string, string> {\n  const cookies: Record<string, string> = {}\n  if (!cookieHeader) return cookies\n  \n  cookieHeader.split(';').forEach(cookie => {\n    const parts = cookie.trim().split('=')\n    if (parts.length === 2) {\n      // Handle URL encoding like in /api/user\n      cookies[parts[0]] = decodeURIComponent(parts[1])\n    }\n  })\n  return cookies\n}\n\nasync function signJwt(payload: any, secret: string, expiresIn: number): Promise<string> {\n  const header = { alg: 'HS256', typ: 'JWT' }\n  const now = Math.floor(Date.now() / 1000)\n  const exp = now + expiresIn\n  \n  const jwtPayload = { ...payload, iat: now, exp }\n  \n  const encoder = new TextEncoder()\n  const key = await crypto.subtle.importKey(\n    'raw',\n    encoder.encode(secret),\n    { name: 'HMAC', hash: 'SHA-256' },\n    false,\n    ['sign']\n  )\n  \n  const headerB64 = btoa(JSON.stringify(header)).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_')\n  const payloadB64 = btoa(JSON.stringify(jwtPayload)).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_')\n  \n  const signatureArrayBuffer = await crypto.subtle.sign(\n    'HMAC',\n    key,\n    encoder.encode(`${headerB64}.${payloadB64}`)\n  )\n  \n  const signatureB64 = btoa(String.fromCharCode(...new Uint8Array(signatureArrayBuffer)))\n    .replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_')\n  \n  return `${headerB64}.${payloadB64}.${signatureB64}`\n}\n\nexport async function onRequestGet(context: any) {\n  try {\n    const { request, env } = context\n    const url = new URL(request.url)\n    const code = url.searchParams.get('code')\n    const state = url.searchParams.get('state')\n    const error = url.searchParams.get('error')\n\n    const FACEBOOK_APP_ID = env.FACEBOOK_APP_ID\n    const FACEBOOK_APP_SECRET = env.FACEBOOK_APP_SECRET\n    const FACEBOOK_REDIRECT_URI = `${env.SITE_URL || 'http://localhost:3000'}/api/auth/facebook/callback`\n\n    // Check for OAuth errors\n    if (error) {\n      console.error('Facebook OAuth error:', error)\n      return new Response(null, {\n        status: 302,\n        headers: { 'Location': `${env.SITE_URL || 'http://localhost:3000'}/auth?error=oauth_denied` }\n      })\n    }\n\n    // Verify required parameters\n    if (!code || !state) {\n      console.error('Missing code or state parameter')\n      return new Response(null, {\n        status: 302,\n        headers: { 'Location': `${env.SITE_URL || 'http://localhost:3000'}/auth?error=invalid_request` }\n      })\n    }\n\n    // Verify state parameter for CSRF protection\n    const cookies = parseCookies(request.headers.get('Cookie'))\n    const storedState = cookies['oauth_state']\n    if (!storedState || state !== storedState) {\n      console.error('Invalid state parameter')\n      return new Response(null, {\n        status: 302,\n        headers: { 'Location': `${env.SITE_URL || 'http://localhost:3000'}/auth?error=invalid_state` }\n      })\n    }\n\n    // Check if OAuth is configured\n    if (!FACEBOOK_APP_ID || !FACEBOOK_APP_SECRET) {\n      console.error('Facebook OAuth not configured')\n      return new Response(null, {\n        status: 302,\n        headers: { 'Location': `${env.SITE_URL || 'http://localhost:3000'}/auth?error=oauth_not_configured` }\n      })\n    }\n\n    // Exchange code for access token\n    const tokenResponse = await fetch(`https://graph.facebook.com/v18.0/oauth/access_token?` +\n      `client_id=${FACEBOOK_APP_ID}&` +\n      `client_secret=${FACEBOOK_APP_SECRET}&` +\n      `code=${code}&` +\n      `redirect_uri=${encodeURIComponent(FACEBOOK_REDIRECT_URI)}`)\n\n    if (!tokenResponse.ok) {\n      console.error('Failed to exchange code for token:', await tokenResponse.text())\n      return new Response(null, {\n        status: 302,\n        headers: { 'Location': `${env.SITE_URL || 'http://localhost:3000'}/auth?error=token_exchange_failed` }\n      })\n    }\n\n    const tokenData = await tokenResponse.json()\n    const accessToken = tokenData.access_token\n\n    // Get user info from Facebook\n    const userInfoResponse = await fetch(\n      `https://graph.facebook.com/v18.0/me?fields=id,name,email&access_token=${accessToken}`\n    )\n\n    if (!userInfoResponse.ok) {\n      console.error('Failed to get user info from Facebook')\n      return new Response(null, {\n        status: 302,\n        headers: { 'Location': `${env.SITE_URL || 'http://localhost:3000'}/auth?error=user_info_failed` }\n      })\n    }\n\n    const userInfo: FacebookUserInfo = await userInfoResponse.json()\n\n    // Verify email is provided\n    if (!userInfo.email) {\n      console.error('Facebook account email not provided')\n      return new Response(null, {\n        status: 302,\n        headers: { 'Location': `${env.SITE_URL || 'http://localhost:3000'}/auth?error=email_not_provided` }\n      })\n    }\n\n    // Get database from environment\n    const db = env.DB\n    if (!db) {\n      return new Response(null, {\n        status: 302,\n        headers: { 'Location': `${env.SITE_URL || 'http://localhost:3000'}/auth?error=database_not_available` }\n      })\n    }\n\n    // Create or update user with Facebook login method\n    const createUser = async (db: any, email: string, loginMethod: string = 'facebook') => {\n      // Use external API instead of D1\n      const bearerToken = env.AFFENSUS_CREDENTIALS_PASSWORD;\n      if (!bearerToken) {\n        throw new Error('AFFENSUS_CREDENTIALS_PASSWORD not configured');\n      }\n\n      // Get user name from Facebook user info\n      const name = userInfo.name || null;\n\n      console.log('Registering user via external API:', { email, name, loginMethod });\n\n      const response = await fetch('https://apiv2.affensus.com/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${bearerToken}`,\n        },\n        body: JSON.stringify({\n          email: email.toLowerCase(),\n          name: name,\n          login_method: loginMethod,\n          subscription_status: 'free'\n        }),\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('API registration failed:', response.status, errorText);\n        throw new Error(`Registration failed: ${response.status} ${errorText}`);\n      }\n\n      const userData = await response.json();\n      \n      // For backward compatibility, return a user object that matches the expected structure\n      const user = {\n        id: userData.id || userData.user_id || Date.now(), // Fallback ID if API doesn't return one\n        email: email.toLowerCase(),\n        preferred_login_method: loginMethod,\n        subscription_status: 'free',\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };\n\n      // Check if this is a new user by looking at the API response\n      const isNewUser = response.status === 201; // 201 = Created, 200 = Updated\n      \n      return { user, isNewUser };\n    }\n\n    const updatePreferredLoginMethod = async (db: any, email: string, method: string) => {\n      await db.prepare(`\n        UPDATE users \n        SET preferred_login_method = ?, updated_at = datetime('now')\n        WHERE email = ?\n      `).bind(method, email).run()\n    }\n\n    // Create or update user\n    const { user, isNewUser } = await createUser(db, userInfo.email.toLowerCase(), 'facebook')\n\n    // Update user's preferred login method\n    await updatePreferredLoginMethod(db, userInfo.email.toLowerCase(), 'facebook')\n\n    // Send email notification for new users\n    if (isNewUser) {\n      const resendApiKey = env.RESEND_API_KEY\n      if (resendApiKey) {\n        try {\n          const { sendNewUserNotification } = await import('../shared/email-notifications')\n          await sendNewUserNotification(user.email, 'facebook', resendApiKey)\n        } catch (error) {\n          console.error('Failed to send new user notification:', error)\n          // Continue with normal flow even if email fails\n        }\n      } else {\n        console.log('New user registered but RESEND_API_KEY not configured - email notification skipped')\n      }\n    }\n\n    // Generate JWT token\n    const jwtSecret = env.JWT_SECRET\n    if (!jwtSecret) {\n      return new Response(null, {\n        status: 302,\n        headers: { 'Location': `${env.SITE_URL || 'http://localhost:3000'}/auth?error=jwt_not_configured` }\n      })\n    }\n\n    const jwtToken = await signJwt(\n      {\n        sub: user.id.toString(),\n        email: user.email,\n        login_method: 'facebook',\n      },\n      jwtSecret,\n      7 * 24 * 60 * 60 // 7 days\n    )\n\n    // Create HTML response with localStorage and redirect\n    const html = `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <title>Redirecting...</title>\n      </head>\n      <body>\n        <script>\n          localStorage.setItem('lastLoginMethod', 'facebook');\n          localStorage.setItem('lastLoginTime', new Date().toISOString());\n          window.location.href = '${env.SITE_URL || 'http://localhost:3000'}/auth';\n        </script>\n        <p>Redirecting...</p>\n      </body>\n      </html>\n    `\n    \n    // Set cookie with appropriate security settings\n    const isProduction = env.SITE_URL?.startsWith('https://') || false\n    const secureFlag = isProduction ? 'Secure; ' : ''\n    \n    // Set cookies using Headers object for proper multiple cookie handling\n    const headers = new Headers({\n      'Content-Type': 'text/html'\n    })\n    \n    // Set auth token cookie\n    headers.append('Set-Cookie', `auth-token=${jwtToken}; HttpOnly; ${secureFlag}SameSite=Lax; Max-Age=${7 * 24 * 60 * 60}; Path=/`)\n    \n    // Clear oauth_state cookie\n    headers.append('Set-Cookie', `oauth_state=; HttpOnly; ${secureFlag}SameSite=Lax; Max-Age=0; Path=/`)\n\n    return new Response(html, {\n      status: 200,\n      headers,\n    })\n\n  } catch (error) {\n    console.error('Error processing Facebook OAuth callback:', error)\n    return new Response(null, {\n      status: 302,\n      headers: { 'Location': `${context.env.SITE_URL || 'http://localhost:3000'}/auth?error=internal_error` }\n    })\n  }\n} ", "interface GitHubUserInfo {\n  id: number\n  login: string\n  email: string\n  name: string\n  avatar_url: string\n}\n\ninterface GitHubEmailInfo {\n  email: string\n  primary: boolean\n  verified: boolean\n  visibility: string\n}\n\nfunction parseCookies(cookieHeader: string | null): Record<string, string> {\n  const cookies: Record<string, string> = {}\n  if (!cookieHeader) return cookies\n  \n  cookieHeader.split(';').forEach(cookie => {\n    const parts = cookie.trim().split('=')\n    if (parts.length === 2) {\n      // Handle URL encoding like in /api/user\n      cookies[parts[0]] = decodeURIComponent(parts[1])\n    }\n  })\n  return cookies\n}\n\nasync function signJwt(payload: any, secret: string, expiresIn: number): Promise<string> {\n  const header = { alg: 'HS256', typ: 'JWT' }\n  const now = Math.floor(Date.now() / 1000)\n  const exp = now + expiresIn\n  \n  const jwtPayload = { ...payload, iat: now, exp }\n  \n  const encoder = new TextEncoder()\n  const key = await crypto.subtle.importKey(\n    'raw',\n    encoder.encode(secret),\n    { name: 'HMAC', hash: 'SHA-256' },\n    false,\n    ['sign']\n  )\n  \n  const headerB64 = btoa(JSON.stringify(header)).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_')\n  const payloadB64 = btoa(JSON.stringify(jwtPayload)).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_')\n  \n  const signatureArrayBuffer = await crypto.subtle.sign(\n    'HMAC',\n    key,\n    encoder.encode(`${headerB64}.${payloadB64}`)\n  )\n  \n  const signatureB64 = btoa(String.fromCharCode(...new Uint8Array(signatureArrayBuffer)))\n    .replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_')\n  \n  return `${headerB64}.${payloadB64}.${signatureB64}`\n}\n\nasync function processPendingPayments(db: any, email: string, userId: number, stripeSecretKey?: string) {\n  try {\n    // Check for pending payments for this email\n    const pendingPayments = await db.prepare(`\n      SELECT * FROM pending_payments \n      WHERE email = ? AND processed = 0\n    `).bind(email).all()\n\n    if (pendingPayments.results && pendingPayments.results.length > 0) {\n      console.log(`Found ${pendingPayments.results.length} pending payment(s) for ${email}`)\n      \n      for (const payment of pendingPayments.results) {\n        try {\n          if (stripeSecretKey) {\n            // Get the session details from Stripe\n            const sessionResponse = await fetch(`https://api.stripe.com/v1/checkout/sessions/${payment.session_id}`, {\n              headers: {\n                'Authorization': `Bearer ${stripeSecretKey}`,\n              },\n            })\n\n            if (sessionResponse.ok) {\n              const session = await sessionResponse.json()\n              \n              // Create Stripe customer for this user\n              const customerResponse = await fetch('https://api.stripe.com/v1/customers', {\n                method: 'POST',\n                headers: {\n                  'Authorization': `Bearer ${stripeSecretKey}`,\n                  'Content-Type': 'application/x-www-form-urlencoded',\n                },\n                body: new URLSearchParams({\n                  email: email,\n                  name: payment.customer_name || 'Customer',\n                  'metadata[user_id]': userId.toString(),\n                  'metadata[session_id]': payment.session_id,\n                }),\n              })\n\n              if (customerResponse.ok) {\n                const customer = await customerResponse.json()\n                \n                // Update user with Stripe customer ID\n                await db.prepare(`\n                  UPDATE users \n                  SET stripe_customer_id = ?, updated_at = datetime('now')\n                  WHERE id = ?\n                `).bind(customer.id, userId).run()\n                \n                // Import the functions from webhook (we'll need to refactor this)\n                // For now, let's create a simple subscription update\n                let subscriptionStatus = 'free'\n                if (payment.amount_total === 1999) subscriptionStatus = 'basic'\n                else if (payment.amount_total === 3999) subscriptionStatus = 'active'\n                else if (payment.amount_total === 7900) subscriptionStatus = 'lifetime'\n                \n                await db.prepare(`\n                  UPDATE users \n                  SET \n                    subscription_status = ?, \n                    subscription_expires_at = datetime('now', '+1 year'),\n                    updated_at = datetime('now')\n                  WHERE id = ?\n                `).bind(subscriptionStatus, userId).run()\n                \n                console.log(`Processed pending payment for user ${userId}, customer ${customer.id}`)\n              }\n            }\n          }\n          \n          // Mark payment as processed\n          await db.prepare(`\n            UPDATE pending_payments \n            SET processed = 1 \n            WHERE id = ?\n          `).bind(payment.id).run()\n          \n        } catch (error) {\n          console.error('Error processing pending payment:', error)\n        }\n      }\n    }\n  } catch (error) {\n    console.error('Error checking for pending payments:', error)\n  }\n}\n\nexport async function onRequestGet(context: any) {\n  try {\n    const { request, env } = context\n    const url = new URL(request.url)\n    const code = url.searchParams.get('code')\n    const state = url.searchParams.get('state')\n    const error = url.searchParams.get('error')\n\n    // Handle OAuth errors\n    if (error) {\n      console.error('GitHub OAuth error:', error)\n      return new Response(null, {\n        status: 302,\n        headers: { 'Location': `${env.SITE_URL || 'http://localhost:3000'}/auth?error=oauth_denied` }\n      })\n    }\n\n    if (!code || !state) {\n      return new Response(null, {\n        status: 302,\n        headers: { 'Location': `${env.SITE_URL || 'http://localhost:3000'}/auth?error=invalid_request` }\n      })\n    }\n\n    // Verify state parameter (CSRF protection)\n    const cookies = parseCookies(request.headers.get('Cookie'))\n    const storedState = cookies['oauth_state']\n    \n    if (!storedState || storedState !== state) {\n      console.error('OAuth state verification failed')\n      return new Response(null, {\n        status: 302,\n        headers: { 'Location': `${env.SITE_URL || 'http://localhost:3000'}/auth?error=invalid_state` }\n      })\n    }\n\n    const GITHUB_CLIENT_ID = env.GITHUB_CLIENT_ID\n    const GITHUB_CLIENT_SECRET = env.GITHUB_CLIENT_SECRET\n\n    if (!GITHUB_CLIENT_ID || !GITHUB_CLIENT_SECRET) {\n      return new Response(null, {\n        status: 302,\n        headers: { 'Location': `${env.SITE_URL || 'http://localhost:3000'}/auth?error=oauth_not_configured` }\n      })\n    }\n\n    // Exchange code for access token\n    const tokenResponse = await fetch('https://github.com/login/oauth/access_token', {\n      method: 'POST',\n      headers: { \n        'Accept': 'application/json',\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: new URLSearchParams({\n        client_id: GITHUB_CLIENT_ID,\n        client_secret: GITHUB_CLIENT_SECRET,\n        code: code,\n      }),\n    })\n\n    if (!tokenResponse.ok) {\n      console.error('Failed to exchange code for token:', await tokenResponse.text())\n      return new Response(null, {\n        status: 302,\n        headers: { 'Location': `${env.SITE_URL || 'http://localhost:3000'}/auth?error=token_exchange_failed` }\n      })\n    }\n\n    const tokenData = await tokenResponse.json()\n    const accessToken = tokenData.access_token\n\n    if (!accessToken) {\n      console.error('No access token received from GitHub')\n      return new Response(null, {\n        status: 302,\n        headers: { 'Location': `${env.SITE_URL || 'http://localhost:3000'}/auth?error=token_exchange_failed` }\n      })\n    }\n\n    // Get user info from GitHub\n    const userInfoResponse = await fetch('https://api.github.com/user', {\n      headers: {\n        'Authorization': `Bearer ${accessToken}`,\n        'Accept': 'application/vnd.github.v3+json',\n        'User-Agent': 'MorseXpress-App'\n      }\n    })\n\n    if (!userInfoResponse.ok) {\n      console.error('Failed to get user info from GitHub')\n      return new Response(null, {\n        status: 302,\n        headers: { 'Location': `${env.SITE_URL || 'http://localhost:3000'}/auth?error=user_info_failed` }\n      })\n    }\n\n    const userInfo: GitHubUserInfo = await userInfoResponse.json()\n\n    // If user's email is not public, get it from the emails endpoint\n    let userEmail: string | undefined = userInfo.email\n    if (!userEmail) {\n      const emailsResponse = await fetch('https://api.github.com/user/emails', {\n        headers: {\n          'Authorization': `Bearer ${accessToken}`,\n          'Accept': 'application/vnd.github.v3+json',\n          'User-Agent': 'MorseXpress-App'\n        }\n      })\n\n      if (emailsResponse.ok) {\n        const emails: GitHubEmailInfo[] = await emailsResponse.json()\n        const primaryEmail = emails.find(e => e.primary && e.verified)\n        userEmail = primaryEmail?.email || emails.find(e => e.verified)?.email\n      }\n    }\n\n    // Verify email is available\n    if (!userEmail) {\n      console.error('GitHub account email not available')\n      return new Response(null, {\n        status: 302,\n        headers: { 'Location': `${env.SITE_URL || 'http://localhost:3000'}/auth?error=email_not_provided` }\n      })\n    }\n\n    // Get database from environment\n    const db = env.DB\n    if (!db) {\n      return new Response(null, {\n        status: 302,\n        headers: { 'Location': `${env.SITE_URL || 'http://localhost:3000'}/auth?error=database_not_available` }\n      })\n    }\n\n    // Create or update user with GitHub login method  \n    const createUser = async (db: any, email: string, loginMethod: string = 'github') => {\n      // Use external API instead of D1\n      const bearerToken = env.AFFENSUS_CREDENTIALS_PASSWORD;\n      if (!bearerToken) {\n        throw new Error('AFFENSUS_CREDENTIALS_PASSWORD not configured');\n      }\n\n      // Get user name from GitHub user info\n      const name = userInfo.name || userInfo.login || null;\n\n      console.log('Registering user via external API:', { email, name, loginMethod });\n\n      const response = await fetch('https://apiv2.affensus.com/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${bearerToken}`,\n        },\n        body: JSON.stringify({\n          email: email.toLowerCase(),\n          name: name,\n          login_method: loginMethod,\n          subscription_status: 'free'\n        }),\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('API registration failed:', response.status, errorText);\n        throw new Error(`Registration failed: ${response.status} ${errorText}`);\n      }\n\n      const userData = await response.json();\n      \n      // For backward compatibility, return a user object that matches the expected structure\n      const user = {\n        id: userData.id || userData.user_id || Date.now(), // Fallback ID if API doesn't return one\n        email: email.toLowerCase(),\n        preferred_login_method: loginMethod,\n        subscription_status: 'free',\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };\n\n      // Check if this is a new user by looking at the API response\n      const isNewUser = response.status === 201; // 201 = Created, 200 = Updated\n      \n      return { user, isNewUser };\n    }\n\n    const updatePreferredLoginMethod = async (db: any, email: string, method: string) => {\n      await db.prepare(`\n        UPDATE users \n        SET preferred_login_method = ?, updated_at = datetime('now')\n        WHERE email = ?\n      `).bind(method, email).run()\n    }\n\n    // Create or update user\n    const { user, isNewUser } = await createUser(db, userEmail!.toLowerCase(), 'github')\n\n    // Update user's preferred login method\n    await updatePreferredLoginMethod(db, userEmail!.toLowerCase(), 'github')\n\n    // Check for pending payments after user creation/update\n    await processPendingPayments(db, userEmail!.toLowerCase(), user.id, env.STRIPE_SECRET_KEY)\n\n    // Send email notification for new users\n    if (isNewUser) {\n      const resendApiKey = env.RESEND_API_KEY\n      if (resendApiKey) {\n        try {\n          const { sendNewUserNotification } = await import('../shared/email-notifications')\n          await sendNewUserNotification(user.email, 'github', resendApiKey)\n        } catch (error) {\n          console.error('Failed to send new user notification:', error)\n          // Continue with normal flow even if email fails\n        }\n      } else {\n        console.log('New user registered but RESEND_API_KEY not configured - email notification skipped')\n      }\n    }\n\n    // Generate JWT token\n    const jwtSecret = env.JWT_SECRET\n    if (!jwtSecret) {\n      return new Response(null, {\n        status: 302,\n        headers: { 'Location': `${env.SITE_URL || 'http://localhost:3000'}/auth?error=jwt_not_configured` }\n      })\n    }\n\n    const jwtToken = await signJwt(\n      {\n        sub: user.id.toString(),\n        email: user.email,\n        login_method: 'github',\n      },\n      jwtSecret,\n      7 * 24 * 60 * 60 // 7 days\n    )\n\n    // Create HTML response with localStorage and redirect\n    const html = `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <title>Redirecting...</title>\n      </head>\n      <body>\n        <script>\n          localStorage.setItem('lastLoginMethod', 'github');\n          localStorage.setItem('lastLoginTime', new Date().toISOString());\n          window.location.href = '${env.SITE_URL || 'http://localhost:3000'}/auth';\n        </script>\n        <p>Redirecting...</p>\n      </body>\n      </html>\n    `\n    \n    // Set cookie with appropriate security settings\n    const isProduction = env.SITE_URL?.startsWith('https://') || false\n    const secureFlag = isProduction ? 'Secure; ' : ''\n    \n    // Set cookies using Headers object for proper multiple cookie handling\n    const headers = new Headers({\n      'Content-Type': 'text/html'\n    })\n    \n    // Set auth token cookie\n    headers.append('Set-Cookie', `auth-token=${jwtToken}; HttpOnly; ${secureFlag}SameSite=Lax; Max-Age=${7 * 24 * 60 * 60}; Path=/`)\n    \n    // Clear oauth_state cookie\n    headers.append('Set-Cookie', `oauth_state=; HttpOnly; ${secureFlag}SameSite=Lax; Max-Age=0; Path=/`)\n\n    return new Response(html, {\n      status: 200,\n      headers,\n    })\n\n  } catch (error) {\n    console.error('Error processing GitHub OAuth callback:', error)\n    return new Response(null, {\n      status: 302,\n      headers: { 'Location': `${context.env.SITE_URL || 'http://localhost:3000'}/auth?error=internal_error` }\n    })\n  }\n} ", "interface GoogleUserInfo {\n  id: string\n  email: string\n  name: string\n  picture: string\n  verified_email: boolean\n}\n\nfunction parseCookies(cookieHeader: string | null): Record<string, string> {\n  const cookies: Record<string, string> = {}\n  if (!cookieHeader) return cookies\n  \n  cookieHeader.split(';').forEach(cookie => {\n    const parts = cookie.trim().split('=')\n    if (parts.length === 2) {\n      // Handle URL encoding like in /api/user\n      cookies[parts[0]] = decodeURIComponent(parts[1])\n    }\n  })\n  return cookies\n}\n\n// JWT function using standard base64 encoding (not URL-safe)\nasync function signJwt(payload: any, secret: string, expiresIn: number = 7 * 24 * 60 * 60): Promise<string> {\n  const now = Math.floor(Date.now() / 1000)\n  const jwtPayload = {\n    ...payload,\n    iat: now,\n    exp: now + expiresIn\n  }\n\n  const headerB64 = btoa(JSON.stringify({ alg: 'HS256', typ: 'JWT' }))\n  const payloadB64 = btoa(JSON.stringify(jwtPayload))\n  const data = `${headerB64}.${payloadB64}`\n\n  const encoder = new TextEncoder()\n  const key = await crypto.subtle.importKey(\n    'raw',\n    encoder.encode(secret),\n    { name: 'HMAC', hash: 'SHA-256' },\n    false,\n    ['sign']\n  )\n\n  const signature = await crypto.subtle.sign('HMAC', key, encoder.encode(data))\n  const signatureB64 = btoa(String.fromCharCode(...new Uint8Array(signature)))\n\n  return `${data}.${signatureB64}`\n}\n\nasync function processPendingPayments(db: any, email: string, userId: number, stripeSecretKey?: string) {\n  try {\n    // Check for pending payments for this email\n    const pendingPayments = await db.prepare(`\n      SELECT * FROM pending_payments \n      WHERE email = ? AND processed = 0\n    `).bind(email).all()\n\n    if (pendingPayments.results && pendingPayments.results.length > 0) {\n      console.log(`Found ${pendingPayments.results.length} pending payment(s) for ${email}`)\n      \n      for (const payment of pendingPayments.results) {\n        try {\n          if (stripeSecretKey) {\n            // Get the session details from Stripe\n            const sessionResponse = await fetch(`https://api.stripe.com/v1/checkout/sessions/${payment.session_id}`, {\n              headers: {\n                'Authorization': `Bearer ${stripeSecretKey}`,\n              },\n            })\n\n            if (sessionResponse.ok) {\n              const session = await sessionResponse.json()\n              \n              // Create Stripe customer for this user\n              const customerResponse = await fetch('https://api.stripe.com/v1/customers', {\n                method: 'POST',\n                headers: {\n                  'Authorization': `Bearer ${stripeSecretKey}`,\n                  'Content-Type': 'application/x-www-form-urlencoded',\n                },\n                body: new URLSearchParams({\n                  email: email,\n                  name: payment.customer_name || 'Customer',\n                  'metadata[user_id]': userId.toString(),\n                  'metadata[session_id]': payment.session_id,\n                }),\n              })\n\n              if (customerResponse.ok) {\n                const customer = await customerResponse.json()\n                \n                // Update user with Stripe customer ID\n                await db.prepare(`\n                  UPDATE users \n                  SET stripe_customer_id = ?, updated_at = datetime('now')\n                  WHERE id = ?\n                `).bind(customer.id, userId).run()\n                \n                // Import the functions from webhook (we'll need to refactor this)\n                // For now, let's create a simple subscription update\n                let subscriptionStatus = 'free'\n                if (payment.amount_total === 1999) subscriptionStatus = 'basic'\n                else if (payment.amount_total === 3999) subscriptionStatus = 'active'\n                else if (payment.amount_total === 7900) subscriptionStatus = 'lifetime'\n                \n                await db.prepare(`\n                  UPDATE users \n                  SET \n                    subscription_status = ?, \n                    subscription_expires_at = datetime('now', '+1 year'),\n                    updated_at = datetime('now')\n                  WHERE id = ?\n                `).bind(subscriptionStatus, userId).run()\n                \n                console.log(`Processed pending payment for user ${userId}, customer ${customer.id}`)\n              }\n            }\n          }\n          \n          // Mark payment as processed\n          await db.prepare(`\n            UPDATE pending_payments \n            SET processed = 1 \n            WHERE id = ?\n          `).bind(payment.id).run()\n          \n        } catch (error) {\n          console.error('Error processing pending payment:', error)\n        }\n      }\n    }\n  } catch (error) {\n    console.error('Error checking for pending payments:', error)\n  }\n}\n\nexport async function onRequestGet(context: any) {\n  try {\n    const { request, env } = context\n    const url = new URL(request.url)\n    const code = url.searchParams.get('code')\n    const state = url.searchParams.get('state')\n    const paidParam = url.searchParams.get('paid')\n    const sessionId = url.searchParams.get('session_id')\n    const error = url.searchParams.get('error')\n\n    const GOOGLE_CLIENT_ID = env.GOOGLE_CLIENT_ID\n    const GOOGLE_CLIENT_SECRET = env.GOOGLE_CLIENT_SECRET\n    const GOOGLE_REDIRECT_URI = `${env.SITE_URL || 'http://localhost:3000'}/api/auth/google/callback`\n\n    // Check for OAuth errors\n    if (error) {\n      console.error('Google OAuth error:', error)\n      return new Response(null, {\n        status: 302,\n        headers: { 'Location': `${env.SITE_URL || 'http://localhost:3000'}/auth?error=oauth_denied` }\n      })\n    }\n\n    // Verify required parameters\n    if (!code || !state) {\n      console.error('Missing code or state parameter')\n      return new Response(null, {\n        status: 302,\n        headers: { 'Location': `${env.SITE_URL || 'http://localhost:3000'}/auth?error=invalid_request` }\n      })\n    }\n\n    // Verify state parameter for CSRF protection\n    const cookies = parseCookies(request.headers.get('Cookie'))\n    const storedState = cookies['oauth_state']\n    if (!storedState || state !== storedState) {\n      console.error('Invalid state parameter')\n      return new Response(null, {\n        status: 302,\n        headers: { 'Location': `${env.SITE_URL || 'http://localhost:3000'}/auth?error=invalid_state` }\n      })\n    }\n\n    // Check if OAuth is configured\n    if (!GOOGLE_CLIENT_ID || !GOOGLE_CLIENT_SECRET) {\n      console.error('Google OAuth not configured')\n      return new Response(null, {\n        status: 302,\n        headers: { 'Location': `${env.SITE_URL || 'http://localhost:3000'}/auth?error=oauth_not_configured` }\n      })\n    }\n\n    // Exchange code for access token\n    const tokenResponse = await fetch('https://oauth2.googleapis.com/token', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n      body: new URLSearchParams({\n        client_id: GOOGLE_CLIENT_ID,\n        client_secret: GOOGLE_CLIENT_SECRET,\n        code: code,\n        grant_type: 'authorization_code',\n        redirect_uri: GOOGLE_REDIRECT_URI,\n      }),\n    })\n\n    if (!tokenResponse.ok) {\n      console.error('Failed to exchange code for token:', await tokenResponse.text())\n      return new Response(null, {\n        status: 302,\n        headers: { 'Location': `${env.SITE_URL || 'http://localhost:3000'}/auth?error=token_exchange_failed` }\n      })\n    }\n\n    const tokenData = await tokenResponse.json()\n    const accessToken = tokenData.access_token\n\n    // Get user info from Google\n    const userInfoResponse = await fetch(\n      `https://www.googleapis.com/oauth2/v2/userinfo?access_token=${accessToken}`\n    )\n\n    if (!userInfoResponse.ok) {\n      console.error('Failed to get user info from Google')\n      return new Response(null, {\n        status: 302,\n        headers: { 'Location': `${env.SITE_URL || 'http://localhost:3000'}/auth?error=user_info_failed` }\n      })\n    }\n\n    const userInfo: GoogleUserInfo = await userInfoResponse.json()\n\n    // Verify email is provided and verified\n    if (!userInfo.email || !userInfo.verified_email) {\n      console.error('Google account email not verified')\n      return new Response(null, {\n        status: 302,\n        headers: { 'Location': `${env.SITE_URL || 'http://localhost:3000'}/auth?error=email_not_verified` }\n      })\n    }\n\n    // Get database from environment\n    const db = env.DB\n    if (!db) {\n      return new Response(null, {\n        status: 302,\n        headers: { 'Location': `${env.SITE_URL || 'http://localhost:3000'}/auth?error=database_not_available` }\n      })\n    }\n\n    // Get user by email from external API\n    const getUserByEmail = async (email: string, apiKey: string) => {\n      try {\n        const response = await fetch(`https://apiv2.affensus.com/api/auth/user/email/${encodeURIComponent(email)}`, {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${apiKey}`,\n            'Content-Type': 'application/json',\n          },\n        })\n\n        if (!response.ok) {\n          if (response.status === 404) {\n            return null // User not found\n          }\n          throw new Error(`API error: ${response.status}`)\n        }\n\n        return await response.json()\n      } catch (error) {\n        console.error('Error fetching user by email:', error)\n        return null\n      }\n    }\n\n    // Create or update user with Google login method\n    const createUser = async (db: any, email: string, loginMethod: string = 'google') => {\n      // Use external API instead of D1\n      const bearerToken = env.AFFENSUS_CREDENTIALS_PASSWORD;\n      if (!bearerToken) {\n        throw new Error('AFFENSUS_CREDENTIALS_PASSWORD not configured');\n      }\n\n      // Get user name from Google user info\n      const name = userInfo.name || null;\n\n      console.log('Registering user via external API:', { email, name, loginMethod });\n\n      const response = await fetch('https://apiv2.affensus.com/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${bearerToken}`,\n        },\n        body: JSON.stringify({\n          email: email.toLowerCase(),\n          name: name,\n          login_method: loginMethod,\n          subscription_status: 'free'\n        }),\n      });\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('API registration failed:', response.status, errorText);\n        \n        // If email already exists, try to get the existing user\n        if (response.status === 400 && errorText.includes('Email already exists')) {\n          console.log('User already exists, fetching existing user...');\n          const existingUser = await getUserByEmail(email.toLowerCase(), bearerToken);\n          \n          if (existingUser) {\n            // Return existing user data\n            const user = {\n              id: existingUser.id || existingUser.user_id || Date.now(),\n              email: email.toLowerCase(),\n              preferred_login_method: loginMethod,\n              subscription_status: existingUser.subscription_status || 'free',\n              created_at: existingUser.created_at || new Date().toISOString(),\n              updated_at: new Date().toISOString()\n            };\n            \n            return { user, isNewUser: false };\n          }\n        }\n        \n        throw new Error(`Registration failed: ${response.status} ${errorText}`);\n      }\n\n      const userData = await response.json();\n      \n      // For backward compatibility, return a user object that matches the expected structure\n      const user = {\n        id: userData.id || userData.user_id || Date.now(), // Fallback ID if API doesn't return one\n        email: email.toLowerCase(),\n        preferred_login_method: loginMethod,\n        subscription_status: 'free',\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      };\n\n      // Check if this is a new user by looking at the API response\n      const isNewUser = response.status === 201; // 201 = Created, 200 = Updated\n      \n      return { user, isNewUser };\n    }\n\n    const updatePreferredLoginMethod = async (email: string, method: string, apiKey: string) => {\n      try {\n        const response = await fetch(`https://apiv2.affensus.com/api/auth/user/email/${encodeURIComponent(email)}/login-method`, {\n          method: 'PUT',\n          headers: {\n            'Authorization': `Bearer ${apiKey}`,\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            login_method: method\n          }),\n        })\n\n        return response.ok\n      } catch (error) {\n        console.error('Error updating preferred login method:', error)\n        return false\n      }\n    }\n\n    // If this is a paid user, try to link with Stripe customer\n    if (paidParam === 'true' && sessionId) {\n      try {\n        const stripeSecretKey = env.STRIPE_SECRET_KEY\n        if (stripeSecretKey) {\n          const sessionResponse = await fetch(`https://api.stripe.com/v1/checkout/sessions/${sessionId}`, {\n            headers: {\n              'Authorization': `Bearer ${stripeSecretKey}`,\n            },\n          })\n          \n          if (sessionResponse.ok) {\n            const session = await sessionResponse.json()\n            if (session.customer) {\n              // Update user with Stripe customer ID\n              await db.prepare(`\n                UPDATE users \n                SET stripe_customer_id = ?, updated_at = datetime('now')\n                WHERE email = ?\n              `).bind(session.customer, userInfo.email.toLowerCase()).run()\n            }\n          }\n        }\n      } catch (error) {\n        console.error('Error linking Stripe customer:', error)\n        // Continue without Stripe customer ID\n      }\n    }\n\n    // Create or update user\n    const { user, isNewUser } = await createUser(db, userInfo.email.toLowerCase(), 'google')\n\n    // Update user's preferred login method\n    await updatePreferredLoginMethod(userInfo.email.toLowerCase(), 'google', env.AFFENSUS_CREDENTIALS_PASSWORD)\n\n    // Check for pending payments after user creation/update\n    await processPendingPayments(db, userInfo.email.toLowerCase(), user.id, env.STRIPE_SECRET_KEY)\n\n    // Send email notification for new users\n    if (isNewUser) {\n      const resendApiKey = env.RESEND_API_KEY\n      if (resendApiKey) {\n        try {\n          const { sendNewUserNotification } = await import('../shared/email-notifications')\n          await sendNewUserNotification(user.email, 'google', resendApiKey)\n        } catch (error) {\n          console.error('Failed to send new user notification:', error)\n          // Continue with normal flow even if email fails\n        }\n      } else {\n        console.log('New user registered but RESEND_API_KEY not configured - email notification skipped')\n      }\n    }\n\n    // Generate JWT token\n    const jwtSecret = env.JWT_SECRET\n    if (!jwtSecret) {\n      return new Response(null, {\n        status: 302,\n        headers: { 'Location': `${env.SITE_URL || 'http://localhost:3000'}/auth?error=jwt_not_configured` }\n      })\n    }\n\n    const jwtToken = await signJwt(\n      {\n        sub: user.id.toString(),\n        email: user.email,\n        login_method: 'google',\n      },\n      jwtSecret,\n      7 * 24 * 60 * 60 // 7 days\n    )\n\n    // Determine redirect URL based on whether this is a paid user\n    let redirectUrl = `${env.SITE_URL || 'http://localhost:3000'}/`\n    if (paidParam === 'true') {\n      redirectUrl = `${env.SITE_URL || 'http://localhost:3000'}/?paid=true&session_id=${sessionId}`\n    }\n\n    // Create HTML response with localStorage and redirect\n    const html = `\n      <!DOCTYPE html>\n      <html>\n      <head>\n        <title>Redirecting...</title>\n      </head>\n      <body>\n        <script>\n          localStorage.setItem('lastLoginMethod', 'google');\n          localStorage.setItem('lastLoginTime', new Date().toISOString());\n          ${paidParam === 'true' ? `localStorage.setItem('paidUser', 'true');` : ''}\n          // Force a hard refresh to ensure auth state is updated\n          window.location.replace('${redirectUrl}');\n        </script>\n        <p>Redirecting...</p>\n      </body>\n      </html>\n    `\n    \n    // Set cookie with appropriate security settings\n    const isProduction = env.SITE_URL?.startsWith('https://') || false\n    const secureFlag = isProduction ? 'Secure; ' : ''\n    \n    // Set cookies using Headers object for proper multiple cookie handling\n    const headers = new Headers({\n      'Content-Type': 'text/html'\n    })\n    \n    // URL encode the JWT token to prevent issues with = signs in cookies\n    const encodedToken = encodeURIComponent(jwtToken)\n    const cookieValue = `auth-token=${encodedToken}; HttpOnly; ${secureFlag}SameSite=Lax; Max-Age=${7 * 24 * 60 * 60}; Path=/`\n    \n    // Set auth token cookie\n    headers.append('Set-Cookie', cookieValue)\n    \n    // Clear oauth_state cookie\n    headers.append('Set-Cookie', `oauth_state=; HttpOnly; ${secureFlag}SameSite=Lax; Max-Age=0; Path=/`)\n\n    return new Response(html, {\n      status: 200,\n      headers,\n    })\n\n  } catch (error) {\n    console.error('Error processing Google OAuth callback:', error)\n    return new Response(null, {\n      status: 302,\n      headers: { 'Location': `${context.env.SITE_URL || 'http://localhost:3000'}/auth?error=internal_error` }\n    })\n  }\n} ", "import { NextRequest } from 'next/server'\n\nexport async function onRequestGet(context: { request: Request; env: any; params: { courseId: string } }) {\n  try {\n    const { request, env, params } = context\n    const { searchParams } = new URL(request.url)\n    const userId = searchParams.get('userId')\n    \n    if (!userId) {\n      return new Response(JSON.stringify({ \n        success: false, \n        error: 'User ID is required' \n      }), { \n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    const db = env.DB\n    \n    // Get or create progress record for this user and course\n    let progress = await db.prepare(`\n      SELECT * FROM user_course_progress \n      WHERE user_id = ? AND course_id = ?\n    `).bind(userId, params.courseId).first()\n\n    if (!progress) {\n      // Create initial progress record\n      const result = await db.prepare(`\n        INSERT INTO user_course_progress (user_id, course_id, current_lesson_id, current_section_id, completed_lessons)\n        VALUES (?, ?, ?, ?, ?)\n      `).bind(userId, params.courseId, null, null, '[]').run()\n      \n      progress = {\n        user_id: userId,\n        course_id: params.courseId,\n        current_lesson_id: null,\n        current_section_id: null,\n        completed_lessons: '[]',\n        last_accessed_at: new Date().toISOString(),\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      }\n    }\n\n    // Parse completed lessons JSON\n    const completedLessons = JSON.parse(progress.completed_lessons || '[]')\n\n    return new Response(JSON.stringify({\n      success: true,\n      data: {\n        currentLessonId: progress.current_lesson_id,\n        currentSectionId: progress.current_section_id,\n        completedLessons,\n        lastAccessedAt: progress.last_accessed_at\n      }\n    }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    })\n\n  } catch (error) {\n    console.error('Error fetching user progress:', error)\n    return new Response(JSON.stringify({ \n      success: false, \n      error: 'Failed to fetch user progress' \n    }), { \n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    })\n  }\n}\n\nexport async function onRequestPost(context: { request: Request; env: any; params: { courseId: string } }) {\n  try {\n    const { request, env, params } = context\n    const { searchParams } = new URL(request.url)\n    const userId = searchParams.get('userId')\n    \n    if (!userId) {\n      return new Response(JSON.stringify({ \n        success: false, \n        error: 'User ID is required' \n      }), { \n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    const body = await request.json()\n    const { lessonId, sectionId, action } = body\n\n    if (!lessonId || !action) {\n      return new Response(JSON.stringify({ \n        success: false, \n        error: 'Lesson ID and action are required' \n      }), { \n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    const db = env.DB\n    \n    // Get current progress\n    let progress = await db.prepare(`\n      SELECT * FROM user_course_progress \n      WHERE user_id = ? AND course_id = ?\n    `).bind(userId, params.courseId).first()\n\n    if (!progress) {\n      // Create initial progress record\n      await db.prepare(`\n        INSERT INTO user_course_progress (user_id, course_id, current_lesson_id, current_section_id, completed_lessons)\n        VALUES (?, ?, ?, ?, ?)\n      `).bind(userId, params.courseId, lessonId, sectionId || null, '[]').run()\n      \n      progress = {\n        user_id: userId,\n        course_id: params.courseId,\n        current_lesson_id: lessonId,\n        current_section_id: sectionId || null,\n        completed_lessons: '[]',\n        last_accessed_at: new Date().toISOString(),\n        created_at: new Date().toISOString(),\n        updated_at: new Date().toISOString()\n      }\n    }\n\n    // Parse current completed lessons\n    const completedLessons = JSON.parse(progress.completed_lessons || '[]')\n    let updatedCompletedLessons = [...completedLessons]\n    let updatedCurrentLessonId = progress.current_lesson_id\n    let updatedCurrentSectionId = progress.current_section_id\n\n    // Handle different actions\n    switch (action) {\n      case 'start':\n        // User started a lesson\n        updatedCurrentLessonId = lessonId\n        updatedCurrentSectionId = sectionId || null\n        break\n        \n      case 'complete':\n        // User completed a lesson\n        if (!completedLessons.includes(lessonId)) {\n          updatedCompletedLessons.push(lessonId)\n        }\n        updatedCurrentLessonId = lessonId\n        updatedCurrentSectionId = sectionId || null\n        break\n        \n      case 'update_section':\n        // User updated section within a lesson\n        updatedCurrentLessonId = lessonId\n        updatedCurrentSectionId = sectionId || null\n        break\n        \n      default:\n        return new Response(JSON.stringify({ \n          success: false, \n          error: 'Invalid action' \n        }), { \n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        })\n    }\n\n    // Update progress in database\n    await db.prepare(`\n      UPDATE user_course_progress \n      SET current_lesson_id = ?, \n          current_section_id = ?, \n          completed_lessons = ?, \n          last_accessed_at = CURRENT_TIMESTAMP,\n          updated_at = CURRENT_TIMESTAMP\n      WHERE user_id = ? AND course_id = ?\n    `).bind(\n      updatedCurrentLessonId,\n      updatedCurrentSectionId,\n      JSON.stringify(updatedCompletedLessons),\n      userId,\n      params.courseId\n    ).run()\n\n    return new Response(JSON.stringify({\n      success: true,\n      data: {\n        currentLessonId: updatedCurrentLessonId,\n        currentSectionId: updatedCurrentSectionId,\n        completedLessons: updatedCompletedLessons,\n        lastAccessedAt: new Date().toISOString()\n      }\n    }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    })\n\n  } catch (error) {\n    console.error('Error updating user progress:', error)\n    return new Response(JSON.stringify({ \n      success: false, \n      error: 'Failed to update user progress' \n    }), { \n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    })\n  }\n} ", "// API endpoint for job monitoring with real-time updates\nexport async function onRequestOptions() {\n  return new Response(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n    }\n  });\n}\n\nexport interface JobMonitorResponse {\n  job_id: string;\n  status: 'queued' | 'processing' | 'completed' | 'failed';\n  queue_position?: number;\n  progress?: number;\n  message?: string;\n  created_at: string;\n  started_at?: string;\n  completed_at?: string;\n  error?: string;\n  result?: string | {\n    success?: boolean;\n    message?: string;\n    new_merchants?: number;\n    new_approved?: number;\n    deleted_merchants?: number;\n    new_promotions?: number;\n  };\n  queue_info: {\n    total_queued: number;\n    currently_processing: number;\n    total_waiting: number;\n    average_wait_time?: number;\n    estimated_completion?: string;\n  };\n}\n\n// GET /api/job/[job_id]/monitor - Monitor a job with real-time updates\nexport async function onRequestGet(context: { request: Request; env: { AFFENSUS_CREDENTIALS_PASSWORD: string }; params: { job_id: string } }) {\n  try {\n    const { request, env, params } = context;\n    const jobId = params.job_id;\n    \n    if (!jobId) {\n      return new Response(JSON.stringify({\n        success: false,\n        error: 'Job ID is required'\n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    // Use external API\n    const bearerToken = env.AFFENSUS_CREDENTIALS_PASSWORD;\n    if (!bearerToken) {\n      throw new Error('AFFENSUS_CREDENTIALS_PASSWORD not configured');\n    }\n\n    console.log('Making API request to:', `https://apiv2.affensus.com/api/job/${jobId}/monitor`);\n\n    let response;\n    try {\n      response = await fetch(`https://apiv2.affensus.com/api/job/${jobId}/monitor`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${bearerToken}`,\n        },\n      });\n    } catch (fetchError) {\n      console.error('Fetch error:', fetchError);\n      const errorMessage = fetchError instanceof Error ? fetchError.message : 'Unknown fetch error';\n      throw new Error(`Network error: ${errorMessage}`);\n    }\n\n    // Handle 204 No Content response (job completed/deleted)\n    if (response.status === 204) {\n      return new Response(JSON.stringify({\n        job_id: jobId,\n        status: 'completed',\n        message: 'Job completed successfully',\n        queue_info: {\n          currently_processing: 0,\n          total_queued: 0,\n          total_waiting: 0\n        }\n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('API Response Error:', {\n        status: response.status,\n        statusText: response.statusText,\n        body: errorText\n      });\n      throw new Error(`External API error: ${response.status} ${response.statusText} - ${errorText}`);\n    }\n\n    const data = await response.json() as JobMonitorResponse;\n    \n    // Ensure job_id is always included in the response\n    if (!data.job_id) {\n      data.job_id = jobId;\n    }\n    \n    // Parse the result field if it's a string\n    if (data.result && typeof data.result === 'string') {\n      try {\n        const parsedResult = JSON.parse(data.result);\n        // Extract import_result if it exists\n        if (parsedResult.import_result) {\n          data.result = parsedResult.import_result;\n        } else {\n          data.result = parsedResult;\n        }\n      } catch (e) {\n        console.error('Failed to parse result JSON:', e);\n      }\n    }\n    \n    console.log('Job Monitor API Response:', JSON.stringify(data, null, 2));\n    \n    return new Response(JSON.stringify(data), {\n      status: 200,\n      headers: {\n        'Content-Type': 'application/json',\n        'Cache-Control': 'no-store, max-age=0',\n      },\n    });\n  } catch (error) {\n    console.error('Job monitor error:', error);\n    return new Response(JSON.stringify({ \n      success: false, \n      error: error instanceof Error ? error.message : 'Internal server error' \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' },\n    });\n  }\n}\n", "// API endpoint for job status monitoring\nexport async function onRequestOptions() {\n  return new Response(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n    }\n  });\n}\n\nexport interface JobStatus {\n  job_id: string;\n  status: 'queued' | 'processing' | 'completed' | 'failed';\n  queue_position?: number;\n  progress?: number;\n  message?: string;\n  created_at: string;\n  started_at?: string;\n  completed_at?: string;\n  error?: string;\n  result?: string | {\n    success?: boolean;\n    message?: string;\n    new_merchants?: number;\n    new_approved?: number;\n    deleted_merchants?: number;\n    new_promotions?: number;\n  };\n}\n\n// GET /api/job/[job_id]/status - Get current status of a specific job\nexport async function onRequestGet(context: { request: Request; env: { AFFENSUS_CREDENTIALS_PASSWORD: string }; params: { job_id: string } }) {\n  try {\n    const { request, env, params } = context;\n    const jobId = params.job_id;\n    \n    if (!jobId) {\n      return new Response(JSON.stringify({\n        success: false,\n        error: 'Job ID is required'\n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    // Use external API\n    const bearerToken = env.AFFENSUS_CREDENTIALS_PASSWORD;\n    if (!bearerToken) {\n      throw new Error('AFFENSUS_CREDENTIALS_PASSWORD not configured');\n    }\n\n    console.log('Making API request to:', `https://apiv2.affensus.com/api/job/${jobId}/status`);\n\n    let response;\n    try {\n      response = await fetch(`https://apiv2.affensus.com/api/job/${jobId}/status`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${bearerToken}`,\n        },\n      });\n    } catch (fetchError) {\n      console.error('Fetch error:', fetchError);\n      const errorMessage = fetchError instanceof Error ? fetchError.message : 'Unknown fetch error';\n      throw new Error(`Network error: ${errorMessage}`);\n    }\n\n    // Handle 204 No Content response (job completed/deleted)\n    if (response.status === 204) {\n      return new Response(JSON.stringify({\n        job_id: jobId,\n        status: 'completed',\n        message: 'Job completed successfully'\n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('API Response Error:', {\n        status: response.status,\n        statusText: response.statusText,\n        body: errorText\n      });\n      throw new Error(`External API error: ${response.status} ${response.statusText} - ${errorText}`);\n    }\n\n    const data = await response.json() as JobStatus;\n    \n    // Ensure job_id is always included in the response\n    if (!data.job_id) {\n      data.job_id = jobId;\n    }\n    \n    // Parse the result field if it's a string\n    if (data.result && typeof data.result === 'string') {\n      try {\n        const parsedResult = JSON.parse(data.result);\n        // Extract import_result if it exists\n        if (parsedResult.import_result) {\n          data.result = parsedResult.import_result;\n        } else {\n          data.result = parsedResult;\n        }\n      } catch (e) {\n        console.error('Failed to parse result JSON:', e);\n      }\n    }\n    \n    console.log('Job Status API Response:', JSON.stringify(data, null, 2));\n    \n    return new Response(JSON.stringify(data), {\n      status: 200,\n      headers: {\n        'Content-Type': 'application/json',\n        'Cache-Control': 'no-store, max-age=0',\n      },\n    });\n  } catch (error) {\n    console.error('Job status error:', error);\n    return new Response(JSON.stringify({ \n      success: false, \n      error: error instanceof Error ? error.message : 'Internal server error' \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' },\n    });\n  }\n}\n", "// API endpoint for marking all notifications as read\nexport async function onRequestOptions() {\n  return new Response(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'PUT, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n    }\n  });\n}\n\nexport async function onRequestPut(context: { \n  request: Request; \n  env: { AFFENSUS_CREDENTIALS_PASSWORD: string };\n  params: { project_id: string }\n}) {\n  try {\n    const { request, env, params } = context;\n    const { project_id } = params;\n\n    if (!project_id) {\n      return new Response(JSON.stringify({ \n        success: false, \n        error: 'Project ID is required' \n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' },\n      });\n    }\n\n    // Use external API\n    const bearerToken = env.AFFENSUS_CREDENTIALS_PASSWORD;\n    if (!bearerToken) {\n      throw new Error('AFFENSUS_CREDENTIALS_PASSWORD not configured');\n    }\n\n    console.log('Making API request to:', `https://apiv2.affensus.com/api/notifications/${project_id}/read-all`);\n\n    let response;\n    try {\n      response = await fetch(`https://apiv2.affensus.com/api/notifications/${project_id}/read-all`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${bearerToken}`,\n        },\n      });\n    } catch (fetchError) {\n      console.error('Fetch error:', fetchError);\n      const errorMessage = fetchError instanceof Error ? fetchError.message : 'Unknown fetch error';\n      throw new Error(`Network error: ${errorMessage}`);\n    }\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('API Response Error:', {\n        status: response.status,\n        statusText: response.statusText,\n        body: errorText\n      });\n      throw new Error(`External API error: ${response.status} ${response.statusText} - ${errorText}`);\n    }\n\n    const data = await response.json();\n    \n    return new Response(JSON.stringify(data), {\n      status: 200,\n      headers: {\n        'Content-Type': 'application/json',\n        'Cache-Control': 'no-store, max-age=0',\n      },\n    });\n  } catch (error) {\n    console.error('Mark all notifications as read error:', error);\n    return new Response(JSON.stringify({ \n      success: false, \n      error: error instanceof Error ? error.message : 'Internal server error' \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' },\n    });\n  }\n}\n", "// Project credentials summary API - using external API server\nexport async function onRequestOptions() {\n  return new Response(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n    },\n  });\n}\n\n// GET /api/projects/[project_id]/credentials-summary - Get project credentials summary by project ID\nexport async function onRequestGet(context: { request: Request; env: any; params: any }) {\n  try {\n    const { request, env, params } = context;\n    const projectId = params.project_id;\n    \n    if (!projectId) {\n      return new Response(JSON.stringify({\n        success: false,\n        error: 'Project ID is required'\n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    // Use external API instead of D1\n    const bearerToken = env.AFFENSUS_CREDENTIALS_PASSWORD;\n    if (!bearerToken) {\n      throw new Error('AFFENSUS_CREDENTIALS_PASSWORD not configured');\n    }\n\n    console.log('Making API request to:', `https://apiv2.affensus.com/api/projects/${projectId}/credentials-summary`);\n    console.log('Headers:', {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${bearerToken.substring(0, 8)}...`\n    });\n\n    let response;\n    try {\n      response = await fetch(`https://apiv2.affensus.com/api/projects/${projectId}/credentials-summary`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${bearerToken}`,\n        },\n      });\n    } catch (fetchError) {\n      console.error('Fetch error:', fetchError);\n      const errorMessage = fetchError instanceof Error ? fetchError.message : 'Unknown fetch error';\n      throw new Error(`Network error: ${errorMessage}`);\n    }\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('API Response Error:', {\n        status: response.status,\n        statusText: response.statusText,\n        body: errorText\n      });\n      throw new Error(`External API error: ${response.status} ${response.statusText} - ${errorText}`);\n    }\n\n    const data = await response.json();\n    \n    return new Response(JSON.stringify({\n      success: true,\n      data: data\n    }), {\n      status: 200,\n      headers: { \n        'Content-Type': 'application/json',\n        'Cache-Control': 'private, max-age=300, s-maxage=0' // 5 minutes cache for project credentials data\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching project credentials summary:', error);\n    return new Response(JSON.stringify({\n      success: false,\n      error: 'Failed to fetch project credentials summary'\n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n", "// Project link-rot API - using external API server\nexport async function onRequestOptions() {\n  return new Response(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n    },\n  });\n}\n\n// GET /api/projects/[project_id]/link-rot - Get project link-rot data by project ID\nexport async function onRequestGet(context: { request: Request; env: any; params: any }) {\n  try {\n    const { request, env, params } = context;\n    const projectId = params.project_id;\n    \n    if (!projectId) {\n      return new Response(JSON.stringify({\n        success: false,\n        error: 'Project ID is required'\n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    // Use external API instead of D1\n    const bearerToken = env.AFFENSUS_CREDENTIALS_PASSWORD;\n    if (!bearerToken) {\n      throw new Error('AFFENSUS_CREDENTIALS_PASSWORD not configured');\n    }\n\n    console.log('Making API request to:', `https://apiv2.affensus.com/api/projects/${projectId}/link-rot`);\n    console.log('Headers:', {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${bearerToken.substring(0, 8)}...`\n    });\n\n    let response;\n    try {\n      response = await fetch(`https://apiv2.affensus.com/api/projects/${projectId}/link-rot`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${bearerToken}`,\n        },\n      });\n    } catch (fetchError) {\n      console.error('Fetch error:', fetchError);\n      const errorMessage = fetchError instanceof Error ? fetchError.message : 'Unknown fetch error';\n      throw new Error(`Network error: ${errorMessage}`);\n    }\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('API Response Error:', {\n        status: response.status,\n        statusText: response.statusText,\n        body: errorText\n      });\n      throw new Error(`External API error: ${response.status} ${response.statusText} - ${errorText}`);\n    }\n\n    const data = await response.json();\n    \n    // Log entire API response to terminal (not console)\n    console.log('=== LINK ROT API RESPONSE ===');\n    console.log(JSON.stringify(data, null, 2));\n    console.log('=== END API RESPONSE ===');\n    \n    return new Response(JSON.stringify({\n      success: true,\n      data: data\n    }), {\n      status: 200,\n      headers: { \n        'Content-Type': 'application/json',\n        'Cache-Control': 'private, max-age=300, s-maxage=0' // 5 minutes cache for project link-rot data\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching project link-rot data:', error);\n    return new Response(JSON.stringify({\n      success: false,\n      error: 'Failed to fetch project link-rot data'\n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\n", "// Project merchants API - using external API server\nexport async function onRequestOptions() {\n  return new Response(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n    },\n  });\n}\n\n// GET /api/projects/[project_id]/merchants?network_id=<network_id>&credential_id=<credential_id> - Get project merchants\nexport async function onRequestGet(context: { request: Request; env: any; params: any }) {\n  try {\n    const { request, env, params } = context;\n    const projectId = params.project_id;\n    \n    if (!projectId) {\n      return new Response(JSON.stringify({\n        success: false,\n        error: 'Project ID is required'\n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    // Get query parameters\n    const url = new URL(request.url);\n    const networkId = url.searchParams.get('network_id');\n    const credentialId = url.searchParams.get('credential_id');\n\n    if (!networkId || !credentialId) {\n      return new Response(JSON.stringify({\n        success: false,\n        error: 'network_id and credential_id are required'\n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    // Use external API instead of D1\n    const bearerToken = env.AFFENSUS_CREDENTIALS_PASSWORD;\n    if (!bearerToken) {\n      throw new Error('AFFENSUS_CREDENTIALS_PASSWORD not configured');\n    }\n\n    const apiUrl = `https://apiv2.affensus.com/api/projects/${projectId}/merchants?network_id=${networkId}&credential_id=${credentialId}`;\n    console.log('Making API request to:', apiUrl);\n    console.log('Headers:', {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${bearerToken.substring(0, 8)}...`\n    });\n\n    let response;\n    try {\n      response = await fetch(apiUrl, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${bearerToken}`,\n        },\n      });\n    } catch (fetchError) {\n      console.error('Fetch error:', fetchError);\n      const errorMessage = fetchError instanceof Error ? fetchError.message : 'Unknown fetch error';\n      throw new Error(`Network error: ${errorMessage}`);\n    }\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('API Response Error:', {\n        status: response.status,\n        statusText: response.statusText,\n        body: errorText\n      });\n      throw new Error(`External API error: ${response.status} ${response.statusText} - ${errorText}`);\n    }\n\n    const data = await response.json();\n    \n    // Log the response for debugging\n    console.log('Merchants API Response:', JSON.stringify(data, null, 2));\n    \n    return new Response(JSON.stringify({\n      success: true,\n      data: data\n    }), {\n      status: 200,\n      headers: { \n        'Content-Type': 'application/json',\n        'Cache-Control': 'private, max-age=300, s-maxage=0' // 5 minutes cache for merchants data\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching project merchants:', error);\n    return new Response(JSON.stringify({\n      success: false,\n      error: 'Failed to fetch project merchants'\n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\n", "// Project networks API - using external API server\nexport async function onRequestOptions() {\n  return new Response(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n    },\n  });\n}\n\n// GET /api/projects/[project_id]/networks - Get project networks by project ID\nexport async function onRequestGet(context: { request: Request; env: any; params: any }) {\n  try {\n    const { request, env, params } = context;\n    const projectId = params.project_id;\n    \n    if (!projectId) {\n      return new Response(JSON.stringify({\n        success: false,\n        error: 'Project ID is required'\n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    // Use external API instead of D1\n    const bearerToken = env.AFFENSUS_CREDENTIALS_PASSWORD;\n    if (!bearerToken) {\n      throw new Error('AFFENSUS_CREDENTIALS_PASSWORD not configured');\n    }\n\n    console.log('Making API request to:', `https://apiv2.affensus.com/api/projects/${projectId}/networks`);\n    console.log('Headers:', {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${bearerToken.substring(0, 8)}...`\n    });\n\n    let response;\n    try {\n      response = await fetch(`https://apiv2.affensus.com/api/projects/${projectId}/networks`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${bearerToken}`,\n        },\n      });\n    } catch (fetchError) {\n      console.error('Fetch error:', fetchError);\n      const errorMessage = fetchError instanceof Error ? fetchError.message : 'Unknown fetch error';\n      throw new Error(`Network error: ${errorMessage}`);\n    }\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('API Response Error:', {\n        status: response.status,\n        statusText: response.statusText,\n        body: errorText\n      });\n      throw new Error(`External API error: ${response.status} ${response.statusText} - ${errorText}`);\n    }\n\n    const data = await response.json();\n    \n    return new Response(JSON.stringify({\n      success: true,\n      data: data\n    }), {\n      status: 200,\n      headers: { \n        'Content-Type': 'application/json',\n        'Cache-Control': 'private, max-age=300, s-maxage=0' // 5 minutes cache for networks data\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching project networks:', error);\n    return new Response(JSON.stringify({\n      success: false,\n      error: 'Failed to fetch project networks'\n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n", "// Project notifications API - using external API server\nexport async function onRequestOptions() {\n  return new Response(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n    },\n  });\n}\n\n// GET /api/projects/[project_id]/notifications - Get project notifications data by project ID\nexport async function onRequestGet(context: { request: Request; env: any; params: any }) {\n  try {\n    const { request, env, params } = context;\n    const projectId = params.project_id;\n    \n    if (!projectId) {\n      return new Response(JSON.stringify({\n        success: false,\n        error: 'Project ID is required'\n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    // Use external API instead of D1\n    const bearerToken = env.AFFENSUS_CREDENTIALS_PASSWORD;\n    if (!bearerToken) {\n      throw new Error('AFFENSUS_CREDENTIALS_PASSWORD not configured');\n    }\n\n    console.log('Making API request to:', `https://apiv2.affensus.com/api/projects/${projectId}/notifications`);\n    console.log('Headers:', {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${bearerToken.substring(0, 8)}...`\n    });\n\n    let response;\n    try {\n      response = await fetch(`https://apiv2.affensus.com/api/projects/${projectId}/notifications`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${bearerToken}`,\n        },\n      });\n    } catch (fetchError) {\n      console.error('Fetch error:', fetchError);\n      const errorMessage = fetchError instanceof Error ? fetchError.message : 'Unknown fetch error';\n      throw new Error(`Network error: ${errorMessage}`);\n    }\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('API Response Error:', {\n        status: response.status,\n        statusText: response.statusText,\n        body: errorText\n      });\n      throw new Error(`External API error: ${response.status} ${response.statusText} - ${errorText}`);\n    }\n\n    const data = await response.json();\n    \n    return new Response(JSON.stringify({\n      success: true,\n      data: data\n    }), {\n      status: 200,\n      headers: { \n        'Content-Type': 'application/json',\n        'Cache-Control': 'private, max-age=300, s-maxage=0' // 5 minutes cache for project notifications data\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching project notifications data:', error);\n    return new Response(JSON.stringify({\n      success: false,\n      error: 'Failed to fetch project notifications data'\n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\n\n", "// In-memory cache\nconst cache = new Map<string, { data: unknown; timestamp: number }>()\nconst CACHE_TTL = 5 * 60 * 1000 // 5 minutes\n\n// Track ongoing requests to prevent duplicates\nconst ongoingRequests = new Map<string, Promise<Response>>()\n\nexport async function onRequestOptions() {\n  return new Response(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n    },\n  })\n}\n\nexport async function onRequestGet(context: { request: Request; env: { AFFENSUS_CREDENTIALS_PASSWORD: string }; params: { project_id: string } }) {\n  const { params, request, env } = context\n  const projectId = params.project_id\n  const url = new URL(request.url)\n  const searchQuery = url.searchParams.get('q')\n\n  if (!searchQuery || searchQuery.length < 2) {\n    return new Response(JSON.stringify({ error: 'Query parameter \"q\" is required and must be at least 2 characters long' }), {\n      status: 400,\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n      },\n    })\n  }\n\n  const cacheKey = `search_${projectId}_${searchQuery}`\n\n  // Check cache first\n  const cached = cache.get(cacheKey)\n  if (cached && Date.now() - cached.timestamp < CACHE_TTL) {\n    return new Response(JSON.stringify(cached.data), {\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Cache-Control': 'public, max-age=300',\n      },\n    })\n  }\n\n  // Check if there's an ongoing request for this same search\n  if (ongoingRequests.has(cacheKey)) {\n    const response = await ongoingRequests.get(cacheKey)!\n    return response.clone()\n  }\n\n  // Create the request promise\n  const requestPromise = (async () => {\n    try {\n      const apiUrl = `https://apiv2.affensus.com/api/projects/${projectId}/search?q=${encodeURIComponent(searchQuery)}`\n      \n      const response = await fetch(apiUrl, {\n        method: 'GET',\n        headers: {\n          'Authorization': `Bearer ${env.AFFENSUS_CREDENTIALS_PASSWORD}`,\n          'Content-Type': 'application/json',\n        },\n      })\n\n      if (!response.ok) {\n        throw new Error(`API responded with status: ${response.status}`)\n      }\n\n      const data = await response.json()\n      \n      // Cache the result\n      cache.set(cacheKey, { data, timestamp: Date.now() })\n\n      return new Response(JSON.stringify(data), {\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'Cache-Control': 'public, max-age=300',\n        },\n      })\n    } catch (error) {\n      console.error('Error fetching search results:', error)\n      return new Response(JSON.stringify({ error: 'Failed to fetch search results' }), {\n        status: 500,\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n        },\n      })\n    } finally {\n      // Clean up the ongoing request\n      ongoingRequests.delete(cacheKey)\n    }\n  })()\n\n  // Store the ongoing request\n  ongoingRequests.set(cacheKey, requestPromise)\n\n  return requestPromise\n}\n", "export async function onRequestOptions() {\n  return new Response(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n    },\n  });\n}\n\nexport async function onRequestGet(context: { request: Request; env: any; params: any }) {\n  const { request, env, params } = context;\n  const { project_id, notification_id } = params;\n\n  try {\n    console.log('Project ID:', project_id);\n    console.log('Notification ID:', notification_id);\n\n    if (!project_id || !notification_id) {\n      return new Response(JSON.stringify({ \n        success: false, \n        error: 'project_id and notification_id are required' \n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    // Use the same environment variable for API auth\n    const password = env.AFFENSUS_CREDENTIALS_PASSWORD;\n    if (!password) {\n      return new Response(JSON.stringify({ \n        success: false, \n        error: 'AFFENSUS_CREDENTIALS_PASSWORD not configured' \n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    const apiUrl = `https://apiv2.affensus.com/api/notifications/${project_id}/${notification_id}`;\n\n    console.log('Making GET request to:', apiUrl);\n\n    const apiv2Response = await fetch(apiUrl, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${password}`,\n      }\n    });\n\n    if (!apiv2Response.ok) {\n      const errorText = await apiv2Response.text();\n      console.error('apiv2 error response:', errorText);\n      console.error('apiv2 status:', apiv2Response.status, apiv2Response.statusText);\n      return new Response(JSON.stringify({ \n        success: false, \n        error: `External API error: ${apiv2Response.status} ${apiv2Response.statusText}`,\n        details: errorText\n      }), {\n        status: apiv2Response.status,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    const responseData = await apiv2Response.json();\n\n    // Log the full response data to debug display_url issue\n    console.log('=== NOTIFICATION API RESPONSE DEBUG ===');\n    console.log('Full response data:', JSON.stringify(responseData, null, 2));\n    \n    // Log specific parts of the data structure\n    if (responseData.notification && responseData.notification.extra_data) {\n      console.log('=== EXTRA DATA DEBUG ===');\n      console.log('Extra data:', JSON.stringify(responseData.notification.extra_data, null, 2));\n      \n      if (responseData.notification.extra_data.new_merchants) {\n        console.log('=== NEW MERCHANTS DEBUG ===');\n        responseData.notification.extra_data.new_merchants.forEach((merchant: Record<string, unknown>, index: number) => {\n          console.log(`New Merchant ${index}:`, {\n            merchant_name: merchant.merchant_name,\n            merchant_display_url: merchant.merchant_display_url,\n            program_id: merchant.program_id\n          });\n        });\n      }\n      \n      if (responseData.notification.extra_data.status_changes) {\n        console.log('=== STATUS CHANGES DEBUG ===');\n        responseData.notification.extra_data.status_changes.forEach((change: Record<string, unknown>, index: number) => {\n          console.log(`Status Change ${index}:`, {\n            merchant_name: change.merchant_name,\n            merchant_display_url: change.merchant_display_url,\n            program_id: change.program_id\n          });\n        });\n      }\n      \n      if (responseData.notification.extra_data.removed_merchants) {\n        console.log('=== REMOVED MERCHANTS DEBUG ===');\n        responseData.notification.extra_data.removed_merchants.forEach((merchant: Record<string, unknown>, index: number) => {\n          console.log(`Removed Merchant ${index}:`, {\n            merchant_name: merchant.merchant_name,\n            merchant_display_url: merchant.merchant_display_url,\n            program_id: merchant.program_id\n          });\n        });\n      }\n    }\n\n    return new Response(JSON.stringify({ \n      success: true, \n      data: responseData \n    }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    });\n\n  } catch (error) {\n    console.error('Error fetching notification:', error);\n    return new Response(JSON.stringify({ \n      success: false, \n      error: 'Internal server error' \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\n", "export async function onRequestGet(context: any) {\n  try {\n    const { request, env } = context\n    \n    const FACEBOOK_APP_ID = env.FACEBOOK_APP_ID\n    const FACEBOOK_REDIRECT_URI = `${env.SITE_URL || 'http://localhost:3000'}/api/auth/facebook/callback`\n\n    if (!FACEBOOK_APP_ID) {\n      console.error('FACEBOOK_APP_ID not configured')\n      return new Response(JSON.stringify({ error: 'Facebook OAuth not configured' }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    // Generate state parameter for CSRF protection\n    const state = Math.random().toString(36).substring(2, 15)\n    \n    // Create OAuth URL\n    const authUrl = `https://www.facebook.com/v18.0/dialog/oauth?` +\n      `client_id=${FACEBOOK_APP_ID}&` +\n      `redirect_uri=${encodeURIComponent(FACEBOOK_REDIRECT_URI)}&` +\n      `response_type=code&` +\n      `scope=${encodeURIComponent('email')}&` +\n      `state=${state}`\n\n    // Create response with redirect and state cookie\n    const response = new Response(null, {\n      status: 302,\n      headers: {\n        'Location': authUrl,\n        'Set-Cookie': `oauth_state=${state}; HttpOnly; ${env.SITE_URL?.startsWith('https://') ? 'Secure; ' : ''}SameSite=Lax; Max-Age=600; Path=/`\n      }\n    })\n\n    return response\n\n  } catch (error) {\n    console.error('Error initiating Facebook OAuth:', error)\n    return new Response(JSON.stringify({ error: 'Internal server error' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    })\n  }\n} ", "function generateState(): string {\n  // Generate a random state for CSRF protection\n  const array = new Uint8Array(32)\n  crypto.getRandomValues(array)\n  return Array.from(array, byte => byte.toString(16).padStart(2, '0')).join('')\n}\n\nexport async function onRequestGet(context: any) {\n  try {\n    const { env } = context\n\n    const GITHUB_CLIENT_ID = env.GITHUB_CLIENT_ID\n    const GITHUB_REDIRECT_URI = `${env.SITE_URL || 'http://localhost:3000'}/api/auth/github/callback`\n\n    if (!GITHUB_CLIENT_ID) {\n      return new Response(null, {\n        status: 302,\n        headers: { 'Location': `${env.SITE_URL || 'http://localhost:3000'}/auth?error=oauth_not_configured` }\n      })\n    }\n\n    // Generate state for CSRF protection\n    const state = generateState()\n\n    // GitHub OAuth URL\n    const authUrl = `https://github.com/login/oauth/authorize?client_id=${GITHUB_CLIENT_ID}&redirect_uri=${encodeURIComponent(GITHUB_REDIRECT_URI)}&scope=user:email&state=${state}`\n\n    return new Response(null, {\n      status: 302,\n      headers: {\n        'Location': authUrl,\n        'Set-Cookie': `oauth_state=${state}; HttpOnly; ${env.SITE_URL?.startsWith('https://') ? 'Secure; ' : ''}SameSite=Lax; Max-Age=600; Path=/`\n      }\n    })\n\n  } catch (error) {\n    console.error('Error initiating GitHub OAuth:', error)\n    return new Response(null, {\n      status: 302,\n      headers: { 'Location': `${context.env.SITE_URL || 'http://localhost:3000'}/auth?error=oauth_not_configured` }\n    })\n  }\n} ", "export async function onRequestGet(context: any) {\n  try {\n    const { request, env } = context\n    \n    const GOOGLE_CLIENT_ID = env.GOOGLE_CLIENT_ID\n    const GOOGLE_REDIRECT_URI = `${env.SITE_URL || 'http://localhost:3000'}/api/auth/google/callback`\n\n    if (!GOOGLE_CLIENT_ID) {\n      console.error('GOOGLE_CLIENT_ID not configured')\n      return new Response(JSON.stringify({ error: 'Google OAuth not configured' }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    // Generate state parameter for CSRF protection\n    const state = Math.random().toString(36).substring(2, 15)\n    \n    // Create OAuth URL\n    const authUrl = `https://accounts.google.com/o/oauth2/v2/auth?` +\n      `client_id=${GOOGLE_CLIENT_ID}&` +\n      `redirect_uri=${encodeURIComponent(GOOGLE_REDIRECT_URI)}&` +\n      `response_type=code&` +\n      `scope=${encodeURIComponent('openid email profile')}&` +\n      `state=${state}&` +\n      `access_type=offline&` +\n      `prompt=consent`\n\n    // Create response with redirect and state cookie\n    const response = new Response(null, {\n      status: 302,\n      headers: {\n        'Location': authUrl,\n        'Set-Cookie': `oauth_state=${state}; HttpOnly; ${env.SITE_URL?.startsWith('https://') ? 'Secure; ' : ''}SameSite=Lax; Max-Age=600; Path=/`\n      }\n    })\n\n    return response\n\n  } catch (error) {\n    console.error('Error initiating Google OAuth:', error)\n    return new Response(JSON.stringify({ error: 'Internal server error' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    })\n  }\n} ", "// User registration API - using external API server\nexport async function onRequestOptions() {\n  return new Response(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'POST, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n    },\n  });\n}\n\n// POST /api/auth/register - Register a new user\nexport async function onRequestPost(context: { request: Request; env: any }) {\n  try {\n    const { request, env } = context;\n    const body = await request.json();\n    \n    // Validate required fields\n    if (!body.email || !body.login_method) {\n      return new Response(JSON.stringify({\n        success: false,\n        error: 'email and login_method are required'\n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    // Use external API instead of D1\n    const bearerToken = env.AFFENSUS_CREDENTIALS_PASSWORD;\n    if (!bearerToken) {\n      throw new Error('AFFENSUS_CREDENTIALS_PASSWORD not configured');\n    }\n\n    console.log('Making API request to:', 'https://apiv2.affensus.com/api/auth/register');\n    console.log('Request body:', { \n      email: body.email, \n      name: body.name,\n      login_method: body.login_method,\n      subscription_status: body.subscription_status || 'free'\n    });\n    console.log('Headers:', {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${bearerToken.substring(0, 8)}...`\n    });\n\n    let response;\n    try {\n      response = await fetch('https://apiv2.affensus.com/api/auth/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${bearerToken}`,\n        },\n        body: JSON.stringify({\n          email: body.email,\n          name: body.name,\n          login_method: body.login_method,\n          subscription_status: body.subscription_status || 'free'\n        }),\n      });\n    } catch (fetchError) {\n      console.error('Fetch error:', fetchError);\n      const errorMessage = fetchError instanceof Error ? fetchError.message : 'Unknown fetch error';\n      throw new Error(`Network error: ${errorMessage}`);\n    }\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('API Response Error:', {\n        status: response.status,\n        statusText: response.statusText,\n        body: errorText\n      });\n      throw new Error(`External API error: ${response.status} ${response.statusText} - ${errorText}`);\n    }\n\n    const data = await response.json();\n    \n    return new Response(JSON.stringify({\n      success: true,\n      data: data\n    }), {\n      status: 201,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  } catch (error) {\n    console.error('Error registering user:', error);\n    return new Response(JSON.stringify({\n      success: false,\n      error: 'Failed to register user'\n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\n\n\n\n", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/*globals window, global, require*/\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\n\t    var crypto;\n\n\t    // Native crypto from window (Browser)\n\t    if (typeof window !== 'undefined' && window.crypto) {\n\t        crypto = window.crypto;\n\t    }\n\n\t    // Native crypto in web worker (Browser)\n\t    if (typeof self !== 'undefined' && self.crypto) {\n\t        crypto = self.crypto;\n\t    }\n\n\t    // Native crypto from worker\n\t    if (typeof globalThis !== 'undefined' && globalThis.crypto) {\n\t        crypto = globalThis.crypto;\n\t    }\n\n\t    // Native (experimental IE 11) crypto from window (Browser)\n\t    if (!crypto && typeof window !== 'undefined' && window.msCrypto) {\n\t        crypto = window.msCrypto;\n\t    }\n\n\t    // Native crypto from global (NodeJS)\n\t    if (!crypto && typeof global !== 'undefined' && global.crypto) {\n\t        crypto = global.crypto;\n\t    }\n\n\t    // Native crypto import via require (NodeJS)\n\t    if (!crypto && typeof require === 'function') {\n\t        try {\n\t            crypto = require('crypto');\n\t        } catch (err) {}\n\t    }\n\n\t    /*\n\t     * Cryptographically secure pseudorandom number generator\n\t     *\n\t     * As Math.random() is cryptographically not safe to use\n\t     */\n\t    var cryptoSecureRandomInt = function () {\n\t        if (crypto) {\n\t            // Use getRandomValues method (Browser)\n\t            if (typeof crypto.getRandomValues === 'function') {\n\t                try {\n\t                    return crypto.getRandomValues(new Uint32Array(1))[0];\n\t                } catch (err) {}\n\t            }\n\n\t            // Use randomBytes method (NodeJS)\n\t            if (typeof crypto.randomBytes === 'function') {\n\t                try {\n\t                    return crypto.randomBytes(4).readInt32LE();\n\t                } catch (err) {}\n\t            }\n\t        }\n\n\t        throw new Error('Native crypto module could not be used to get secure random number.');\n\t    };\n\n\t    /*\n\t     * Local polyfill of Object.create\n\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {}\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }());\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var j = 0; j < thatSigBytes; j += 4) {\n\t                    thisWords[(thisSigBytes + j) >>> 2] = thatWords[j >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            for (var i = 0; i < nBytes; i += 4) {\n\t                words.push(cryptoSecureRandomInt());\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            var processedWords;\n\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var X32WordArray = C_lib.WordArray;\n\n\t    /**\n\t     * x64 namespace.\n\t     */\n\t    var C_x64 = C.x64 = {};\n\n\t    /**\n\t     * A 64-bit word.\n\t     */\n\t    var X64Word = C_x64.Word = Base.extend({\n\t        /**\n\t         * Initializes a newly created 64-bit word.\n\t         *\n\t         * @param {number} high The high 32 bits.\n\t         * @param {number} low The low 32 bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);\n\t         */\n\t        init: function (high, low) {\n\t            this.high = high;\n\t            this.low = low;\n\t        }\n\n\t        /**\n\t         * Bitwise NOTs this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after negating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var negated = x64Word.not();\n\t         */\n\t        // not: function () {\n\t            // var high = ~this.high;\n\t            // var low = ~this.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise ANDs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to AND with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after ANDing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var anded = x64Word.and(anotherX64Word);\n\t         */\n\t        // and: function (word) {\n\t            // var high = this.high & word.high;\n\t            // var low = this.low & word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise ORs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to OR with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after ORing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var ored = x64Word.or(anotherX64Word);\n\t         */\n\t        // or: function (word) {\n\t            // var high = this.high | word.high;\n\t            // var low = this.low | word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise XORs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to XOR with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after XORing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var xored = x64Word.xor(anotherX64Word);\n\t         */\n\t        // xor: function (word) {\n\t            // var high = this.high ^ word.high;\n\t            // var low = this.low ^ word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Shifts this word n bits to the left.\n\t         *\n\t         * @param {number} n The number of bits to shift.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after shifting.\n\t         *\n\t         * @example\n\t         *\n\t         *     var shifted = x64Word.shiftL(25);\n\t         */\n\t        // shiftL: function (n) {\n\t            // if (n < 32) {\n\t                // var high = (this.high << n) | (this.low >>> (32 - n));\n\t                // var low = this.low << n;\n\t            // } else {\n\t                // var high = this.low << (n - 32);\n\t                // var low = 0;\n\t            // }\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Shifts this word n bits to the right.\n\t         *\n\t         * @param {number} n The number of bits to shift.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after shifting.\n\t         *\n\t         * @example\n\t         *\n\t         *     var shifted = x64Word.shiftR(7);\n\t         */\n\t        // shiftR: function (n) {\n\t            // if (n < 32) {\n\t                // var low = (this.low >>> n) | (this.high << (32 - n));\n\t                // var high = this.high >>> n;\n\t            // } else {\n\t                // var low = this.high >>> (n - 32);\n\t                // var high = 0;\n\t            // }\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Rotates this word n bits to the left.\n\t         *\n\t         * @param {number} n The number of bits to rotate.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after rotating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var rotated = x64Word.rotL(25);\n\t         */\n\t        // rotL: function (n) {\n\t            // return this.shiftL(n).or(this.shiftR(64 - n));\n\t        // },\n\n\t        /**\n\t         * Rotates this word n bits to the right.\n\t         *\n\t         * @param {number} n The number of bits to rotate.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after rotating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var rotated = x64Word.rotR(7);\n\t         */\n\t        // rotR: function (n) {\n\t            // return this.shiftR(n).or(this.shiftL(64 - n));\n\t        // },\n\n\t        /**\n\t         * Adds this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to add with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after adding.\n\t         *\n\t         * @example\n\t         *\n\t         *     var added = x64Word.add(anotherX64Word);\n\t         */\n\t        // add: function (word) {\n\t            // var low = (this.low + word.low) | 0;\n\t            // var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;\n\t            // var high = (this.high + word.high + carry) | 0;\n\n\t            // return X64Word.create(high, low);\n\t        // }\n\t    });\n\n\t    /**\n\t     * An array of 64-bit words.\n\t     *\n\t     * @property {Array} words The array of CryptoJS.x64.Word objects.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var X64WordArray = C_x64.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create();\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t         *     ]);\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t         *     ], 10);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 8;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this 64-bit word array to a 32-bit word array.\n\t         *\n\t         * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var x32WordArray = x64WordArray.toX32();\n\t         */\n\t        toX32: function () {\n\t            // Shortcuts\n\t            var x64Words = this.words;\n\t            var x64WordsLength = x64Words.length;\n\n\t            // Convert\n\t            var x32Words = [];\n\t            for (var i = 0; i < x64WordsLength; i++) {\n\t                var x64Word = x64Words[i];\n\t                x32Words.push(x64Word.high);\n\t                x32Words.push(x64Word.low);\n\t            }\n\n\t            return X32WordArray.create(x32Words, this.sigBytes);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {X64WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = x64WordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\n\t            // Clone \"words\" array\n\t            var words = clone.words = this.words.slice(0);\n\n\t            // Clone each X64Word object\n\t            var wordsLength = words.length;\n\t            for (var i = 0; i < wordsLength; i++) {\n\t                words[i] = words[i].clone();\n\t            }\n\n\t            return clone;\n\t        }\n\t    });\n\t}());\n\n\n\treturn CryptoJS;\n\n}));", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Check if typed arrays are supported\n\t    if (typeof ArrayBuffer != 'function') {\n\t        return;\n\t    }\n\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\n\t    // Reference original init\n\t    var superInit = WordArray.init;\n\n\t    // Augment WordArray.init to handle typed arrays\n\t    var subInit = WordArray.init = function (typedArray) {\n\t        // Convert buffers to uint8\n\t        if (typedArray instanceof ArrayBuffer) {\n\t            typedArray = new Uint8Array(typedArray);\n\t        }\n\n\t        // Convert other array views to uint8\n\t        if (\n\t            typedArray instanceof Int8Array ||\n\t            (typeof Uint8ClampedArray !== \"undefined\" && typedArray instanceof Uint8ClampedArray) ||\n\t            typedArray instanceof Int16Array ||\n\t            typedArray instanceof Uint16Array ||\n\t            typedArray instanceof Int32Array ||\n\t            typedArray instanceof Uint32Array ||\n\t            typedArray instanceof Float32Array ||\n\t            typedArray instanceof Float64Array\n\t        ) {\n\t            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n\t        }\n\n\t        // Handle Uint8Array\n\t        if (typedArray instanceof Uint8Array) {\n\t            // Shortcut\n\t            var typedArrayByteLength = typedArray.byteLength;\n\n\t            // Extract bytes\n\t            var words = [];\n\t            for (var i = 0; i < typedArrayByteLength; i++) {\n\t                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n\t            }\n\n\t            // Initialize this word array\n\t            superInit.call(this, words, typedArrayByteLength);\n\t        } else {\n\t            // Else call normal init\n\t            superInit.apply(this, arguments);\n\t        }\n\t    };\n\n\t    subInit.prototype = WordArray;\n\t}());\n\n\n\treturn CryptoJS.lib.WordArray;\n\n}));", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * UTF-16 BE encoding strategy.\n\t     */\n\t    var Utf16BE = C_enc.Utf16 = C_enc.Utf16BE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 BE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 BE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = (words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff;\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 BE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 BE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= utf16Str.charCodeAt(i) << (16 - (i % 2) * 16);\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-16 LE encoding strategy.\n\t     */\n\t    C_enc.Utf16LE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 LE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 LE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = swapEndian((words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff);\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 LE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 LE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << (16 - (i % 2) * 16));\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    function swapEndian(word) {\n\t        return ((word << 8) & 0xff00ff00) | ((word >>> 8) & 0x00ff00ff);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Utf16;\n\n}));", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64 encoding strategy.\n\t     */\n\t    var Base64 = C_enc.Base64 = {\n\t        /**\n\t         * Converts a word array to a Base64 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Base64 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64 string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t         */\n\t        parse: function (base64Str) {\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                    reverseMap = this._reverseMap = [];\n\t                    for (var j = 0; j < map.length; j++) {\n\t                        reverseMap[map.charCodeAt(j)] = j;\n\t                    }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t      var words = [];\n\t      var nBytes = 0;\n\t      for (var i = 0; i < base64StrLength; i++) {\n\t          if (i % 4) {\n\t              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t              var bitsCombined = bits1 | bits2;\n\t              words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);\n\t              nBytes++;\n\t          }\n\t      }\n\t      return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64;\n\n}));", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64url encoding strategy.\n\t     */\n\t    var Base64url = C_enc.Base64url = {\n\t        /**\n\t         * Converts a word array to a Base64url string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @param {boolean} urlSafe Whether to use url safe\n\t         *\n\t         * @return {string} The Base64url string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64url.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray, urlSafe) {\n\t            if (urlSafe === undefined) {\n\t                urlSafe = true\n\t            }\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = urlSafe ? this._safe_map : this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64url string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64url string.\n\t         *\n\t         * @param {boolean} urlSafe Whether to use url safe\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64url.parse(base64String);\n\t         */\n\t        parse: function (base64Str, urlSafe) {\n\t            if (urlSafe === undefined) {\n\t                urlSafe = true\n\t            }\n\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = urlSafe ? this._safe_map : this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                reverseMap = this._reverseMap = [];\n\t                for (var j = 0; j < map.length; j++) {\n\t                    reverseMap[map.charCodeAt(j)] = j;\n\t                }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n\t        _safe_map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t        var words = [];\n\t        var nBytes = 0;\n\t        for (var i = 0; i < base64StrLength; i++) {\n\t            if (i % 4) {\n\t                var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t                var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t                var bitsCombined = bits1 | bits2;\n\t                words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);\n\t                nBytes++;\n\t            }\n\t        }\n\t        return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64url;\n\n}));", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var T = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        for (var i = 0; i < 64; i++) {\n\t            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n\t        }\n\t    }());\n\n\t    /**\n\t     * MD5 hash algorithm.\n\t     */\n\t    var MD5 = C_algo.MD5 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var M_offset_0  = M[offset + 0];\n\t            var M_offset_1  = M[offset + 1];\n\t            var M_offset_2  = M[offset + 2];\n\t            var M_offset_3  = M[offset + 3];\n\t            var M_offset_4  = M[offset + 4];\n\t            var M_offset_5  = M[offset + 5];\n\t            var M_offset_6  = M[offset + 6];\n\t            var M_offset_7  = M[offset + 7];\n\t            var M_offset_8  = M[offset + 8];\n\t            var M_offset_9  = M[offset + 9];\n\t            var M_offset_10 = M[offset + 10];\n\t            var M_offset_11 = M[offset + 11];\n\t            var M_offset_12 = M[offset + 12];\n\t            var M_offset_13 = M[offset + 13];\n\t            var M_offset_14 = M[offset + 14];\n\t            var M_offset_15 = M[offset + 15];\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\n\t            // Computation\n\t            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);\n\t            d = FF(d, a, b, c, M_offset_1,  12, T[1]);\n\t            c = FF(c, d, a, b, M_offset_2,  17, T[2]);\n\t            b = FF(b, c, d, a, M_offset_3,  22, T[3]);\n\t            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);\n\t            d = FF(d, a, b, c, M_offset_5,  12, T[5]);\n\t            c = FF(c, d, a, b, M_offset_6,  17, T[6]);\n\t            b = FF(b, c, d, a, M_offset_7,  22, T[7]);\n\t            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);\n\t            d = FF(d, a, b, c, M_offset_9,  12, T[9]);\n\t            c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n\t            b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n\t            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);\n\t            d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n\t            c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n\t            b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n\t            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);\n\t            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);\n\t            c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n\t            b = GG(b, c, d, a, M_offset_0,  20, T[19]);\n\t            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);\n\t            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);\n\t            c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n\t            b = GG(b, c, d, a, M_offset_4,  20, T[23]);\n\t            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);\n\t            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);\n\t            c = GG(c, d, a, b, M_offset_3,  14, T[26]);\n\t            b = GG(b, c, d, a, M_offset_8,  20, T[27]);\n\t            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);\n\t            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);\n\t            c = GG(c, d, a, b, M_offset_7,  14, T[30]);\n\t            b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n\t            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);\n\t            d = HH(d, a, b, c, M_offset_8,  11, T[33]);\n\t            c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n\t            b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n\t            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);\n\t            d = HH(d, a, b, c, M_offset_4,  11, T[37]);\n\t            c = HH(c, d, a, b, M_offset_7,  16, T[38]);\n\t            b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n\t            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);\n\t            d = HH(d, a, b, c, M_offset_0,  11, T[41]);\n\t            c = HH(c, d, a, b, M_offset_3,  16, T[42]);\n\t            b = HH(b, c, d, a, M_offset_6,  23, T[43]);\n\t            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);\n\t            d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n\t            c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n\t            b = HH(b, c, d, a, M_offset_2,  23, T[47]);\n\n\t            a = II(a, b, c, d, M_offset_0,  6,  T[48]);\n\t            d = II(d, a, b, c, M_offset_7,  10, T[49]);\n\t            c = II(c, d, a, b, M_offset_14, 15, T[50]);\n\t            b = II(b, c, d, a, M_offset_5,  21, T[51]);\n\t            a = II(a, b, c, d, M_offset_12, 6,  T[52]);\n\t            d = II(d, a, b, c, M_offset_3,  10, T[53]);\n\t            c = II(c, d, a, b, M_offset_10, 15, T[54]);\n\t            b = II(b, c, d, a, M_offset_1,  21, T[55]);\n\t            a = II(a, b, c, d, M_offset_8,  6,  T[56]);\n\t            d = II(d, a, b, c, M_offset_15, 10, T[57]);\n\t            c = II(c, d, a, b, M_offset_6,  15, T[58]);\n\t            b = II(b, c, d, a, M_offset_13, 21, T[59]);\n\t            a = II(a, b, c, d, M_offset_4,  6,  T[60]);\n\t            d = II(d, a, b, c, M_offset_11, 10, T[61]);\n\t            c = II(c, d, a, b, M_offset_2,  15, T[62]);\n\t            b = II(b, c, d, a, M_offset_9,  21, T[63]);\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\n\t            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n\t            var nBitsTotalL = nBitsTotal;\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n\t                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)\n\t            );\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)\n\t            );\n\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    function FF(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & c) | (~b & d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function GG(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & d) | (c & ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function HH(a, b, c, d, x, s, t) {\n\t        var n = a + (b ^ c ^ d) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function II(a, b, c, d, x, s, t) {\n\t        var n = a + (c ^ (b | ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.MD5('message');\n\t     *     var hash = CryptoJS.MD5(wordArray);\n\t     */\n\t    C.MD5 = Hasher._createHelper(MD5);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacMD5(message, key);\n\t     */\n\t    C.HmacMD5 = Hasher._createHmacHelper(MD5);\n\t}(Math));\n\n\n\treturn CryptoJS.MD5;\n\n}));", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-1 hash algorithm.\n\t     */\n\t    var SHA1 = C_algo.SHA1 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476,\n\t                0xc3d2e1f0\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\n\t            // Computation\n\t            for (var i = 0; i < 80; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n\t                    W[i] = (n << 1) | (n >>> 31);\n\t                }\n\n\t                var t = ((a << 5) | (a >>> 27)) + e + W[i];\n\t                if (i < 20) {\n\t                    t += ((b & c) | (~b & d)) + 0x5a827999;\n\t                } else if (i < 40) {\n\t                    t += (b ^ c ^ d) + 0x6ed9eba1;\n\t                } else if (i < 60) {\n\t                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\n\t                } else /* if (i < 80) */ {\n\t                    t += (b ^ c ^ d) - 0x359d3e2a;\n\t                }\n\n\t                e = d;\n\t                d = c;\n\t                c = (b << 30) | (b >>> 2);\n\t                b = a;\n\t                a = t;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA1('message');\n\t     *     var hash = CryptoJS.SHA1(wordArray);\n\t     */\n\t    C.SHA1 = Hasher._createHelper(SHA1);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA1(message, key);\n\t     */\n\t    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\n\t}());\n\n\n\treturn CryptoJS.SHA1;\n\n}));", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha256\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha256\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA256 = C_algo.SHA256;\n\n\t    /**\n\t     * SHA-224 hash algorithm.\n\t     */\n\t    var SHA224 = C_algo.SHA224 = SHA256.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n\t                0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA256._doFinalize.call(this);\n\n\t            hash.sigBytes -= 4;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA224('message');\n\t     *     var hash = CryptoJS.SHA224(wordArray);\n\t     */\n\t    C.SHA224 = SHA256._createHelper(SHA224);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA224(message, key);\n\t     */\n\t    C.HmacSHA224 = SHA256._createHmacHelper(SHA224);\n\t}());\n\n\n\treturn CryptoJS.SHA224;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var X64WordArray = C_x64.WordArray;\n\t    var C_algo = C.algo;\n\n\t    function X64Word_create() {\n\t        return X64Word.create.apply(X64Word, arguments);\n\t    }\n\n\t    // Constants\n\t    var K = [\n\t        X64Word_create(0x428a2f98, 0xd728ae22), X64Word_create(0x71374491, 0x23ef65cd),\n\t        X64Word_create(0xb5c0fbcf, 0xec4d3b2f), X64Word_create(0xe9b5dba5, 0x8189dbbc),\n\t        X64Word_create(0x3956c25b, 0xf348b538), X64Word_create(0x59f111f1, 0xb605d019),\n\t        X64Word_create(0x923f82a4, 0xaf194f9b), X64Word_create(0xab1c5ed5, 0xda6d8118),\n\t        X64Word_create(0xd807aa98, 0xa3030242), X64Word_create(0x12835b01, 0x45706fbe),\n\t        X64Word_create(0x243185be, 0x4ee4b28c), X64Word_create(0x550c7dc3, 0xd5ffb4e2),\n\t        X64Word_create(0x72be5d74, 0xf27b896f), X64Word_create(0x80deb1fe, 0x3b1696b1),\n\t        X64Word_create(0x9bdc06a7, 0x25c71235), X64Word_create(0xc19bf174, 0xcf692694),\n\t        X64Word_create(0xe49b69c1, 0x9ef14ad2), X64Word_create(0xefbe4786, 0x384f25e3),\n\t        X64Word_create(0x0fc19dc6, 0x8b8cd5b5), X64Word_create(0x240ca1cc, 0x77ac9c65),\n\t        X64Word_create(0x2de92c6f, 0x592b0275), X64Word_create(0x4a7484aa, 0x6ea6e483),\n\t        X64Word_create(0x5cb0a9dc, 0xbd41fbd4), X64Word_create(0x76f988da, 0x831153b5),\n\t        X64Word_create(0x983e5152, 0xee66dfab), X64Word_create(0xa831c66d, 0x2db43210),\n\t        X64Word_create(0xb00327c8, 0x98fb213f), X64Word_create(0xbf597fc7, 0xbeef0ee4),\n\t        X64Word_create(0xc6e00bf3, 0x3da88fc2), X64Word_create(0xd5a79147, 0x930aa725),\n\t        X64Word_create(0x06ca6351, 0xe003826f), X64Word_create(0x14292967, 0x0a0e6e70),\n\t        X64Word_create(0x27b70a85, 0x46d22ffc), X64Word_create(0x2e1b2138, 0x5c26c926),\n\t        X64Word_create(0x4d2c6dfc, 0x5ac42aed), X64Word_create(0x53380d13, 0x9d95b3df),\n\t        X64Word_create(0x650a7354, 0x8baf63de), X64Word_create(0x766a0abb, 0x3c77b2a8),\n\t        X64Word_create(0x81c2c92e, 0x47edaee6), X64Word_create(0x92722c85, 0x1482353b),\n\t        X64Word_create(0xa2bfe8a1, 0x4cf10364), X64Word_create(0xa81a664b, 0xbc423001),\n\t        X64Word_create(0xc24b8b70, 0xd0f89791), X64Word_create(0xc76c51a3, 0x0654be30),\n\t        X64Word_create(0xd192e819, 0xd6ef5218), X64Word_create(0xd6990624, 0x5565a910),\n\t        X64Word_create(0xf40e3585, 0x5771202a), X64Word_create(0x106aa070, 0x32bbd1b8),\n\t        X64Word_create(0x19a4c116, 0xb8d2d0c8), X64Word_create(0x1e376c08, 0x5141ab53),\n\t        X64Word_create(0x2748774c, 0xdf8eeb99), X64Word_create(0x34b0bcb5, 0xe19b48a8),\n\t        X64Word_create(0x391c0cb3, 0xc5c95a63), X64Word_create(0x4ed8aa4a, 0xe3418acb),\n\t        X64Word_create(0x5b9cca4f, 0x7763e373), X64Word_create(0x682e6ff3, 0xd6b2b8a3),\n\t        X64Word_create(0x748f82ee, 0x5defb2fc), X64Word_create(0x78a5636f, 0x43172f60),\n\t        X64Word_create(0x84c87814, 0xa1f0ab72), X64Word_create(0x8cc70208, 0x1a6439ec),\n\t        X64Word_create(0x90befffa, 0x23631e28), X64Word_create(0xa4506ceb, 0xde82bde9),\n\t        X64Word_create(0xbef9a3f7, 0xb2c67915), X64Word_create(0xc67178f2, 0xe372532b),\n\t        X64Word_create(0xca273ece, 0xea26619c), X64Word_create(0xd186b8c7, 0x21c0c207),\n\t        X64Word_create(0xeada7dd6, 0xcde0eb1e), X64Word_create(0xf57d4f7f, 0xee6ed178),\n\t        X64Word_create(0x06f067aa, 0x72176fba), X64Word_create(0x0a637dc5, 0xa2c898a6),\n\t        X64Word_create(0x113f9804, 0xbef90dae), X64Word_create(0x1b710b35, 0x131c471b),\n\t        X64Word_create(0x28db77f5, 0x23047d84), X64Word_create(0x32caab7b, 0x40c72493),\n\t        X64Word_create(0x3c9ebe0a, 0x15c9bebc), X64Word_create(0x431d67c4, 0x9c100d4c),\n\t        X64Word_create(0x4cc5d4be, 0xcb3e42b6), X64Word_create(0x597f299c, 0xfc657e2a),\n\t        X64Word_create(0x5fcb6fab, 0x3ad6faec), X64Word_create(0x6c44198c, 0x4a475817)\n\t    ];\n\n\t    // Reusable objects\n\t    var W = [];\n\t    (function () {\n\t        for (var i = 0; i < 80; i++) {\n\t            W[i] = X64Word_create();\n\t        }\n\t    }());\n\n\t    /**\n\t     * SHA-512 hash algorithm.\n\t     */\n\t    var SHA512 = C_algo.SHA512 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new X64WordArray.init([\n\t                new X64Word.init(0x6a09e667, 0xf3bcc908), new X64Word.init(0xbb67ae85, 0x84caa73b),\n\t                new X64Word.init(0x3c6ef372, 0xfe94f82b), new X64Word.init(0xa54ff53a, 0x5f1d36f1),\n\t                new X64Word.init(0x510e527f, 0xade682d1), new X64Word.init(0x9b05688c, 0x2b3e6c1f),\n\t                new X64Word.init(0x1f83d9ab, 0xfb41bd6b), new X64Word.init(0x5be0cd19, 0x137e2179)\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var H0 = H[0];\n\t            var H1 = H[1];\n\t            var H2 = H[2];\n\t            var H3 = H[3];\n\t            var H4 = H[4];\n\t            var H5 = H[5];\n\t            var H6 = H[6];\n\t            var H7 = H[7];\n\n\t            var H0h = H0.high;\n\t            var H0l = H0.low;\n\t            var H1h = H1.high;\n\t            var H1l = H1.low;\n\t            var H2h = H2.high;\n\t            var H2l = H2.low;\n\t            var H3h = H3.high;\n\t            var H3l = H3.low;\n\t            var H4h = H4.high;\n\t            var H4l = H4.low;\n\t            var H5h = H5.high;\n\t            var H5l = H5.low;\n\t            var H6h = H6.high;\n\t            var H6l = H6.low;\n\t            var H7h = H7.high;\n\t            var H7l = H7.low;\n\n\t            // Working variables\n\t            var ah = H0h;\n\t            var al = H0l;\n\t            var bh = H1h;\n\t            var bl = H1l;\n\t            var ch = H2h;\n\t            var cl = H2l;\n\t            var dh = H3h;\n\t            var dl = H3l;\n\t            var eh = H4h;\n\t            var el = H4l;\n\t            var fh = H5h;\n\t            var fl = H5l;\n\t            var gh = H6h;\n\t            var gl = H6l;\n\t            var hh = H7h;\n\t            var hl = H7l;\n\n\t            // Rounds\n\t            for (var i = 0; i < 80; i++) {\n\t                var Wil;\n\t                var Wih;\n\n\t                // Shortcut\n\t                var Wi = W[i];\n\n\t                // Extend message\n\t                if (i < 16) {\n\t                    Wih = Wi.high = M[offset + i * 2]     | 0;\n\t                    Wil = Wi.low  = M[offset + i * 2 + 1] | 0;\n\t                } else {\n\t                    // Gamma0\n\t                    var gamma0x  = W[i - 15];\n\t                    var gamma0xh = gamma0x.high;\n\t                    var gamma0xl = gamma0x.low;\n\t                    var gamma0h  = ((gamma0xh >>> 1) | (gamma0xl << 31)) ^ ((gamma0xh >>> 8) | (gamma0xl << 24)) ^ (gamma0xh >>> 7);\n\t                    var gamma0l  = ((gamma0xl >>> 1) | (gamma0xh << 31)) ^ ((gamma0xl >>> 8) | (gamma0xh << 24)) ^ ((gamma0xl >>> 7) | (gamma0xh << 25));\n\n\t                    // Gamma1\n\t                    var gamma1x  = W[i - 2];\n\t                    var gamma1xh = gamma1x.high;\n\t                    var gamma1xl = gamma1x.low;\n\t                    var gamma1h  = ((gamma1xh >>> 19) | (gamma1xl << 13)) ^ ((gamma1xh << 3) | (gamma1xl >>> 29)) ^ (gamma1xh >>> 6);\n\t                    var gamma1l  = ((gamma1xl >>> 19) | (gamma1xh << 13)) ^ ((gamma1xl << 3) | (gamma1xh >>> 29)) ^ ((gamma1xl >>> 6) | (gamma1xh << 26));\n\n\t                    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n\t                    var Wi7  = W[i - 7];\n\t                    var Wi7h = Wi7.high;\n\t                    var Wi7l = Wi7.low;\n\n\t                    var Wi16  = W[i - 16];\n\t                    var Wi16h = Wi16.high;\n\t                    var Wi16l = Wi16.low;\n\n\t                    Wil = gamma0l + Wi7l;\n\t                    Wih = gamma0h + Wi7h + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0);\n\t                    Wil = Wil + gamma1l;\n\t                    Wih = Wih + gamma1h + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0);\n\t                    Wil = Wil + Wi16l;\n\t                    Wih = Wih + Wi16h + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0);\n\n\t                    Wi.high = Wih;\n\t                    Wi.low  = Wil;\n\t                }\n\n\t                var chh  = (eh & fh) ^ (~eh & gh);\n\t                var chl  = (el & fl) ^ (~el & gl);\n\t                var majh = (ah & bh) ^ (ah & ch) ^ (bh & ch);\n\t                var majl = (al & bl) ^ (al & cl) ^ (bl & cl);\n\n\t                var sigma0h = ((ah >>> 28) | (al << 4))  ^ ((ah << 30)  | (al >>> 2)) ^ ((ah << 25) | (al >>> 7));\n\t                var sigma0l = ((al >>> 28) | (ah << 4))  ^ ((al << 30)  | (ah >>> 2)) ^ ((al << 25) | (ah >>> 7));\n\t                var sigma1h = ((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9));\n\t                var sigma1l = ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9));\n\n\t                // t1 = h + sigma1 + ch + K[i] + W[i]\n\t                var Ki  = K[i];\n\t                var Kih = Ki.high;\n\t                var Kil = Ki.low;\n\n\t                var t1l = hl + sigma1l;\n\t                var t1h = hh + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0);\n\t                var t1l = t1l + chl;\n\t                var t1h = t1h + chh + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0);\n\t                var t1l = t1l + Kil;\n\t                var t1h = t1h + Kih + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0);\n\t                var t1l = t1l + Wil;\n\t                var t1h = t1h + Wih + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0);\n\n\t                // t2 = sigma0 + maj\n\t                var t2l = sigma0l + majl;\n\t                var t2h = sigma0h + majh + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0);\n\n\t                // Update working variables\n\t                hh = gh;\n\t                hl = gl;\n\t                gh = fh;\n\t                gl = fl;\n\t                fh = eh;\n\t                fl = el;\n\t                el = (dl + t1l) | 0;\n\t                eh = (dh + t1h + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;\n\t                dh = ch;\n\t                dl = cl;\n\t                ch = bh;\n\t                cl = bl;\n\t                bh = ah;\n\t                bl = al;\n\t                al = (t1l + t2l) | 0;\n\t                ah = (t1h + t2h + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H0l = H0.low  = (H0l + al);\n\t            H0.high = (H0h + ah + ((H0l >>> 0) < (al >>> 0) ? 1 : 0));\n\t            H1l = H1.low  = (H1l + bl);\n\t            H1.high = (H1h + bh + ((H1l >>> 0) < (bl >>> 0) ? 1 : 0));\n\t            H2l = H2.low  = (H2l + cl);\n\t            H2.high = (H2h + ch + ((H2l >>> 0) < (cl >>> 0) ? 1 : 0));\n\t            H3l = H3.low  = (H3l + dl);\n\t            H3.high = (H3h + dh + ((H3l >>> 0) < (dl >>> 0) ? 1 : 0));\n\t            H4l = H4.low  = (H4l + el);\n\t            H4.high = (H4h + eh + ((H4l >>> 0) < (el >>> 0) ? 1 : 0));\n\t            H5l = H5.low  = (H5l + fl);\n\t            H5.high = (H5h + fh + ((H5l >>> 0) < (fl >>> 0) ? 1 : 0));\n\t            H6l = H6.low  = (H6l + gl);\n\t            H6.high = (H6h + gh + ((H6l >>> 0) < (gl >>> 0) ? 1 : 0));\n\t            H7l = H7.low  = (H7l + hl);\n\t            H7.high = (H7h + hh + ((H7l >>> 0) < (hl >>> 0) ? 1 : 0));\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 31] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Convert hash to 32-bit word array before returning\n\t            var hash = this._hash.toX32();\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        },\n\n\t        blockSize: 1024/32\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA512('message');\n\t     *     var hash = CryptoJS.SHA512(wordArray);\n\t     */\n\t    C.SHA512 = Hasher._createHelper(SHA512);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA512(message, key);\n\t     */\n\t    C.HmacSHA512 = Hasher._createHmacHelper(SHA512);\n\t}());\n\n\n\treturn CryptoJS.SHA512;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"), require(\"./sha512\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\", \"./sha512\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var X64WordArray = C_x64.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA512 = C_algo.SHA512;\n\n\t    /**\n\t     * SHA-384 hash algorithm.\n\t     */\n\t    var SHA384 = C_algo.SHA384 = SHA512.extend({\n\t        _doReset: function () {\n\t            this._hash = new X64WordArray.init([\n\t                new X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(0x629a292a, 0x367cd507),\n\t                new X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(0x152fecd8, 0xf70e5939),\n\t                new X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(0x8eb44a87, 0x68581511),\n\t                new X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(0x47b5481d, 0xbefa4fa4)\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA512._doFinalize.call(this);\n\n\t            hash.sigBytes -= 16;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA384('message');\n\t     *     var hash = CryptoJS.SHA384(wordArray);\n\t     */\n\t    C.SHA384 = SHA512._createHelper(SHA384);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA384(message, key);\n\t     */\n\t    C.HmacSHA384 = SHA512._createHmacHelper(SHA384);\n\t}());\n\n\n\treturn CryptoJS.SHA384;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var C_algo = C.algo;\n\n\t    // Constants tables\n\t    var RHO_OFFSETS = [];\n\t    var PI_INDEXES  = [];\n\t    var ROUND_CONSTANTS = [];\n\n\t    // Compute Constants\n\t    (function () {\n\t        // Compute rho offset constants\n\t        var x = 1, y = 0;\n\t        for (var t = 0; t < 24; t++) {\n\t            RHO_OFFSETS[x + 5 * y] = ((t + 1) * (t + 2) / 2) % 64;\n\n\t            var newX = y % 5;\n\t            var newY = (2 * x + 3 * y) % 5;\n\t            x = newX;\n\t            y = newY;\n\t        }\n\n\t        // Compute pi index constants\n\t        for (var x = 0; x < 5; x++) {\n\t            for (var y = 0; y < 5; y++) {\n\t                PI_INDEXES[x + 5 * y] = y + ((2 * x + 3 * y) % 5) * 5;\n\t            }\n\t        }\n\n\t        // Compute round constants\n\t        var LFSR = 0x01;\n\t        for (var i = 0; i < 24; i++) {\n\t            var roundConstantMsw = 0;\n\t            var roundConstantLsw = 0;\n\n\t            for (var j = 0; j < 7; j++) {\n\t                if (LFSR & 0x01) {\n\t                    var bitPosition = (1 << j) - 1;\n\t                    if (bitPosition < 32) {\n\t                        roundConstantLsw ^= 1 << bitPosition;\n\t                    } else /* if (bitPosition >= 32) */ {\n\t                        roundConstantMsw ^= 1 << (bitPosition - 32);\n\t                    }\n\t                }\n\n\t                // Compute next LFSR\n\t                if (LFSR & 0x80) {\n\t                    // Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1\n\t                    LFSR = (LFSR << 1) ^ 0x71;\n\t                } else {\n\t                    LFSR <<= 1;\n\t                }\n\t            }\n\n\t            ROUND_CONSTANTS[i] = X64Word.create(roundConstantMsw, roundConstantLsw);\n\t        }\n\t    }());\n\n\t    // Reusable objects for temporary values\n\t    var T = [];\n\t    (function () {\n\t        for (var i = 0; i < 25; i++) {\n\t            T[i] = X64Word.create();\n\t        }\n\t    }());\n\n\t    /**\n\t     * SHA-3 hash algorithm.\n\t     */\n\t    var SHA3 = C_algo.SHA3 = Hasher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} outputLength\n\t         *   The desired number of bits in the output hash.\n\t         *   Only values permitted are: 224, 256, 384, 512.\n\t         *   Default: 512\n\t         */\n\t        cfg: Hasher.cfg.extend({\n\t            outputLength: 512\n\t        }),\n\n\t        _doReset: function () {\n\t            var state = this._state = []\n\t            for (var i = 0; i < 25; i++) {\n\t                state[i] = new X64Word.init();\n\t            }\n\n\t            this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcuts\n\t            var state = this._state;\n\t            var nBlockSizeLanes = this.blockSize / 2;\n\n\t            // Absorb\n\t            for (var i = 0; i < nBlockSizeLanes; i++) {\n\t                // Shortcuts\n\t                var M2i  = M[offset + 2 * i];\n\t                var M2i1 = M[offset + 2 * i + 1];\n\n\t                // Swap endian\n\t                M2i = (\n\t                    (((M2i << 8)  | (M2i >>> 24)) & 0x00ff00ff) |\n\t                    (((M2i << 24) | (M2i >>> 8))  & 0xff00ff00)\n\t                );\n\t                M2i1 = (\n\t                    (((M2i1 << 8)  | (M2i1 >>> 24)) & 0x00ff00ff) |\n\t                    (((M2i1 << 24) | (M2i1 >>> 8))  & 0xff00ff00)\n\t                );\n\n\t                // Absorb message into state\n\t                var lane = state[i];\n\t                lane.high ^= M2i1;\n\t                lane.low  ^= M2i;\n\t            }\n\n\t            // Rounds\n\t            for (var round = 0; round < 24; round++) {\n\t                // Theta\n\t                for (var x = 0; x < 5; x++) {\n\t                    // Mix column lanes\n\t                    var tMsw = 0, tLsw = 0;\n\t                    for (var y = 0; y < 5; y++) {\n\t                        var lane = state[x + 5 * y];\n\t                        tMsw ^= lane.high;\n\t                        tLsw ^= lane.low;\n\t                    }\n\n\t                    // Temporary values\n\t                    var Tx = T[x];\n\t                    Tx.high = tMsw;\n\t                    Tx.low  = tLsw;\n\t                }\n\t                for (var x = 0; x < 5; x++) {\n\t                    // Shortcuts\n\t                    var Tx4 = T[(x + 4) % 5];\n\t                    var Tx1 = T[(x + 1) % 5];\n\t                    var Tx1Msw = Tx1.high;\n\t                    var Tx1Lsw = Tx1.low;\n\n\t                    // Mix surrounding columns\n\t                    var tMsw = Tx4.high ^ ((Tx1Msw << 1) | (Tx1Lsw >>> 31));\n\t                    var tLsw = Tx4.low  ^ ((Tx1Lsw << 1) | (Tx1Msw >>> 31));\n\t                    for (var y = 0; y < 5; y++) {\n\t                        var lane = state[x + 5 * y];\n\t                        lane.high ^= tMsw;\n\t                        lane.low  ^= tLsw;\n\t                    }\n\t                }\n\n\t                // Rho Pi\n\t                for (var laneIndex = 1; laneIndex < 25; laneIndex++) {\n\t                    var tMsw;\n\t                    var tLsw;\n\n\t                    // Shortcuts\n\t                    var lane = state[laneIndex];\n\t                    var laneMsw = lane.high;\n\t                    var laneLsw = lane.low;\n\t                    var rhoOffset = RHO_OFFSETS[laneIndex];\n\n\t                    // Rotate lanes\n\t                    if (rhoOffset < 32) {\n\t                        tMsw = (laneMsw << rhoOffset) | (laneLsw >>> (32 - rhoOffset));\n\t                        tLsw = (laneLsw << rhoOffset) | (laneMsw >>> (32 - rhoOffset));\n\t                    } else /* if (rhoOffset >= 32) */ {\n\t                        tMsw = (laneLsw << (rhoOffset - 32)) | (laneMsw >>> (64 - rhoOffset));\n\t                        tLsw = (laneMsw << (rhoOffset - 32)) | (laneLsw >>> (64 - rhoOffset));\n\t                    }\n\n\t                    // Transpose lanes\n\t                    var TPiLane = T[PI_INDEXES[laneIndex]];\n\t                    TPiLane.high = tMsw;\n\t                    TPiLane.low  = tLsw;\n\t                }\n\n\t                // Rho pi at x = y = 0\n\t                var T0 = T[0];\n\t                var state0 = state[0];\n\t                T0.high = state0.high;\n\t                T0.low  = state0.low;\n\n\t                // Chi\n\t                for (var x = 0; x < 5; x++) {\n\t                    for (var y = 0; y < 5; y++) {\n\t                        // Shortcuts\n\t                        var laneIndex = x + 5 * y;\n\t                        var lane = state[laneIndex];\n\t                        var TLane = T[laneIndex];\n\t                        var Tx1Lane = T[((x + 1) % 5) + 5 * y];\n\t                        var Tx2Lane = T[((x + 2) % 5) + 5 * y];\n\n\t                        // Mix rows\n\t                        lane.high = TLane.high ^ (~Tx1Lane.high & Tx2Lane.high);\n\t                        lane.low  = TLane.low  ^ (~Tx1Lane.low  & Tx2Lane.low);\n\t                    }\n\t                }\n\n\t                // Iota\n\t                var lane = state[0];\n\t                var roundConstant = ROUND_CONSTANTS[round];\n\t                lane.high ^= roundConstant.high;\n\t                lane.low  ^= roundConstant.low;\n\t            }\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\t            var blockSizeBits = this.blockSize * 32;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x1 << (24 - nBitsLeft % 32);\n\t            dataWords[((Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits) >>> 5) - 1] |= 0x80;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var state = this._state;\n\t            var outputLengthBytes = this.cfg.outputLength / 8;\n\t            var outputLengthLanes = outputLengthBytes / 8;\n\n\t            // Squeeze\n\t            var hashWords = [];\n\t            for (var i = 0; i < outputLengthLanes; i++) {\n\t                // Shortcuts\n\t                var lane = state[i];\n\t                var laneMsw = lane.high;\n\t                var laneLsw = lane.low;\n\n\t                // Swap endian\n\t                laneMsw = (\n\t                    (((laneMsw << 8)  | (laneMsw >>> 24)) & 0x00ff00ff) |\n\t                    (((laneMsw << 24) | (laneMsw >>> 8))  & 0xff00ff00)\n\t                );\n\t                laneLsw = (\n\t                    (((laneLsw << 8)  | (laneLsw >>> 24)) & 0x00ff00ff) |\n\t                    (((laneLsw << 24) | (laneLsw >>> 8))  & 0xff00ff00)\n\t                );\n\n\t                // Squeeze state to retrieve hash\n\t                hashWords.push(laneLsw);\n\t                hashWords.push(laneMsw);\n\t            }\n\n\t            // Return final computed hash\n\t            return new WordArray.init(hashWords, outputLengthBytes);\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\n\t            var state = clone._state = this._state.slice(0);\n\t            for (var i = 0; i < 25; i++) {\n\t                state[i] = state[i].clone();\n\t            }\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA3('message');\n\t     *     var hash = CryptoJS.SHA3(wordArray);\n\t     */\n\t    C.SHA3 = Hasher._createHelper(SHA3);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA3(message, key);\n\t     */\n\t    C.HmacSHA3 = Hasher._createHmacHelper(SHA3);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA3;\n\n}));", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/** @preserve\n\t(c) 2012 by C\u00E9dric Mesnil. All rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n\t    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\t    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n\tTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t*/\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var _zl = WordArray.create([\n\t        0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n\t        7,  4, 13,  1, 10,  6, 15,  3, 12,  0,  9,  5,  2, 14, 11,  8,\n\t        3, 10, 14,  4,  9, 15,  8,  1,  2,  7,  0,  6, 13, 11,  5, 12,\n\t        1,  9, 11, 10,  0,  8, 12,  4, 13,  3,  7, 15, 14,  5,  6,  2,\n\t        4,  0,  5,  9,  7, 12,  2, 10, 14,  1,  3,  8, 11,  6, 15, 13]);\n\t    var _zr = WordArray.create([\n\t        5, 14,  7,  0,  9,  2, 11,  4, 13,  6, 15,  8,  1, 10,  3, 12,\n\t        6, 11,  3,  7,  0, 13,  5, 10, 14, 15,  8, 12,  4,  9,  1,  2,\n\t        15,  5,  1,  3,  7, 14,  6,  9, 11,  8, 12,  2, 10,  0,  4, 13,\n\t        8,  6,  4,  1,  3, 11, 15,  0,  5, 12,  2, 13,  9,  7, 10, 14,\n\t        12, 15, 10,  4,  1,  5,  8,  7,  6,  2, 13, 14,  0,  3,  9, 11]);\n\t    var _sl = WordArray.create([\n\t         11, 14, 15, 12,  5,  8,  7,  9, 11, 13, 14, 15,  6,  7,  9,  8,\n\t        7, 6,   8, 13, 11,  9,  7, 15,  7, 12, 15,  9, 11,  7, 13, 12,\n\t        11, 13,  6,  7, 14,  9, 13, 15, 14,  8, 13,  6,  5, 12,  7,  5,\n\t          11, 12, 14, 15, 14, 15,  9,  8,  9, 14,  5,  6,  8,  6,  5, 12,\n\t        9, 15,  5, 11,  6,  8, 13, 12,  5, 12, 13, 14, 11,  8,  5,  6 ]);\n\t    var _sr = WordArray.create([\n\t        8,  9,  9, 11, 13, 15, 15,  5,  7,  7,  8, 11, 14, 14, 12,  6,\n\t        9, 13, 15,  7, 12,  8,  9, 11,  7,  7, 12,  7,  6, 15, 13, 11,\n\t        9,  7, 15, 11,  8,  6,  6, 14, 12, 13,  5, 14, 13, 13,  7,  5,\n\t        15,  5,  8, 11, 14, 14,  6, 14,  6,  9, 12,  9, 12,  5, 15,  8,\n\t        8,  5, 12,  9, 12,  5, 14,  6,  8, 13,  6,  5, 15, 13, 11, 11 ]);\n\n\t    var _hl =  WordArray.create([ 0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);\n\t    var _hr =  WordArray.create([ 0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);\n\n\t    /**\n\t     * RIPEMD160 hash algorithm.\n\t     */\n\t    var RIPEMD160 = C_algo.RIPEMD160 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash  = WordArray.create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                // Swap\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\t            // Shortcut\n\t            var H  = this._hash.words;\n\t            var hl = _hl.words;\n\t            var hr = _hr.words;\n\t            var zl = _zl.words;\n\t            var zr = _zr.words;\n\t            var sl = _sl.words;\n\t            var sr = _sr.words;\n\n\t            // Working variables\n\t            var al, bl, cl, dl, el;\n\t            var ar, br, cr, dr, er;\n\n\t            ar = al = H[0];\n\t            br = bl = H[1];\n\t            cr = cl = H[2];\n\t            dr = dl = H[3];\n\t            er = el = H[4];\n\t            // Computation\n\t            var t;\n\t            for (var i = 0; i < 80; i += 1) {\n\t                t = (al +  M[offset+zl[i]])|0;\n\t                if (i<16){\n\t\t            t +=  f1(bl,cl,dl) + hl[0];\n\t                } else if (i<32) {\n\t\t            t +=  f2(bl,cl,dl) + hl[1];\n\t                } else if (i<48) {\n\t\t            t +=  f3(bl,cl,dl) + hl[2];\n\t                } else if (i<64) {\n\t\t            t +=  f4(bl,cl,dl) + hl[3];\n\t                } else {// if (i<80) {\n\t\t            t +=  f5(bl,cl,dl) + hl[4];\n\t                }\n\t                t = t|0;\n\t                t =  rotl(t,sl[i]);\n\t                t = (t+el)|0;\n\t                al = el;\n\t                el = dl;\n\t                dl = rotl(cl, 10);\n\t                cl = bl;\n\t                bl = t;\n\n\t                t = (ar + M[offset+zr[i]])|0;\n\t                if (i<16){\n\t\t            t +=  f5(br,cr,dr) + hr[0];\n\t                } else if (i<32) {\n\t\t            t +=  f4(br,cr,dr) + hr[1];\n\t                } else if (i<48) {\n\t\t            t +=  f3(br,cr,dr) + hr[2];\n\t                } else if (i<64) {\n\t\t            t +=  f2(br,cr,dr) + hr[3];\n\t                } else {// if (i<80) {\n\t\t            t +=  f1(br,cr,dr) + hr[4];\n\t                }\n\t                t = t|0;\n\t                t =  rotl(t,sr[i]) ;\n\t                t = (t+er)|0;\n\t                ar = er;\n\t                er = dr;\n\t                dr = rotl(cr, 10);\n\t                cr = br;\n\t                br = t;\n\t            }\n\t            // Intermediate hash value\n\t            t    = (H[1] + cl + dr)|0;\n\t            H[1] = (H[2] + dl + er)|0;\n\t            H[2] = (H[3] + el + ar)|0;\n\t            H[3] = (H[4] + al + br)|0;\n\t            H[4] = (H[0] + bl + cr)|0;\n\t            H[0] =  t;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotal << 8)  | (nBitsTotal >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotal << 24) | (nBitsTotal >>> 8))  & 0xff00ff00)\n\t            );\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 5; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                // Swap\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\n\t    function f1(x, y, z) {\n\t        return ((x) ^ (y) ^ (z));\n\n\t    }\n\n\t    function f2(x, y, z) {\n\t        return (((x)&(y)) | ((~x)&(z)));\n\t    }\n\n\t    function f3(x, y, z) {\n\t        return (((x) | (~(y))) ^ (z));\n\t    }\n\n\t    function f4(x, y, z) {\n\t        return (((x) & (z)) | ((y)&(~(z))));\n\t    }\n\n\t    function f5(x, y, z) {\n\t        return ((x) ^ ((y) |(~(z))));\n\n\t    }\n\n\t    function rotl(x,n) {\n\t        return (x<<n) | (x>>>(32-n));\n\t    }\n\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.RIPEMD160('message');\n\t     *     var hash = CryptoJS.RIPEMD160(wordArray);\n\t     */\n\t    C.RIPEMD160 = Hasher._createHelper(RIPEMD160);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacRIPEMD160(message, key);\n\t     */\n\t    C.HmacRIPEMD160 = Hasher._createHmacHelper(RIPEMD160);\n\t}(Math));\n\n\n\treturn CryptoJS.RIPEMD160;\n\n}));", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * HMAC algorithm.\n\t     */\n\t    var HMAC = C_algo.HMAC = Base.extend({\n\t        /**\n\t         * Initializes a newly created HMAC.\n\t         *\n\t         * @param {Hasher} hasher The hash algorithm to use.\n\t         * @param {WordArray|string} key The secret key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n\t         */\n\t        init: function (hasher, key) {\n\t            // Init hasher\n\t            hasher = this._hasher = new hasher.init();\n\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof key == 'string') {\n\t                key = Utf8.parse(key);\n\t            }\n\n\t            // Shortcuts\n\t            var hasherBlockSize = hasher.blockSize;\n\t            var hasherBlockSizeBytes = hasherBlockSize * 4;\n\n\t            // Allow arbitrary length keys\n\t            if (key.sigBytes > hasherBlockSizeBytes) {\n\t                key = hasher.finalize(key);\n\t            }\n\n\t            // Clamp excess bits\n\t            key.clamp();\n\n\t            // Clone key for inner and outer pads\n\t            var oKey = this._oKey = key.clone();\n\t            var iKey = this._iKey = key.clone();\n\n\t            // Shortcuts\n\t            var oKeyWords = oKey.words;\n\t            var iKeyWords = iKey.words;\n\n\t            // XOR keys with pad constants\n\t            for (var i = 0; i < hasherBlockSize; i++) {\n\t                oKeyWords[i] ^= 0x5c5c5c5c;\n\t                iKeyWords[i] ^= 0x36363636;\n\t            }\n\t            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this HMAC to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Reset\n\t            hasher.reset();\n\t            hasher.update(this._iKey);\n\t        },\n\n\t        /**\n\t         * Updates this HMAC with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {HMAC} This HMAC instance.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.update('message');\n\t         *     hmacHasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            this._hasher.update(messageUpdate);\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the HMAC computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The HMAC.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmac = hmacHasher.finalize();\n\t         *     var hmac = hmacHasher.finalize('message');\n\t         *     var hmac = hmacHasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Compute HMAC\n\t            var innerHash = hasher.finalize(messageUpdate);\n\t            hasher.reset();\n\t            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n\t            return hmac;\n\t        }\n\t    });\n\t}());\n\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha256\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha256\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA256 = C_algo.SHA256;\n\t    var HMAC = C_algo.HMAC;\n\n\t    /**\n\t     * Password-Based Key Derivation Function 2 algorithm.\n\t     */\n\t    var PBKDF2 = C_algo.PBKDF2 = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hasher to use. Default: SHA256\n\t         * @property {number} iterations The number of iterations to perform. Default: 250000\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: SHA256,\n\t            iterations: 250000\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create();\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Computes the Password-Based Key Derivation Function 2.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init HMAC\n\t            var hmac = HMAC.create(cfg.hasher, password);\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\t            var blockIndex = WordArray.create([0x00000001]);\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var blockIndexWords = blockIndex.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                var block = hmac.update(salt).finalize(blockIndex);\n\t                hmac.reset();\n\n\t                // Shortcuts\n\t                var blockWords = block.words;\n\t                var blockWordsLength = blockWords.length;\n\n\t                // Iterations\n\t                var intermediate = block;\n\t                for (var i = 1; i < iterations; i++) {\n\t                    intermediate = hmac.finalize(intermediate);\n\t                    hmac.reset();\n\n\t                    // Shortcut\n\t                    var intermediateWords = intermediate.words;\n\n\t                    // XOR intermediate with block\n\t                    for (var j = 0; j < blockWordsLength; j++) {\n\t                        blockWords[j] ^= intermediateWords[j];\n\t                    }\n\t                }\n\n\t                derivedKey.concat(block);\n\t                blockIndexWords[0]++;\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Computes the Password-Based Key Derivation Function 2.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.PBKDF2(password, salt);\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.PBKDF2 = function (password, salt, cfg) {\n\t        return PBKDF2.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.PBKDF2;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha1\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha1\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var MD5 = C_algo.MD5;\n\n\t    /**\n\t     * This key derivation function is meant to conform with EVP_BytesToKey.\n\t     * www.openssl.org/docs/crypto/EVP_BytesToKey.html\n\t     */\n\t    var EvpKDF = C_algo.EvpKDF = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hash algorithm to use. Default: MD5\n\t         * @property {number} iterations The number of iterations to perform. Default: 1\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: MD5,\n\t            iterations: 1\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create();\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Derives a key from a password.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            var block;\n\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init hasher\n\t            var hasher = cfg.hasher.create();\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                if (block) {\n\t                    hasher.update(block);\n\t                }\n\t                block = hasher.update(password).finalize(salt);\n\t                hasher.reset();\n\n\t                // Iterations\n\t                for (var i = 1; i < iterations; i++) {\n\t                    block = hasher.finalize(block);\n\t                    hasher.reset();\n\t                }\n\n\t                derivedKey.concat(block);\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Derives a key from a password.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.EvpKDF(password, salt);\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.EvpKDF = function (password, salt, cfg) {\n\t        return EvpKDF.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.EvpKDF;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./evpkdf\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./evpkdf\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Cipher core components.\n\t */\n\tCryptoJS.lib.Cipher || (function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var Base64 = C_enc.Base64;\n\t    var C_algo = C.algo;\n\t    var EvpKDF = C_algo.EvpKDF;\n\n\t    /**\n\t     * Abstract base cipher template.\n\t     *\n\t     * @property {number} keySize This cipher's key size. Default: 4 (128 bits)\n\t     * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)\n\t     * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.\n\t     * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\n\t     */\n\t    var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {WordArray} iv The IV to use for this operation.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Creates this cipher in encryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createEncryptor: function (key, cfg) {\n\t            return this.create(this._ENC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Creates this cipher in decryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createDecryptor: function (key, cfg) {\n\t            return this.create(this._DEC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created cipher.\n\t         *\n\t         * @param {number} xformMode Either the encryption or decryption transormation mode constant.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });\n\t         */\n\t        init: function (xformMode, key, cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Store transform mode and key\n\t            this._xformMode = xformMode;\n\t            this._key = key;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this cipher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     cipher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-cipher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Adds data to be encrypted or decrypted.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.process('data');\n\t         *     var encrypted = cipher.process(wordArray);\n\t         */\n\t        process: function (dataUpdate) {\n\t            // Append\n\t            this._append(dataUpdate);\n\n\t            // Process available blocks\n\t            return this._process();\n\t        },\n\n\t        /**\n\t         * Finalizes the encryption or decryption process.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after final processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.finalize();\n\t         *     var encrypted = cipher.finalize('data');\n\t         *     var encrypted = cipher.finalize(wordArray);\n\t         */\n\t        finalize: function (dataUpdate) {\n\t            // Final data update\n\t            if (dataUpdate) {\n\t                this._append(dataUpdate);\n\t            }\n\n\t            // Perform concrete-cipher logic\n\t            var finalProcessedData = this._doFinalize();\n\n\t            return finalProcessedData;\n\t        },\n\n\t        keySize: 128/32,\n\n\t        ivSize: 128/32,\n\n\t        _ENC_XFORM_MODE: 1,\n\n\t        _DEC_XFORM_MODE: 2,\n\n\t        /**\n\t         * Creates shortcut functions to a cipher's object interface.\n\t         *\n\t         * @param {Cipher} cipher The cipher to create a helper for.\n\t         *\n\t         * @return {Object} An object with encrypt and decrypt shortcut functions.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);\n\t         */\n\t        _createHelper: (function () {\n\t            function selectCipherStrategy(key) {\n\t                if (typeof key == 'string') {\n\t                    return PasswordBasedCipher;\n\t                } else {\n\t                    return SerializableCipher;\n\t                }\n\t            }\n\n\t            return function (cipher) {\n\t                return {\n\t                    encrypt: function (message, key, cfg) {\n\t                        return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);\n\t                    },\n\n\t                    decrypt: function (ciphertext, key, cfg) {\n\t                        return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);\n\t                    }\n\t                };\n\t            };\n\t        }())\n\t    });\n\n\t    /**\n\t     * Abstract base stream cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)\n\t     */\n\t    var StreamCipher = C_lib.StreamCipher = Cipher.extend({\n\t        _doFinalize: function () {\n\t            // Process partial blocks\n\t            var finalProcessedBlocks = this._process(!!'flush');\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 1\n\t    });\n\n\t    /**\n\t     * Mode namespace.\n\t     */\n\t    var C_mode = C.mode = {};\n\n\t    /**\n\t     * Abstract base block cipher mode template.\n\t     */\n\t    var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({\n\t        /**\n\t         * Creates this mode for encryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);\n\t         */\n\t        createEncryptor: function (cipher, iv) {\n\t            return this.Encryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Creates this mode for decryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);\n\t         */\n\t        createDecryptor: function (cipher, iv) {\n\t            return this.Decryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created mode.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);\n\t         */\n\t        init: function (cipher, iv) {\n\t            this._cipher = cipher;\n\t            this._iv = iv;\n\t        }\n\t    });\n\n\t    /**\n\t     * Cipher Block Chaining mode.\n\t     */\n\t    var CBC = C_mode.CBC = (function () {\n\t        /**\n\t         * Abstract base CBC mode.\n\t         */\n\t        var CBC = BlockCipherMode.extend();\n\n\t        /**\n\t         * CBC encryptor.\n\t         */\n\t        CBC.Encryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // XOR and encrypt\n\t                xorBlock.call(this, words, offset, blockSize);\n\t                cipher.encryptBlock(words, offset);\n\n\t                // Remember this block to use with next block\n\t                this._prevBlock = words.slice(offset, offset + blockSize);\n\t            }\n\t        });\n\n\t        /**\n\t         * CBC decryptor.\n\t         */\n\t        CBC.Decryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // Remember this block to use with next block\n\t                var thisBlock = words.slice(offset, offset + blockSize);\n\n\t                // Decrypt and XOR\n\t                cipher.decryptBlock(words, offset);\n\t                xorBlock.call(this, words, offset, blockSize);\n\n\t                // This block becomes the previous block\n\t                this._prevBlock = thisBlock;\n\t            }\n\t        });\n\n\t        function xorBlock(words, offset, blockSize) {\n\t            var block;\n\n\t            // Shortcut\n\t            var iv = this._iv;\n\n\t            // Choose mixing block\n\t            if (iv) {\n\t                block = iv;\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            } else {\n\t                block = this._prevBlock;\n\t            }\n\n\t            // XOR blocks\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= block[i];\n\t            }\n\t        }\n\n\t        return CBC;\n\t    }());\n\n\t    /**\n\t     * Padding namespace.\n\t     */\n\t    var C_pad = C.pad = {};\n\n\t    /**\n\t     * PKCS #5/7 padding strategy.\n\t     */\n\t    var Pkcs7 = C_pad.Pkcs7 = {\n\t        /**\n\t         * Pads data using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to pad.\n\t         * @param {number} blockSize The multiple that the data should be padded to.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);\n\t         */\n\t        pad: function (data, blockSize) {\n\t            // Shortcut\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count padding bytes\n\t            var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t            // Create padding word\n\t            var paddingWord = (nPaddingBytes << 24) | (nPaddingBytes << 16) | (nPaddingBytes << 8) | nPaddingBytes;\n\n\t            // Create padding\n\t            var paddingWords = [];\n\t            for (var i = 0; i < nPaddingBytes; i += 4) {\n\t                paddingWords.push(paddingWord);\n\t            }\n\t            var padding = WordArray.create(paddingWords, nPaddingBytes);\n\n\t            // Add padding\n\t            data.concat(padding);\n\t        },\n\n\t        /**\n\t         * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to unpad.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.unpad(wordArray);\n\t         */\n\t        unpad: function (data) {\n\t            // Get number of padding bytes from last byte\n\t            var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t            // Remove padding\n\t            data.sigBytes -= nPaddingBytes;\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract base block cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)\n\t     */\n\t    var BlockCipher = C_lib.BlockCipher = Cipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Mode} mode The block mode to use. Default: CBC\n\t         * @property {Padding} padding The padding strategy to use. Default: Pkcs7\n\t         */\n\t        cfg: Cipher.cfg.extend({\n\t            mode: CBC,\n\t            padding: Pkcs7\n\t        }),\n\n\t        reset: function () {\n\t            var modeCreator;\n\n\t            // Reset cipher\n\t            Cipher.reset.call(this);\n\n\t            // Shortcuts\n\t            var cfg = this.cfg;\n\t            var iv = cfg.iv;\n\t            var mode = cfg.mode;\n\n\t            // Reset block mode\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                modeCreator = mode.createEncryptor;\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                modeCreator = mode.createDecryptor;\n\t                // Keep at least one block in the buffer for unpadding\n\t                this._minBufferSize = 1;\n\t            }\n\n\t            if (this._mode && this._mode.__creator == modeCreator) {\n\t                this._mode.init(this, iv && iv.words);\n\t            } else {\n\t                this._mode = modeCreator.call(mode, this, iv && iv.words);\n\t                this._mode.__creator = modeCreator;\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (words, offset) {\n\t            this._mode.processBlock(words, offset);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var finalProcessedBlocks;\n\n\t            // Shortcut\n\t            var padding = this.cfg.padding;\n\n\t            // Finalize\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                // Pad data\n\t                padding.pad(this._data, this.blockSize);\n\n\t                // Process final blocks\n\t                finalProcessedBlocks = this._process(!!'flush');\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                // Process final blocks\n\t                finalProcessedBlocks = this._process(!!'flush');\n\n\t                // Unpad data\n\t                padding.unpad(finalProcessedBlocks);\n\t            }\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 128/32\n\t    });\n\n\t    /**\n\t     * A collection of cipher parameters.\n\t     *\n\t     * @property {WordArray} ciphertext The raw ciphertext.\n\t     * @property {WordArray} key The key to this ciphertext.\n\t     * @property {WordArray} iv The IV used in the ciphering operation.\n\t     * @property {WordArray} salt The salt used with a key derivation function.\n\t     * @property {Cipher} algorithm The cipher algorithm.\n\t     * @property {Mode} mode The block mode used in the ciphering operation.\n\t     * @property {Padding} padding The padding scheme used in the ciphering operation.\n\t     * @property {number} blockSize The block size of the cipher.\n\t     * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.\n\t     */\n\t    var CipherParams = C_lib.CipherParams = Base.extend({\n\t        /**\n\t         * Initializes a newly created cipher params object.\n\t         *\n\t         * @param {Object} cipherParams An object with any of the possible cipher parameters.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.lib.CipherParams.create({\n\t         *         ciphertext: ciphertextWordArray,\n\t         *         key: keyWordArray,\n\t         *         iv: ivWordArray,\n\t         *         salt: saltWordArray,\n\t         *         algorithm: CryptoJS.algo.AES,\n\t         *         mode: CryptoJS.mode.CBC,\n\t         *         padding: CryptoJS.pad.PKCS7,\n\t         *         blockSize: 4,\n\t         *         formatter: CryptoJS.format.OpenSSL\n\t         *     });\n\t         */\n\t        init: function (cipherParams) {\n\t            this.mixIn(cipherParams);\n\t        },\n\n\t        /**\n\t         * Converts this cipher params object to a string.\n\t         *\n\t         * @param {Format} formatter (Optional) The formatting strategy to use.\n\t         *\n\t         * @return {string} The stringified cipher params.\n\t         *\n\t         * @throws Error If neither the formatter nor the default formatter is set.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = cipherParams + '';\n\t         *     var string = cipherParams.toString();\n\t         *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);\n\t         */\n\t        toString: function (formatter) {\n\t            return (formatter || this.formatter).stringify(this);\n\t        }\n\t    });\n\n\t    /**\n\t     * Format namespace.\n\t     */\n\t    var C_format = C.format = {};\n\n\t    /**\n\t     * OpenSSL formatting strategy.\n\t     */\n\t    var OpenSSLFormatter = C_format.OpenSSL = {\n\t        /**\n\t         * Converts a cipher params object to an OpenSSL-compatible string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The OpenSSL-compatible string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\n\t         */\n\t        stringify: function (cipherParams) {\n\t            var wordArray;\n\n\t            // Shortcuts\n\t            var ciphertext = cipherParams.ciphertext;\n\t            var salt = cipherParams.salt;\n\n\t            // Format\n\t            if (salt) {\n\t                wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);\n\t            } else {\n\t                wordArray = ciphertext;\n\t            }\n\n\t            return wordArray.toString(Base64);\n\t        },\n\n\t        /**\n\t         * Converts an OpenSSL-compatible string to a cipher params object.\n\t         *\n\t         * @param {string} openSSLStr The OpenSSL-compatible string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\n\t         */\n\t        parse: function (openSSLStr) {\n\t            var salt;\n\n\t            // Parse base64\n\t            var ciphertext = Base64.parse(openSSLStr);\n\n\t            // Shortcut\n\t            var ciphertextWords = ciphertext.words;\n\n\t            // Test for salt\n\t            if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {\n\t                // Extract salt\n\t                salt = WordArray.create(ciphertextWords.slice(2, 4));\n\n\t                // Remove salt from ciphertext\n\t                ciphertextWords.splice(0, 4);\n\t                ciphertext.sigBytes -= 16;\n\t            }\n\n\t            return CipherParams.create({ ciphertext: ciphertext, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A cipher wrapper that returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var SerializableCipher = C_lib.SerializableCipher = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL\n\t         */\n\t        cfg: Base.extend({\n\t            format: OpenSSLFormatter\n\t        }),\n\n\t        /**\n\t         * Encrypts a message.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Encrypt\n\t            var encryptor = cipher.createEncryptor(key, cfg);\n\t            var ciphertext = encryptor.finalize(message);\n\n\t            // Shortcut\n\t            var cipherCfg = encryptor.cfg;\n\n\t            // Create and return serializable cipher params\n\t            return CipherParams.create({\n\t                ciphertext: ciphertext,\n\t                key: key,\n\t                iv: cipherCfg.iv,\n\t                algorithm: cipher,\n\t                mode: cipherCfg.mode,\n\t                padding: cipherCfg.padding,\n\t                blockSize: cipher.blockSize,\n\t                formatter: cfg.format\n\t            });\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Decrypt\n\t            var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);\n\n\t            return plaintext;\n\t        },\n\n\t        /**\n\t         * Converts serialized ciphertext to CipherParams,\n\t         * else assumed CipherParams already and returns ciphertext unchanged.\n\t         *\n\t         * @param {CipherParams|string} ciphertext The ciphertext.\n\t         * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.\n\t         *\n\t         * @return {CipherParams} The unserialized ciphertext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);\n\t         */\n\t        _parse: function (ciphertext, format) {\n\t            if (typeof ciphertext == 'string') {\n\t                return format.parse(ciphertext, this);\n\t            } else {\n\t                return ciphertext;\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Key derivation function namespace.\n\t     */\n\t    var C_kdf = C.kdf = {};\n\n\t    /**\n\t     * OpenSSL key derivation function.\n\t     */\n\t    var OpenSSLKdf = C_kdf.OpenSSL = {\n\t        /**\n\t         * Derives a key and IV from a password.\n\t         *\n\t         * @param {string} password The password to derive from.\n\t         * @param {number} keySize The size in words of the key to generate.\n\t         * @param {number} ivSize The size in words of the IV to generate.\n\t         * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.\n\t         *\n\t         * @return {CipherParams} A cipher params object with the key, IV, and salt.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');\n\t         */\n\t        execute: function (password, keySize, ivSize, salt, hasher) {\n\t            // Generate random salt\n\t            if (!salt) {\n\t                salt = WordArray.random(64/8);\n\t            }\n\n\t            // Derive key and IV\n\t            if (!hasher) {\n\t                var key = EvpKDF.create({ keySize: keySize + ivSize }).compute(password, salt);\n\t            } else {\n\t                var key = EvpKDF.create({ keySize: keySize + ivSize, hasher: hasher }).compute(password, salt);\n\t            }\n\n\n\t            // Separate key and IV\n\t            var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);\n\t            key.sigBytes = keySize * 4;\n\n\t            // Return params\n\t            return CipherParams.create({ key: key, iv: iv, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A serializable cipher wrapper that derives the key from a password,\n\t     * and returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL\n\t         */\n\t        cfg: SerializableCipher.cfg.extend({\n\t            kdf: OpenSSLKdf\n\t        }),\n\n\t        /**\n\t         * Encrypts a message using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, cfg.salt, cfg.hasher);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Encrypt\n\t            var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);\n\n\t            // Mix in derived params\n\t            ciphertext.mixIn(derivedParams);\n\n\t            return ciphertext;\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt, cfg.hasher);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Decrypt\n\t            var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);\n\n\t            return plaintext;\n\t        }\n\t    });\n\t}());\n\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Cipher Feedback block mode.\n\t */\n\tCryptoJS.mode.CFB = (function () {\n\t    var CFB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    CFB.Encryptor = CFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher;\n\t            var blockSize = cipher.blockSize;\n\n\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n\t            // Remember this block to use with next block\n\t            this._prevBlock = words.slice(offset, offset + blockSize);\n\t        }\n\t    });\n\n\t    CFB.Decryptor = CFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher;\n\t            var blockSize = cipher.blockSize;\n\n\t            // Remember this block to use with next block\n\t            var thisBlock = words.slice(offset, offset + blockSize);\n\n\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n\t            // This block becomes the previous block\n\t            this._prevBlock = thisBlock;\n\t        }\n\t    });\n\n\t    function generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {\n\t        var keystream;\n\n\t        // Shortcut\n\t        var iv = this._iv;\n\n\t        // Generate keystream\n\t        if (iv) {\n\t            keystream = iv.slice(0);\n\n\t            // Remove IV for subsequent blocks\n\t            this._iv = undefined;\n\t        } else {\n\t            keystream = this._prevBlock;\n\t        }\n\t        cipher.encryptBlock(keystream, 0);\n\n\t        // Encrypt\n\t        for (var i = 0; i < blockSize; i++) {\n\t            words[offset + i] ^= keystream[i];\n\t        }\n\t    }\n\n\t    return CFB;\n\t}());\n\n\n\treturn CryptoJS.mode.CFB;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Counter block mode.\n\t */\n\tCryptoJS.mode.CTR = (function () {\n\t    var CTR = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = CTR.Encryptor = CTR.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            var keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Increment counter\n\t            counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTR.Decryptor = Encryptor;\n\n\t    return CTR;\n\t}());\n\n\n\treturn CryptoJS.mode.CTR;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/** @preserve\n\t * Counter block mode compatible with  Dr Brian Gladman fileenc.c\n\t * derived from CryptoJS.mode.CTR\n\t * Jan Hruby jhruby.web@gmail.com\n\t */\n\tCryptoJS.mode.CTRGladman = (function () {\n\t    var CTRGladman = CryptoJS.lib.BlockCipherMode.extend();\n\n\t\tfunction incWord(word)\n\t\t{\n\t\t\tif (((word >> 24) & 0xff) === 0xff) { //overflow\n\t\t\tvar b1 = (word >> 16)&0xff;\n\t\t\tvar b2 = (word >> 8)&0xff;\n\t\t\tvar b3 = word & 0xff;\n\n\t\t\tif (b1 === 0xff) // overflow b1\n\t\t\t{\n\t\t\tb1 = 0;\n\t\t\tif (b2 === 0xff)\n\t\t\t{\n\t\t\t\tb2 = 0;\n\t\t\t\tif (b3 === 0xff)\n\t\t\t\t{\n\t\t\t\t\tb3 = 0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t++b3;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t++b2;\n\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t++b1;\n\t\t\t}\n\n\t\t\tword = 0;\n\t\t\tword += (b1 << 16);\n\t\t\tword += (b2 << 8);\n\t\t\tword += b3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\tword += (0x01 << 24);\n\t\t\t}\n\t\t\treturn word;\n\t\t}\n\n\t\tfunction incCounter(counter)\n\t\t{\n\t\t\tif ((counter[0] = incWord(counter[0])) === 0)\n\t\t\t{\n\t\t\t\t// encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8\n\t\t\t\tcounter[1] = incWord(counter[1]);\n\t\t\t}\n\t\t\treturn counter;\n\t\t}\n\n\t    var Encryptor = CTRGladman.Encryptor = CTRGladman.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\n\t\t\t\tincCounter(counter);\n\n\t\t\t\tvar keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTRGladman.Decryptor = Encryptor;\n\n\t    return CTRGladman;\n\t}());\n\n\n\n\n\treturn CryptoJS.mode.CTRGladman;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Output Feedback block mode.\n\t */\n\tCryptoJS.mode.OFB = (function () {\n\t    var OFB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = OFB.Encryptor = OFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var keystream = this._keystream;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                keystream = this._keystream = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    OFB.Decryptor = Encryptor;\n\n\t    return OFB;\n\t}());\n\n\n\treturn CryptoJS.mode.OFB;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Electronic Codebook block mode.\n\t */\n\tCryptoJS.mode.ECB = (function () {\n\t    var ECB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    ECB.Encryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.encryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    ECB.Decryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.decryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    return ECB;\n\t}());\n\n\n\treturn CryptoJS.mode.ECB;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ANSI X.923 padding strategy.\n\t */\n\tCryptoJS.pad.AnsiX923 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcuts\n\t        var dataSigBytes = data.sigBytes;\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;\n\n\t        // Compute last byte position\n\t        var lastBytePos = dataSigBytes + nPaddingBytes - 1;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.words[lastBytePos >>> 2] |= nPaddingBytes << (24 - (lastBytePos % 4) * 8);\n\t        data.sigBytes += nPaddingBytes;\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Ansix923;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ISO 10126 padding strategy.\n\t */\n\tCryptoJS.pad.Iso10126 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcut\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t        // Pad\n\t        data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes - 1)).\n\t             concat(CryptoJS.lib.WordArray.create([nPaddingBytes << 24], 1));\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Iso10126;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ISO/IEC 9797-1 Padding Method 2.\n\t */\n\tCryptoJS.pad.Iso97971 = {\n\t    pad: function (data, blockSize) {\n\t        // Add 0x80 byte\n\t        data.concat(CryptoJS.lib.WordArray.create([0x80000000], 1));\n\n\t        // Zero pad the rest\n\t        CryptoJS.pad.ZeroPadding.pad(data, blockSize);\n\t    },\n\n\t    unpad: function (data) {\n\t        // Remove zero padding\n\t        CryptoJS.pad.ZeroPadding.unpad(data);\n\n\t        // Remove one more byte -- the 0x80 byte\n\t        data.sigBytes--;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Iso97971;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Zero padding strategy.\n\t */\n\tCryptoJS.pad.ZeroPadding = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcut\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.sigBytes += blockSizeBytes - ((data.sigBytes % blockSizeBytes) || blockSizeBytes);\n\t    },\n\n\t    unpad: function (data) {\n\t        // Shortcut\n\t        var dataWords = data.words;\n\n\t        // Unpad\n\t        var i = data.sigBytes - 1;\n\t        for (var i = data.sigBytes - 1; i >= 0; i--) {\n\t            if (((dataWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff)) {\n\t                data.sigBytes = i + 1;\n\t                break;\n\t            }\n\t        }\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.ZeroPadding;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * A noop padding strategy.\n\t */\n\tCryptoJS.pad.NoPadding = {\n\t    pad: function () {\n\t    },\n\n\t    unpad: function () {\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.NoPadding;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var CipherParams = C_lib.CipherParams;\n\t    var C_enc = C.enc;\n\t    var Hex = C_enc.Hex;\n\t    var C_format = C.format;\n\n\t    var HexFormatter = C_format.Hex = {\n\t        /**\n\t         * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The hexadecimally encoded string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);\n\t         */\n\t        stringify: function (cipherParams) {\n\t            return cipherParams.ciphertext.toString(Hex);\n\t        },\n\n\t        /**\n\t         * Converts a hexadecimally encoded ciphertext string to a cipher params object.\n\t         *\n\t         * @param {string} input The hexadecimally encoded string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.Hex.parse(hexString);\n\t         */\n\t        parse: function (input) {\n\t            var ciphertext = Hex.parse(input);\n\t            return CipherParams.create({ ciphertext: ciphertext });\n\t        }\n\t    };\n\t}());\n\n\n\treturn CryptoJS.format.Hex;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    // Lookup tables\n\t    var SBOX = [];\n\t    var INV_SBOX = [];\n\t    var SUB_MIX_0 = [];\n\t    var SUB_MIX_1 = [];\n\t    var SUB_MIX_2 = [];\n\t    var SUB_MIX_3 = [];\n\t    var INV_SUB_MIX_0 = [];\n\t    var INV_SUB_MIX_1 = [];\n\t    var INV_SUB_MIX_2 = [];\n\t    var INV_SUB_MIX_3 = [];\n\n\t    // Compute lookup tables\n\t    (function () {\n\t        // Compute double table\n\t        var d = [];\n\t        for (var i = 0; i < 256; i++) {\n\t            if (i < 128) {\n\t                d[i] = i << 1;\n\t            } else {\n\t                d[i] = (i << 1) ^ 0x11b;\n\t            }\n\t        }\n\n\t        // Walk GF(2^8)\n\t        var x = 0;\n\t        var xi = 0;\n\t        for (var i = 0; i < 256; i++) {\n\t            // Compute sbox\n\t            var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n\t            sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n\t            SBOX[x] = sx;\n\t            INV_SBOX[sx] = x;\n\n\t            // Compute multiplication\n\t            var x2 = d[x];\n\t            var x4 = d[x2];\n\t            var x8 = d[x4];\n\n\t            // Compute sub bytes, mix columns tables\n\t            var t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n\t            SUB_MIX_0[x] = (t << 24) | (t >>> 8);\n\t            SUB_MIX_1[x] = (t << 16) | (t >>> 16);\n\t            SUB_MIX_2[x] = (t << 8)  | (t >>> 24);\n\t            SUB_MIX_3[x] = t;\n\n\t            // Compute inv sub bytes, inv mix columns tables\n\t            var t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n\t            INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);\n\t            INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);\n\t            INV_SUB_MIX_2[sx] = (t << 8)  | (t >>> 24);\n\t            INV_SUB_MIX_3[sx] = t;\n\n\t            // Compute next counter\n\t            if (!x) {\n\t                x = xi = 1;\n\t            } else {\n\t                x = x2 ^ d[d[d[x8 ^ x2]]];\n\t                xi ^= d[d[xi]];\n\t            }\n\t        }\n\t    }());\n\n\t    // Precomputed Rcon lookup\n\t    var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\n\t    /**\n\t     * AES block cipher algorithm.\n\t     */\n\t    var AES = C_algo.AES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            var t;\n\n\t            // Skip reset of nRounds has been set before and key did not change\n\t            if (this._nRounds && this._keyPriorReset === this._key) {\n\t                return;\n\t            }\n\n\t            // Shortcuts\n\t            var key = this._keyPriorReset = this._key;\n\t            var keyWords = key.words;\n\t            var keySize = key.sigBytes / 4;\n\n\t            // Compute number of rounds\n\t            var nRounds = this._nRounds = keySize + 6;\n\n\t            // Compute number of key schedule rows\n\t            var ksRows = (nRounds + 1) * 4;\n\n\t            // Compute key schedule\n\t            var keySchedule = this._keySchedule = [];\n\t            for (var ksRow = 0; ksRow < ksRows; ksRow++) {\n\t                if (ksRow < keySize) {\n\t                    keySchedule[ksRow] = keyWords[ksRow];\n\t                } else {\n\t                    t = keySchedule[ksRow - 1];\n\n\t                    if (!(ksRow % keySize)) {\n\t                        // Rot word\n\t                        t = (t << 8) | (t >>> 24);\n\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\n\t                        // Mix Rcon\n\t                        t ^= RCON[(ksRow / keySize) | 0] << 24;\n\t                    } else if (keySize > 6 && ksRow % keySize == 4) {\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\t                    }\n\n\t                    keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\n\t                }\n\t            }\n\n\t            // Compute inv key schedule\n\t            var invKeySchedule = this._invKeySchedule = [];\n\t            for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {\n\t                var ksRow = ksRows - invKsRow;\n\n\t                if (invKsRow % 4) {\n\t                    var t = keySchedule[ksRow];\n\t                } else {\n\t                    var t = keySchedule[ksRow - 4];\n\t                }\n\n\t                if (invKsRow < 4 || ksRow <= 4) {\n\t                    invKeySchedule[invKsRow] = t;\n\t                } else {\n\t                    invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[(t >>> 16) & 0xff]] ^\n\t                                               INV_SUB_MIX_2[SBOX[(t >>> 8) & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];\n\t                }\n\t            }\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            // Swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\n\t            this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);\n\n\t            // Inv swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\t        },\n\n\t        _doCryptBlock: function (M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {\n\t            // Shortcut\n\t            var nRounds = this._nRounds;\n\n\t            // Get input, add round key\n\t            var s0 = M[offset]     ^ keySchedule[0];\n\t            var s1 = M[offset + 1] ^ keySchedule[1];\n\t            var s2 = M[offset + 2] ^ keySchedule[2];\n\t            var s3 = M[offset + 3] ^ keySchedule[3];\n\n\t            // Key schedule row counter\n\t            var ksRow = 4;\n\n\t            // Rounds\n\t            for (var round = 1; round < nRounds; round++) {\n\t                // Shift rows, sub bytes, mix columns, add round key\n\t                var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[(s1 >>> 16) & 0xff] ^ SUB_MIX_2[(s2 >>> 8) & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];\n\t                var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[(s2 >>> 16) & 0xff] ^ SUB_MIX_2[(s3 >>> 8) & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];\n\t                var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[(s3 >>> 16) & 0xff] ^ SUB_MIX_2[(s0 >>> 8) & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];\n\t                var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[(s0 >>> 16) & 0xff] ^ SUB_MIX_2[(s1 >>> 8) & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];\n\n\t                // Update state\n\t                s0 = t0;\n\t                s1 = t1;\n\t                s2 = t2;\n\t                s3 = t3;\n\t            }\n\n\t            // Shift rows, sub bytes, add round key\n\t            var t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];\n\n\t            // Set output\n\t            M[offset]     = t0;\n\t            M[offset + 1] = t1;\n\t            M[offset + 2] = t2;\n\t            M[offset + 3] = t3;\n\t        },\n\n\t        keySize: 256/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.AES = BlockCipher._createHelper(AES);\n\t}());\n\n\n\treturn CryptoJS.AES;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    // Permuted Choice 1 constants\n\t    var PC1 = [\n\t        57, 49, 41, 33, 25, 17, 9,  1,\n\t        58, 50, 42, 34, 26, 18, 10, 2,\n\t        59, 51, 43, 35, 27, 19, 11, 3,\n\t        60, 52, 44, 36, 63, 55, 47, 39,\n\t        31, 23, 15, 7,  62, 54, 46, 38,\n\t        30, 22, 14, 6,  61, 53, 45, 37,\n\t        29, 21, 13, 5,  28, 20, 12, 4\n\t    ];\n\n\t    // Permuted Choice 2 constants\n\t    var PC2 = [\n\t        14, 17, 11, 24, 1,  5,\n\t        3,  28, 15, 6,  21, 10,\n\t        23, 19, 12, 4,  26, 8,\n\t        16, 7,  27, 20, 13, 2,\n\t        41, 52, 31, 37, 47, 55,\n\t        30, 40, 51, 45, 33, 48,\n\t        44, 49, 39, 56, 34, 53,\n\t        46, 42, 50, 36, 29, 32\n\t    ];\n\n\t    // Cumulative bit shift constants\n\t    var BIT_SHIFTS = [1,  2,  4,  6,  8,  10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];\n\n\t    // SBOXes and round permutation constants\n\t    var SBOX_P = [\n\t        {\n\t            0x0: 0x808200,\n\t            0x10000000: 0x8000,\n\t            0x20000000: 0x808002,\n\t            0x30000000: 0x2,\n\t            0x40000000: 0x200,\n\t            0x50000000: 0x808202,\n\t            0x60000000: 0x800202,\n\t            0x70000000: 0x800000,\n\t            0x80000000: 0x202,\n\t            0x90000000: 0x800200,\n\t            0xa0000000: 0x8200,\n\t            0xb0000000: 0x808000,\n\t            0xc0000000: 0x8002,\n\t            0xd0000000: 0x800002,\n\t            0xe0000000: 0x0,\n\t            0xf0000000: 0x8202,\n\t            0x8000000: 0x0,\n\t            0x18000000: 0x808202,\n\t            0x28000000: 0x8202,\n\t            0x38000000: 0x8000,\n\t            0x48000000: 0x808200,\n\t            0x58000000: 0x200,\n\t            0x68000000: 0x808002,\n\t            0x78000000: 0x2,\n\t            0x88000000: 0x800200,\n\t            0x98000000: 0x8200,\n\t            0xa8000000: 0x808000,\n\t            0xb8000000: 0x800202,\n\t            0xc8000000: 0x800002,\n\t            0xd8000000: 0x8002,\n\t            0xe8000000: 0x202,\n\t            0xf8000000: 0x800000,\n\t            0x1: 0x8000,\n\t            0x10000001: 0x2,\n\t            0x20000001: 0x808200,\n\t            0x30000001: 0x800000,\n\t            0x40000001: 0x808002,\n\t            0x50000001: 0x8200,\n\t            0x60000001: 0x200,\n\t            0x70000001: 0x800202,\n\t            0x80000001: 0x808202,\n\t            0x90000001: 0x808000,\n\t            0xa0000001: 0x800002,\n\t            0xb0000001: 0x8202,\n\t            0xc0000001: 0x202,\n\t            0xd0000001: 0x800200,\n\t            0xe0000001: 0x8002,\n\t            0xf0000001: 0x0,\n\t            0x8000001: 0x808202,\n\t            0x18000001: 0x808000,\n\t            0x28000001: 0x800000,\n\t            0x38000001: 0x200,\n\t            0x48000001: 0x8000,\n\t            0x58000001: 0x800002,\n\t            0x68000001: 0x2,\n\t            0x78000001: 0x8202,\n\t            0x88000001: 0x8002,\n\t            0x98000001: 0x800202,\n\t            0xa8000001: 0x202,\n\t            0xb8000001: 0x808200,\n\t            0xc8000001: 0x800200,\n\t            0xd8000001: 0x0,\n\t            0xe8000001: 0x8200,\n\t            0xf8000001: 0x808002\n\t        },\n\t        {\n\t            0x0: 0x40084010,\n\t            0x1000000: 0x4000,\n\t            0x2000000: 0x80000,\n\t            0x3000000: 0x40080010,\n\t            0x4000000: 0x40000010,\n\t            0x5000000: 0x40084000,\n\t            0x6000000: 0x40004000,\n\t            0x7000000: 0x10,\n\t            0x8000000: 0x84000,\n\t            0x9000000: 0x40004010,\n\t            0xa000000: 0x40000000,\n\t            0xb000000: 0x84010,\n\t            0xc000000: 0x80010,\n\t            0xd000000: 0x0,\n\t            0xe000000: 0x4010,\n\t            0xf000000: 0x40080000,\n\t            0x800000: 0x40004000,\n\t            0x1800000: 0x84010,\n\t            0x2800000: 0x10,\n\t            0x3800000: 0x40004010,\n\t            0x4800000: 0x40084010,\n\t            0x5800000: 0x40000000,\n\t            0x6800000: 0x80000,\n\t            0x7800000: 0x40080010,\n\t            0x8800000: 0x80010,\n\t            0x9800000: 0x0,\n\t            0xa800000: 0x4000,\n\t            0xb800000: 0x40080000,\n\t            0xc800000: 0x40000010,\n\t            0xd800000: 0x84000,\n\t            0xe800000: 0x40084000,\n\t            0xf800000: 0x4010,\n\t            0x10000000: 0x0,\n\t            0x11000000: 0x40080010,\n\t            0x12000000: 0x40004010,\n\t            0x13000000: 0x40084000,\n\t            0x14000000: 0x40080000,\n\t            0x15000000: 0x10,\n\t            0x16000000: 0x84010,\n\t            0x17000000: 0x4000,\n\t            0x18000000: 0x4010,\n\t            0x19000000: 0x80000,\n\t            0x1a000000: 0x80010,\n\t            0x1b000000: 0x40000010,\n\t            0x1c000000: 0x84000,\n\t            0x1d000000: 0x40004000,\n\t            0x1e000000: 0x40000000,\n\t            0x1f000000: 0x40084010,\n\t            0x10800000: 0x84010,\n\t            0x11800000: 0x80000,\n\t            0x12800000: 0x40080000,\n\t            0x13800000: 0x4000,\n\t            0x14800000: 0x40004000,\n\t            0x15800000: 0x40084010,\n\t            0x16800000: 0x10,\n\t            0x17800000: 0x40000000,\n\t            0x18800000: 0x40084000,\n\t            0x19800000: 0x40000010,\n\t            0x1a800000: 0x40004010,\n\t            0x1b800000: 0x80010,\n\t            0x1c800000: 0x0,\n\t            0x1d800000: 0x4010,\n\t            0x1e800000: 0x40080010,\n\t            0x1f800000: 0x84000\n\t        },\n\t        {\n\t            0x0: 0x104,\n\t            0x100000: 0x0,\n\t            0x200000: 0x4000100,\n\t            0x300000: 0x10104,\n\t            0x400000: 0x10004,\n\t            0x500000: 0x4000004,\n\t            0x600000: 0x4010104,\n\t            0x700000: 0x4010000,\n\t            0x800000: 0x4000000,\n\t            0x900000: 0x4010100,\n\t            0xa00000: 0x10100,\n\t            0xb00000: 0x4010004,\n\t            0xc00000: 0x4000104,\n\t            0xd00000: 0x10000,\n\t            0xe00000: 0x4,\n\t            0xf00000: 0x100,\n\t            0x80000: 0x4010100,\n\t            0x180000: 0x4010004,\n\t            0x280000: 0x0,\n\t            0x380000: 0x4000100,\n\t            0x480000: 0x4000004,\n\t            0x580000: 0x10000,\n\t            0x680000: 0x10004,\n\t            0x780000: 0x104,\n\t            0x880000: 0x4,\n\t            0x980000: 0x100,\n\t            0xa80000: 0x4010000,\n\t            0xb80000: 0x10104,\n\t            0xc80000: 0x10100,\n\t            0xd80000: 0x4000104,\n\t            0xe80000: 0x4010104,\n\t            0xf80000: 0x4000000,\n\t            0x1000000: 0x4010100,\n\t            0x1100000: 0x10004,\n\t            0x1200000: 0x10000,\n\t            0x1300000: 0x4000100,\n\t            0x1400000: 0x100,\n\t            0x1500000: 0x4010104,\n\t            0x1600000: 0x4000004,\n\t            0x1700000: 0x0,\n\t            0x1800000: 0x4000104,\n\t            0x1900000: 0x4000000,\n\t            0x1a00000: 0x4,\n\t            0x1b00000: 0x10100,\n\t            0x1c00000: 0x4010000,\n\t            0x1d00000: 0x104,\n\t            0x1e00000: 0x10104,\n\t            0x1f00000: 0x4010004,\n\t            0x1080000: 0x4000000,\n\t            0x1180000: 0x104,\n\t            0x1280000: 0x4010100,\n\t            0x1380000: 0x0,\n\t            0x1480000: 0x10004,\n\t            0x1580000: 0x4000100,\n\t            0x1680000: 0x100,\n\t            0x1780000: 0x4010004,\n\t            0x1880000: 0x10000,\n\t            0x1980000: 0x4010104,\n\t            0x1a80000: 0x10104,\n\t            0x1b80000: 0x4000004,\n\t            0x1c80000: 0x4000104,\n\t            0x1d80000: 0x4010000,\n\t            0x1e80000: 0x4,\n\t            0x1f80000: 0x10100\n\t        },\n\t        {\n\t            0x0: 0x80401000,\n\t            0x10000: 0x80001040,\n\t            0x20000: 0x401040,\n\t            0x30000: 0x80400000,\n\t            0x40000: 0x0,\n\t            0x50000: 0x401000,\n\t            0x60000: 0x80000040,\n\t            0x70000: 0x400040,\n\t            0x80000: 0x80000000,\n\t            0x90000: 0x400000,\n\t            0xa0000: 0x40,\n\t            0xb0000: 0x80001000,\n\t            0xc0000: 0x80400040,\n\t            0xd0000: 0x1040,\n\t            0xe0000: 0x1000,\n\t            0xf0000: 0x80401040,\n\t            0x8000: 0x80001040,\n\t            0x18000: 0x40,\n\t            0x28000: 0x80400040,\n\t            0x38000: 0x80001000,\n\t            0x48000: 0x401000,\n\t            0x58000: 0x80401040,\n\t            0x68000: 0x0,\n\t            0x78000: 0x80400000,\n\t            0x88000: 0x1000,\n\t            0x98000: 0x80401000,\n\t            0xa8000: 0x400000,\n\t            0xb8000: 0x1040,\n\t            0xc8000: 0x80000000,\n\t            0xd8000: 0x400040,\n\t            0xe8000: 0x401040,\n\t            0xf8000: 0x80000040,\n\t            0x100000: 0x400040,\n\t            0x110000: 0x401000,\n\t            0x120000: 0x80000040,\n\t            0x130000: 0x0,\n\t            0x140000: 0x1040,\n\t            0x150000: 0x80400040,\n\t            0x160000: 0x80401000,\n\t            0x170000: 0x80001040,\n\t            0x180000: 0x80401040,\n\t            0x190000: 0x80000000,\n\t            0x1a0000: 0x80400000,\n\t            0x1b0000: 0x401040,\n\t            0x1c0000: 0x80001000,\n\t            0x1d0000: 0x400000,\n\t            0x1e0000: 0x40,\n\t            0x1f0000: 0x1000,\n\t            0x108000: 0x80400000,\n\t            0x118000: 0x80401040,\n\t            0x128000: 0x0,\n\t            0x138000: 0x401000,\n\t            0x148000: 0x400040,\n\t            0x158000: 0x80000000,\n\t            0x168000: 0x80001040,\n\t            0x178000: 0x40,\n\t            0x188000: 0x80000040,\n\t            0x198000: 0x1000,\n\t            0x1a8000: 0x80001000,\n\t            0x1b8000: 0x80400040,\n\t            0x1c8000: 0x1040,\n\t            0x1d8000: 0x80401000,\n\t            0x1e8000: 0x400000,\n\t            0x1f8000: 0x401040\n\t        },\n\t        {\n\t            0x0: 0x80,\n\t            0x1000: 0x1040000,\n\t            0x2000: 0x40000,\n\t            0x3000: 0x20000000,\n\t            0x4000: 0x20040080,\n\t            0x5000: 0x1000080,\n\t            0x6000: 0x21000080,\n\t            0x7000: 0x40080,\n\t            0x8000: 0x1000000,\n\t            0x9000: 0x20040000,\n\t            0xa000: 0x20000080,\n\t            0xb000: 0x21040080,\n\t            0xc000: 0x21040000,\n\t            0xd000: 0x0,\n\t            0xe000: 0x1040080,\n\t            0xf000: 0x21000000,\n\t            0x800: 0x1040080,\n\t            0x1800: 0x21000080,\n\t            0x2800: 0x80,\n\t            0x3800: 0x1040000,\n\t            0x4800: 0x40000,\n\t            0x5800: 0x20040080,\n\t            0x6800: 0x21040000,\n\t            0x7800: 0x20000000,\n\t            0x8800: 0x20040000,\n\t            0x9800: 0x0,\n\t            0xa800: 0x21040080,\n\t            0xb800: 0x1000080,\n\t            0xc800: 0x20000080,\n\t            0xd800: 0x21000000,\n\t            0xe800: 0x1000000,\n\t            0xf800: 0x40080,\n\t            0x10000: 0x40000,\n\t            0x11000: 0x80,\n\t            0x12000: 0x20000000,\n\t            0x13000: 0x21000080,\n\t            0x14000: 0x1000080,\n\t            0x15000: 0x21040000,\n\t            0x16000: 0x20040080,\n\t            0x17000: 0x1000000,\n\t            0x18000: 0x21040080,\n\t            0x19000: 0x21000000,\n\t            0x1a000: 0x1040000,\n\t            0x1b000: 0x20040000,\n\t            0x1c000: 0x40080,\n\t            0x1d000: 0x20000080,\n\t            0x1e000: 0x0,\n\t            0x1f000: 0x1040080,\n\t            0x10800: 0x21000080,\n\t            0x11800: 0x1000000,\n\t            0x12800: 0x1040000,\n\t            0x13800: 0x20040080,\n\t            0x14800: 0x20000000,\n\t            0x15800: 0x1040080,\n\t            0x16800: 0x80,\n\t            0x17800: 0x21040000,\n\t            0x18800: 0x40080,\n\t            0x19800: 0x21040080,\n\t            0x1a800: 0x0,\n\t            0x1b800: 0x21000000,\n\t            0x1c800: 0x1000080,\n\t            0x1d800: 0x40000,\n\t            0x1e800: 0x20040000,\n\t            0x1f800: 0x20000080\n\t        },\n\t        {\n\t            0x0: 0x10000008,\n\t            0x100: 0x2000,\n\t            0x200: 0x10200000,\n\t            0x300: 0x10202008,\n\t            0x400: 0x10002000,\n\t            0x500: 0x200000,\n\t            0x600: 0x200008,\n\t            0x700: 0x10000000,\n\t            0x800: 0x0,\n\t            0x900: 0x10002008,\n\t            0xa00: 0x202000,\n\t            0xb00: 0x8,\n\t            0xc00: 0x10200008,\n\t            0xd00: 0x202008,\n\t            0xe00: 0x2008,\n\t            0xf00: 0x10202000,\n\t            0x80: 0x10200000,\n\t            0x180: 0x10202008,\n\t            0x280: 0x8,\n\t            0x380: 0x200000,\n\t            0x480: 0x202008,\n\t            0x580: 0x10000008,\n\t            0x680: 0x10002000,\n\t            0x780: 0x2008,\n\t            0x880: 0x200008,\n\t            0x980: 0x2000,\n\t            0xa80: 0x10002008,\n\t            0xb80: 0x10200008,\n\t            0xc80: 0x0,\n\t            0xd80: 0x10202000,\n\t            0xe80: 0x202000,\n\t            0xf80: 0x10000000,\n\t            0x1000: 0x10002000,\n\t            0x1100: 0x10200008,\n\t            0x1200: 0x10202008,\n\t            0x1300: 0x2008,\n\t            0x1400: 0x200000,\n\t            0x1500: 0x10000000,\n\t            0x1600: 0x10000008,\n\t            0x1700: 0x202000,\n\t            0x1800: 0x202008,\n\t            0x1900: 0x0,\n\t            0x1a00: 0x8,\n\t            0x1b00: 0x10200000,\n\t            0x1c00: 0x2000,\n\t            0x1d00: 0x10002008,\n\t            0x1e00: 0x10202000,\n\t            0x1f00: 0x200008,\n\t            0x1080: 0x8,\n\t            0x1180: 0x202000,\n\t            0x1280: 0x200000,\n\t            0x1380: 0x10000008,\n\t            0x1480: 0x10002000,\n\t            0x1580: 0x2008,\n\t            0x1680: 0x10202008,\n\t            0x1780: 0x10200000,\n\t            0x1880: 0x10202000,\n\t            0x1980: 0x10200008,\n\t            0x1a80: 0x2000,\n\t            0x1b80: 0x202008,\n\t            0x1c80: 0x200008,\n\t            0x1d80: 0x0,\n\t            0x1e80: 0x10000000,\n\t            0x1f80: 0x10002008\n\t        },\n\t        {\n\t            0x0: 0x100000,\n\t            0x10: 0x2000401,\n\t            0x20: 0x400,\n\t            0x30: 0x100401,\n\t            0x40: 0x2100401,\n\t            0x50: 0x0,\n\t            0x60: 0x1,\n\t            0x70: 0x2100001,\n\t            0x80: 0x2000400,\n\t            0x90: 0x100001,\n\t            0xa0: 0x2000001,\n\t            0xb0: 0x2100400,\n\t            0xc0: 0x2100000,\n\t            0xd0: 0x401,\n\t            0xe0: 0x100400,\n\t            0xf0: 0x2000000,\n\t            0x8: 0x2100001,\n\t            0x18: 0x0,\n\t            0x28: 0x2000401,\n\t            0x38: 0x2100400,\n\t            0x48: 0x100000,\n\t            0x58: 0x2000001,\n\t            0x68: 0x2000000,\n\t            0x78: 0x401,\n\t            0x88: 0x100401,\n\t            0x98: 0x2000400,\n\t            0xa8: 0x2100000,\n\t            0xb8: 0x100001,\n\t            0xc8: 0x400,\n\t            0xd8: 0x2100401,\n\t            0xe8: 0x1,\n\t            0xf8: 0x100400,\n\t            0x100: 0x2000000,\n\t            0x110: 0x100000,\n\t            0x120: 0x2000401,\n\t            0x130: 0x2100001,\n\t            0x140: 0x100001,\n\t            0x150: 0x2000400,\n\t            0x160: 0x2100400,\n\t            0x170: 0x100401,\n\t            0x180: 0x401,\n\t            0x190: 0x2100401,\n\t            0x1a0: 0x100400,\n\t            0x1b0: 0x1,\n\t            0x1c0: 0x0,\n\t            0x1d0: 0x2100000,\n\t            0x1e0: 0x2000001,\n\t            0x1f0: 0x400,\n\t            0x108: 0x100400,\n\t            0x118: 0x2000401,\n\t            0x128: 0x2100001,\n\t            0x138: 0x1,\n\t            0x148: 0x2000000,\n\t            0x158: 0x100000,\n\t            0x168: 0x401,\n\t            0x178: 0x2100400,\n\t            0x188: 0x2000001,\n\t            0x198: 0x2100000,\n\t            0x1a8: 0x0,\n\t            0x1b8: 0x2100401,\n\t            0x1c8: 0x100401,\n\t            0x1d8: 0x400,\n\t            0x1e8: 0x2000400,\n\t            0x1f8: 0x100001\n\t        },\n\t        {\n\t            0x0: 0x8000820,\n\t            0x1: 0x20000,\n\t            0x2: 0x8000000,\n\t            0x3: 0x20,\n\t            0x4: 0x20020,\n\t            0x5: 0x8020820,\n\t            0x6: 0x8020800,\n\t            0x7: 0x800,\n\t            0x8: 0x8020000,\n\t            0x9: 0x8000800,\n\t            0xa: 0x20800,\n\t            0xb: 0x8020020,\n\t            0xc: 0x820,\n\t            0xd: 0x0,\n\t            0xe: 0x8000020,\n\t            0xf: 0x20820,\n\t            0x80000000: 0x800,\n\t            0x80000001: 0x8020820,\n\t            0x80000002: 0x8000820,\n\t            0x80000003: 0x8000000,\n\t            0x80000004: 0x8020000,\n\t            0x80000005: 0x20800,\n\t            0x80000006: 0x20820,\n\t            0x80000007: 0x20,\n\t            0x80000008: 0x8000020,\n\t            0x80000009: 0x820,\n\t            0x8000000a: 0x20020,\n\t            0x8000000b: 0x8020800,\n\t            0x8000000c: 0x0,\n\t            0x8000000d: 0x8020020,\n\t            0x8000000e: 0x8000800,\n\t            0x8000000f: 0x20000,\n\t            0x10: 0x20820,\n\t            0x11: 0x8020800,\n\t            0x12: 0x20,\n\t            0x13: 0x800,\n\t            0x14: 0x8000800,\n\t            0x15: 0x8000020,\n\t            0x16: 0x8020020,\n\t            0x17: 0x20000,\n\t            0x18: 0x0,\n\t            0x19: 0x20020,\n\t            0x1a: 0x8020000,\n\t            0x1b: 0x8000820,\n\t            0x1c: 0x8020820,\n\t            0x1d: 0x20800,\n\t            0x1e: 0x820,\n\t            0x1f: 0x8000000,\n\t            0x80000010: 0x20000,\n\t            0x80000011: 0x800,\n\t            0x80000012: 0x8020020,\n\t            0x80000013: 0x20820,\n\t            0x80000014: 0x20,\n\t            0x80000015: 0x8020000,\n\t            0x80000016: 0x8000000,\n\t            0x80000017: 0x8000820,\n\t            0x80000018: 0x8020820,\n\t            0x80000019: 0x8000020,\n\t            0x8000001a: 0x8000800,\n\t            0x8000001b: 0x0,\n\t            0x8000001c: 0x20800,\n\t            0x8000001d: 0x820,\n\t            0x8000001e: 0x20020,\n\t            0x8000001f: 0x8020800\n\t        }\n\t    ];\n\n\t    // Masks that select the SBOX input\n\t    var SBOX_MASK = [\n\t        0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000,\n\t        0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f\n\t    ];\n\n\t    /**\n\t     * DES block cipher algorithm.\n\t     */\n\t    var DES = C_algo.DES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\n\t            // Select 56 bits according to PC1\n\t            var keyBits = [];\n\t            for (var i = 0; i < 56; i++) {\n\t                var keyBitPos = PC1[i] - 1;\n\t                keyBits[i] = (keyWords[keyBitPos >>> 5] >>> (31 - keyBitPos % 32)) & 1;\n\t            }\n\n\t            // Assemble 16 subkeys\n\t            var subKeys = this._subKeys = [];\n\t            for (var nSubKey = 0; nSubKey < 16; nSubKey++) {\n\t                // Create subkey\n\t                var subKey = subKeys[nSubKey] = [];\n\n\t                // Shortcut\n\t                var bitShift = BIT_SHIFTS[nSubKey];\n\n\t                // Select 48 bits according to PC2\n\t                for (var i = 0; i < 24; i++) {\n\t                    // Select from the left 28 key bits\n\t                    subKey[(i / 6) | 0] |= keyBits[((PC2[i] - 1) + bitShift) % 28] << (31 - i % 6);\n\n\t                    // Select from the right 28 key bits\n\t                    subKey[4 + ((i / 6) | 0)] |= keyBits[28 + (((PC2[i + 24] - 1) + bitShift) % 28)] << (31 - i % 6);\n\t                }\n\n\t                // Since each subkey is applied to an expanded 32-bit input,\n\t                // the subkey can be broken into 8 values scaled to 32-bits,\n\t                // which allows the key to be used without expansion\n\t                subKey[0] = (subKey[0] << 1) | (subKey[0] >>> 31);\n\t                for (var i = 1; i < 7; i++) {\n\t                    subKey[i] = subKey[i] >>> ((i - 1) * 4 + 3);\n\t                }\n\t                subKey[7] = (subKey[7] << 5) | (subKey[7] >>> 27);\n\t            }\n\n\t            // Compute inverse subkeys\n\t            var invSubKeys = this._invSubKeys = [];\n\t            for (var i = 0; i < 16; i++) {\n\t                invSubKeys[i] = subKeys[15 - i];\n\t            }\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._subKeys);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._invSubKeys);\n\t        },\n\n\t        _doCryptBlock: function (M, offset, subKeys) {\n\t            // Get input\n\t            this._lBlock = M[offset];\n\t            this._rBlock = M[offset + 1];\n\n\t            // Initial permutation\n\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t            exchangeRL.call(this, 2,  0x33333333);\n\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t            exchangeLR.call(this, 1,  0x55555555);\n\n\t            // Rounds\n\t            for (var round = 0; round < 16; round++) {\n\t                // Shortcuts\n\t                var subKey = subKeys[round];\n\t                var lBlock = this._lBlock;\n\t                var rBlock = this._rBlock;\n\n\t                // Feistel function\n\t                var f = 0;\n\t                for (var i = 0; i < 8; i++) {\n\t                    f |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];\n\t                }\n\t                this._lBlock = rBlock;\n\t                this._rBlock = lBlock ^ f;\n\t            }\n\n\t            // Undo swap from last round\n\t            var t = this._lBlock;\n\t            this._lBlock = this._rBlock;\n\t            this._rBlock = t;\n\n\t            // Final permutation\n\t            exchangeLR.call(this, 1,  0x55555555);\n\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t            exchangeRL.call(this, 2,  0x33333333);\n\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\n\t            // Set output\n\t            M[offset] = this._lBlock;\n\t            M[offset + 1] = this._rBlock;\n\t        },\n\n\t        keySize: 64/32,\n\n\t        ivSize: 64/32,\n\n\t        blockSize: 64/32\n\t    });\n\n\t    // Swap bits across the left and right words\n\t    function exchangeLR(offset, mask) {\n\t        var t = ((this._lBlock >>> offset) ^ this._rBlock) & mask;\n\t        this._rBlock ^= t;\n\t        this._lBlock ^= t << offset;\n\t    }\n\n\t    function exchangeRL(offset, mask) {\n\t        var t = ((this._rBlock >>> offset) ^ this._lBlock) & mask;\n\t        this._lBlock ^= t;\n\t        this._rBlock ^= t << offset;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.DES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.DES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.DES = BlockCipher._createHelper(DES);\n\n\t    /**\n\t     * Triple-DES block cipher algorithm.\n\t     */\n\t    var TripleDES = C_algo.TripleDES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\t            // Make sure the key length is valid (64, 128 or >= 192 bit)\n\t            if (keyWords.length !== 2 && keyWords.length !== 4 && keyWords.length < 6) {\n\t                throw new Error('Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.');\n\t            }\n\n\t            // Extend the key according to the keying options defined in 3DES standard\n\t            var key1 = keyWords.slice(0, 2);\n\t            var key2 = keyWords.length < 4 ? keyWords.slice(0, 2) : keyWords.slice(2, 4);\n\t            var key3 = keyWords.length < 6 ? keyWords.slice(0, 2) : keyWords.slice(4, 6);\n\n\t            // Create DES instances\n\t            this._des1 = DES.createEncryptor(WordArray.create(key1));\n\t            this._des2 = DES.createEncryptor(WordArray.create(key2));\n\t            this._des3 = DES.createEncryptor(WordArray.create(key3));\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._des1.encryptBlock(M, offset);\n\t            this._des2.decryptBlock(M, offset);\n\t            this._des3.encryptBlock(M, offset);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            this._des3.decryptBlock(M, offset);\n\t            this._des2.encryptBlock(M, offset);\n\t            this._des1.decryptBlock(M, offset);\n\t        },\n\n\t        keySize: 192/32,\n\n\t        ivSize: 64/32,\n\n\t        blockSize: 64/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.TripleDES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.TripleDES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.TripleDES = BlockCipher._createHelper(TripleDES);\n\t}());\n\n\n\treturn CryptoJS.TripleDES;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * RC4 stream cipher algorithm.\n\t     */\n\t    var RC4 = C_algo.RC4 = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\t            var keySigBytes = key.sigBytes;\n\n\t            // Init sbox\n\t            var S = this._S = [];\n\t            for (var i = 0; i < 256; i++) {\n\t                S[i] = i;\n\t            }\n\n\t            // Key setup\n\t            for (var i = 0, j = 0; i < 256; i++) {\n\t                var keyByteIndex = i % keySigBytes;\n\t                var keyByte = (keyWords[keyByteIndex >>> 2] >>> (24 - (keyByteIndex % 4) * 8)) & 0xff;\n\n\t                j = (j + S[i] + keyByte) % 256;\n\n\t                // Swap\n\t                var t = S[i];\n\t                S[i] = S[j];\n\t                S[j] = t;\n\t            }\n\n\t            // Counters\n\t            this._i = this._j = 0;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            M[offset] ^= generateKeystreamWord.call(this);\n\t        },\n\n\t        keySize: 256/32,\n\n\t        ivSize: 0\n\t    });\n\n\t    function generateKeystreamWord() {\n\t        // Shortcuts\n\t        var S = this._S;\n\t        var i = this._i;\n\t        var j = this._j;\n\n\t        // Generate keystream word\n\t        var keystreamWord = 0;\n\t        for (var n = 0; n < 4; n++) {\n\t            i = (i + 1) % 256;\n\t            j = (j + S[i]) % 256;\n\n\t            // Swap\n\t            var t = S[i];\n\t            S[i] = S[j];\n\t            S[j] = t;\n\n\t            keystreamWord |= S[(S[i] + S[j]) % 256] << (24 - n * 8);\n\t        }\n\n\t        // Update counters\n\t        this._i = i;\n\t        this._j = j;\n\n\t        return keystreamWord;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4 = StreamCipher._createHelper(RC4);\n\n\t    /**\n\t     * Modified RC4 stream cipher algorithm.\n\t     */\n\t    var RC4Drop = C_algo.RC4Drop = RC4.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} drop The number of keystream words to drop. Default 192\n\t         */\n\t        cfg: RC4.cfg.extend({\n\t            drop: 192\n\t        }),\n\n\t        _doReset: function () {\n\t            RC4._doReset.call(this);\n\n\t            // Drop\n\t            for (var i = this.cfg.drop; i > 0; i--) {\n\t                generateKeystreamWord.call(this);\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4Drop = StreamCipher._createHelper(RC4Drop);\n\t}());\n\n\n\treturn CryptoJS.RC4;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm\n\t     */\n\t    var Rabbit = C_algo.Rabbit = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                K[i] = (((K[i] << 8)  | (K[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((K[i] << 24) | (K[i] >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.Rabbit = StreamCipher._createHelper(Rabbit);\n\t}());\n\n\n\treturn CryptoJS.Rabbit;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm.\n\t     *\n\t     * This is a legacy version that neglected to convert the key to little-endian.\n\t     * This error doesn't affect the cipher's security,\n\t     * but it does affect its compatibility with other implementations.\n\t     */\n\t    var RabbitLegacy = C_algo.RabbitLegacy = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RabbitLegacy = StreamCipher._createHelper(RabbitLegacy);\n\t}());\n\n\n\treturn CryptoJS.RabbitLegacy;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    const N = 16;\n\n\t    //Origin pbox and sbox, derived from PI\n\t    const ORIG_P = [\n\t        0x243F6A88, 0x85A308D3, 0x13198A2E, 0x03707344,\n\t        0xA4093822, 0x299F31D0, 0x082EFA98, 0xEC4E6C89,\n\t        0x452821E6, 0x38D01377, 0xBE5466CF, 0x34E90C6C,\n\t        0xC0AC29B7, 0xC97C50DD, 0x3F84D5B5, 0xB5470917,\n\t        0x9216D5D9, 0x8979FB1B\n\t    ];\n\n\t    const ORIG_S = [\n\t        [   0xD1310BA6, 0x98DFB5AC, 0x2FFD72DB, 0xD01ADFB7,\n\t            0xB8E1AFED, 0x6A267E96, 0xBA7C9045, 0xF12C7F99,\n\t            0x24A19947, 0xB3916CF7, 0x0801F2E2, 0x858EFC16,\n\t            0x636920D8, 0x71574E69, 0xA458FEA3, 0xF4933D7E,\n\t            0x0D95748F, 0x728EB658, 0x718BCD58, 0x82154AEE,\n\t            0x7B54A41D, 0xC25A59B5, 0x9C30D539, 0x2AF26013,\n\t            0xC5D1B023, 0x286085F0, 0xCA417918, 0xB8DB38EF,\n\t            0x8E79DCB0, 0x603A180E, 0x6C9E0E8B, 0xB01E8A3E,\n\t            0xD71577C1, 0xBD314B27, 0x78AF2FDA, 0x55605C60,\n\t            0xE65525F3, 0xAA55AB94, 0x57489862, 0x63E81440,\n\t            0x55CA396A, 0x2AAB10B6, 0xB4CC5C34, 0x1141E8CE,\n\t            0xA15486AF, 0x7C72E993, 0xB3EE1411, 0x636FBC2A,\n\t            0x2BA9C55D, 0x741831F6, 0xCE5C3E16, 0x9B87931E,\n\t            0xAFD6BA33, 0x6C24CF5C, 0x7A325381, 0x28958677,\n\t            0x3B8F4898, 0x6B4BB9AF, 0xC4BFE81B, 0x66282193,\n\t            0x61D809CC, 0xFB21A991, 0x487CAC60, 0x5DEC8032,\n\t            0xEF845D5D, 0xE98575B1, 0xDC262302, 0xEB651B88,\n\t            0x23893E81, 0xD396ACC5, 0x0F6D6FF3, 0x83F44239,\n\t            0x2E0B4482, 0xA4842004, 0x69C8F04A, 0x9E1F9B5E,\n\t            0x21C66842, 0xF6E96C9A, 0x670C9C61, 0xABD388F0,\n\t            0x6A51A0D2, 0xD8542F68, 0x960FA728, 0xAB5133A3,\n\t            0x6EEF0B6C, 0x137A3BE4, 0xBA3BF050, 0x7EFB2A98,\n\t            0xA1F1651D, 0x39AF0176, 0x66CA593E, 0x82430E88,\n\t            0x8CEE8619, 0x456F9FB4, 0x7D84A5C3, 0x3B8B5EBE,\n\t            0xE06F75D8, 0x85C12073, 0x401A449F, 0x56C16AA6,\n\t            0x4ED3AA62, 0x363F7706, 0x1BFEDF72, 0x429B023D,\n\t            0x37D0D724, 0xD00A1248, 0xDB0FEAD3, 0x49F1C09B,\n\t            0x075372C9, 0x80991B7B, 0x25D479D8, 0xF6E8DEF7,\n\t            0xE3FE501A, 0xB6794C3B, 0x976CE0BD, 0x04C006BA,\n\t            0xC1A94FB6, 0x409F60C4, 0x5E5C9EC2, 0x196A2463,\n\t            0x68FB6FAF, 0x3E6C53B5, 0x1339B2EB, 0x3B52EC6F,\n\t            0x6DFC511F, 0x9B30952C, 0xCC814544, 0xAF5EBD09,\n\t            0xBEE3D004, 0xDE334AFD, 0x660F2807, 0x192E4BB3,\n\t            0xC0CBA857, 0x45C8740F, 0xD20B5F39, 0xB9D3FBDB,\n\t            0x5579C0BD, 0x1A60320A, 0xD6A100C6, 0x402C7279,\n\t            0x679F25FE, 0xFB1FA3CC, 0x8EA5E9F8, 0xDB3222F8,\n\t            0x3C7516DF, 0xFD616B15, 0x2F501EC8, 0xAD0552AB,\n\t            0x323DB5FA, 0xFD238760, 0x53317B48, 0x3E00DF82,\n\t            0x9E5C57BB, 0xCA6F8CA0, 0x1A87562E, 0xDF1769DB,\n\t            0xD542A8F6, 0x287EFFC3, 0xAC6732C6, 0x8C4F5573,\n\t            0x695B27B0, 0xBBCA58C8, 0xE1FFA35D, 0xB8F011A0,\n\t            0x10FA3D98, 0xFD2183B8, 0x4AFCB56C, 0x2DD1D35B,\n\t            0x9A53E479, 0xB6F84565, 0xD28E49BC, 0x4BFB9790,\n\t            0xE1DDF2DA, 0xA4CB7E33, 0x62FB1341, 0xCEE4C6E8,\n\t            0xEF20CADA, 0x36774C01, 0xD07E9EFE, 0x2BF11FB4,\n\t            0x95DBDA4D, 0xAE909198, 0xEAAD8E71, 0x6B93D5A0,\n\t            0xD08ED1D0, 0xAFC725E0, 0x8E3C5B2F, 0x8E7594B7,\n\t            0x8FF6E2FB, 0xF2122B64, 0x8888B812, 0x900DF01C,\n\t            0x4FAD5EA0, 0x688FC31C, 0xD1CFF191, 0xB3A8C1AD,\n\t            0x2F2F2218, 0xBE0E1777, 0xEA752DFE, 0x8B021FA1,\n\t            0xE5A0CC0F, 0xB56F74E8, 0x18ACF3D6, 0xCE89E299,\n\t            0xB4A84FE0, 0xFD13E0B7, 0x7CC43B81, 0xD2ADA8D9,\n\t            0x165FA266, 0x80957705, 0x93CC7314, 0x211A1477,\n\t            0xE6AD2065, 0x77B5FA86, 0xC75442F5, 0xFB9D35CF,\n\t            0xEBCDAF0C, 0x7B3E89A0, 0xD6411BD3, 0xAE1E7E49,\n\t            0x00250E2D, 0x2071B35E, 0x226800BB, 0x57B8E0AF,\n\t            0x2464369B, 0xF009B91E, 0x5563911D, 0x59DFA6AA,\n\t            0x78C14389, 0xD95A537F, 0x207D5BA2, 0x02E5B9C5,\n\t            0x83260376, 0x6295CFA9, 0x11C81968, 0x4E734A41,\n\t            0xB3472DCA, 0x7B14A94A, 0x1B510052, 0x9A532915,\n\t            0xD60F573F, 0xBC9BC6E4, 0x2B60A476, 0x81E67400,\n\t            0x08BA6FB5, 0x571BE91F, 0xF296EC6B, 0x2A0DD915,\n\t            0xB6636521, 0xE7B9F9B6, 0xFF34052E, 0xC5855664,\n\t            0x53B02D5D, 0xA99F8FA1, 0x08BA4799, 0x6E85076A   ],\n\t        [   0x4B7A70E9, 0xB5B32944, 0xDB75092E, 0xC4192623,\n\t            0xAD6EA6B0, 0x49A7DF7D, 0x9CEE60B8, 0x8FEDB266,\n\t            0xECAA8C71, 0x699A17FF, 0x5664526C, 0xC2B19EE1,\n\t            0x193602A5, 0x75094C29, 0xA0591340, 0xE4183A3E,\n\t            0x3F54989A, 0x5B429D65, 0x6B8FE4D6, 0x99F73FD6,\n\t            0xA1D29C07, 0xEFE830F5, 0x4D2D38E6, 0xF0255DC1,\n\t            0x4CDD2086, 0x8470EB26, 0x6382E9C6, 0x021ECC5E,\n\t            0x09686B3F, 0x3EBAEFC9, 0x3C971814, 0x6B6A70A1,\n\t            0x687F3584, 0x52A0E286, 0xB79C5305, 0xAA500737,\n\t            0x3E07841C, 0x7FDEAE5C, 0x8E7D44EC, 0x5716F2B8,\n\t            0xB03ADA37, 0xF0500C0D, 0xF01C1F04, 0x0200B3FF,\n\t            0xAE0CF51A, 0x3CB574B2, 0x25837A58, 0xDC0921BD,\n\t            0xD19113F9, 0x7CA92FF6, 0x94324773, 0x22F54701,\n\t            0x3AE5E581, 0x37C2DADC, 0xC8B57634, 0x9AF3DDA7,\n\t            0xA9446146, 0x0FD0030E, 0xECC8C73E, 0xA4751E41,\n\t            0xE238CD99, 0x3BEA0E2F, 0x3280BBA1, 0x183EB331,\n\t            0x4E548B38, 0x4F6DB908, 0x6F420D03, 0xF60A04BF,\n\t            0x2CB81290, 0x24977C79, 0x5679B072, 0xBCAF89AF,\n\t            0xDE9A771F, 0xD9930810, 0xB38BAE12, 0xDCCF3F2E,\n\t            0x5512721F, 0x2E6B7124, 0x501ADDE6, 0x9F84CD87,\n\t            0x7A584718, 0x7408DA17, 0xBC9F9ABC, 0xE94B7D8C,\n\t            0xEC7AEC3A, 0xDB851DFA, 0x63094366, 0xC464C3D2,\n\t            0xEF1C1847, 0x3215D908, 0xDD433B37, 0x24C2BA16,\n\t            0x12A14D43, 0x2A65C451, 0x50940002, 0x133AE4DD,\n\t            0x71DFF89E, 0x10314E55, 0x81AC77D6, 0x5F11199B,\n\t            0x043556F1, 0xD7A3C76B, 0x3C11183B, 0x5924A509,\n\t            0xF28FE6ED, 0x97F1FBFA, 0x9EBABF2C, 0x1E153C6E,\n\t            0x86E34570, 0xEAE96FB1, 0x860E5E0A, 0x5A3E2AB3,\n\t            0x771FE71C, 0x4E3D06FA, 0x2965DCB9, 0x99E71D0F,\n\t            0x803E89D6, 0x5266C825, 0x2E4CC978, 0x9C10B36A,\n\t            0xC6150EBA, 0x94E2EA78, 0xA5FC3C53, 0x1E0A2DF4,\n\t            0xF2F74EA7, 0x361D2B3D, 0x1939260F, 0x19C27960,\n\t            0x5223A708, 0xF71312B6, 0xEBADFE6E, 0xEAC31F66,\n\t            0xE3BC4595, 0xA67BC883, 0xB17F37D1, 0x018CFF28,\n\t            0xC332DDEF, 0xBE6C5AA5, 0x65582185, 0x68AB9802,\n\t            0xEECEA50F, 0xDB2F953B, 0x2AEF7DAD, 0x5B6E2F84,\n\t            0x1521B628, 0x29076170, 0xECDD4775, 0x619F1510,\n\t            0x13CCA830, 0xEB61BD96, 0x0334FE1E, 0xAA0363CF,\n\t            0xB5735C90, 0x4C70A239, 0xD59E9E0B, 0xCBAADE14,\n\t            0xEECC86BC, 0x60622CA7, 0x9CAB5CAB, 0xB2F3846E,\n\t            0x648B1EAF, 0x19BDF0CA, 0xA02369B9, 0x655ABB50,\n\t            0x40685A32, 0x3C2AB4B3, 0x319EE9D5, 0xC021B8F7,\n\t            0x9B540B19, 0x875FA099, 0x95F7997E, 0x623D7DA8,\n\t            0xF837889A, 0x97E32D77, 0x11ED935F, 0x16681281,\n\t            0x0E358829, 0xC7E61FD6, 0x96DEDFA1, 0x7858BA99,\n\t            0x57F584A5, 0x1B227263, 0x9B83C3FF, 0x1AC24696,\n\t            0xCDB30AEB, 0x532E3054, 0x8FD948E4, 0x6DBC3128,\n\t            0x58EBF2EF, 0x34C6FFEA, 0xFE28ED61, 0xEE7C3C73,\n\t            0x5D4A14D9, 0xE864B7E3, 0x42105D14, 0x203E13E0,\n\t            0x45EEE2B6, 0xA3AAABEA, 0xDB6C4F15, 0xFACB4FD0,\n\t            0xC742F442, 0xEF6ABBB5, 0x654F3B1D, 0x41CD2105,\n\t            0xD81E799E, 0x86854DC7, 0xE44B476A, 0x3D816250,\n\t            0xCF62A1F2, 0x5B8D2646, 0xFC8883A0, 0xC1C7B6A3,\n\t            0x7F1524C3, 0x69CB7492, 0x47848A0B, 0x5692B285,\n\t            0x095BBF00, 0xAD19489D, 0x1462B174, 0x23820E00,\n\t            0x58428D2A, 0x0C55F5EA, 0x1DADF43E, 0x233F7061,\n\t            0x3372F092, 0x8D937E41, 0xD65FECF1, 0x6C223BDB,\n\t            0x7CDE3759, 0xCBEE7460, 0x4085F2A7, 0xCE77326E,\n\t            0xA6078084, 0x19F8509E, 0xE8EFD855, 0x61D99735,\n\t            0xA969A7AA, 0xC50C06C2, 0x5A04ABFC, 0x800BCADC,\n\t            0x9E447A2E, 0xC3453484, 0xFDD56705, 0x0E1E9EC9,\n\t            0xDB73DBD3, 0x105588CD, 0x675FDA79, 0xE3674340,\n\t            0xC5C43465, 0x713E38D8, 0x3D28F89E, 0xF16DFF20,\n\t            0x153E21E7, 0x8FB03D4A, 0xE6E39F2B, 0xDB83ADF7   ],\n\t        [   0xE93D5A68, 0x948140F7, 0xF64C261C, 0x94692934,\n\t            0x411520F7, 0x7602D4F7, 0xBCF46B2E, 0xD4A20068,\n\t            0xD4082471, 0x3320F46A, 0x43B7D4B7, 0x500061AF,\n\t            0x1E39F62E, 0x97244546, 0x14214F74, 0xBF8B8840,\n\t            0x4D95FC1D, 0x96B591AF, 0x70F4DDD3, 0x66A02F45,\n\t            0xBFBC09EC, 0x03BD9785, 0x7FAC6DD0, 0x31CB8504,\n\t            0x96EB27B3, 0x55FD3941, 0xDA2547E6, 0xABCA0A9A,\n\t            0x28507825, 0x530429F4, 0x0A2C86DA, 0xE9B66DFB,\n\t            0x68DC1462, 0xD7486900, 0x680EC0A4, 0x27A18DEE,\n\t            0x4F3FFEA2, 0xE887AD8C, 0xB58CE006, 0x7AF4D6B6,\n\t            0xAACE1E7C, 0xD3375FEC, 0xCE78A399, 0x406B2A42,\n\t            0x20FE9E35, 0xD9F385B9, 0xEE39D7AB, 0x3B124E8B,\n\t            0x1DC9FAF7, 0x4B6D1856, 0x26A36631, 0xEAE397B2,\n\t            0x3A6EFA74, 0xDD5B4332, 0x6841E7F7, 0xCA7820FB,\n\t            0xFB0AF54E, 0xD8FEB397, 0x454056AC, 0xBA489527,\n\t            0x55533A3A, 0x20838D87, 0xFE6BA9B7, 0xD096954B,\n\t            0x55A867BC, 0xA1159A58, 0xCCA92963, 0x99E1DB33,\n\t            0xA62A4A56, 0x3F3125F9, 0x5EF47E1C, 0x9029317C,\n\t            0xFDF8E802, 0x04272F70, 0x80BB155C, 0x05282CE3,\n\t            0x95C11548, 0xE4C66D22, 0x48C1133F, 0xC70F86DC,\n\t            0x07F9C9EE, 0x41041F0F, 0x404779A4, 0x5D886E17,\n\t            0x325F51EB, 0xD59BC0D1, 0xF2BCC18F, 0x41113564,\n\t            0x257B7834, 0x602A9C60, 0xDFF8E8A3, 0x1F636C1B,\n\t            0x0E12B4C2, 0x02E1329E, 0xAF664FD1, 0xCAD18115,\n\t            0x6B2395E0, 0x333E92E1, 0x3B240B62, 0xEEBEB922,\n\t            0x85B2A20E, 0xE6BA0D99, 0xDE720C8C, 0x2DA2F728,\n\t            0xD0127845, 0x95B794FD, 0x647D0862, 0xE7CCF5F0,\n\t            0x5449A36F, 0x877D48FA, 0xC39DFD27, 0xF33E8D1E,\n\t            0x0A476341, 0x992EFF74, 0x3A6F6EAB, 0xF4F8FD37,\n\t            0xA812DC60, 0xA1EBDDF8, 0x991BE14C, 0xDB6E6B0D,\n\t            0xC67B5510, 0x6D672C37, 0x2765D43B, 0xDCD0E804,\n\t            0xF1290DC7, 0xCC00FFA3, 0xB5390F92, 0x690FED0B,\n\t            0x667B9FFB, 0xCEDB7D9C, 0xA091CF0B, 0xD9155EA3,\n\t            0xBB132F88, 0x515BAD24, 0x7B9479BF, 0x763BD6EB,\n\t            0x37392EB3, 0xCC115979, 0x8026E297, 0xF42E312D,\n\t            0x6842ADA7, 0xC66A2B3B, 0x12754CCC, 0x782EF11C,\n\t            0x6A124237, 0xB79251E7, 0x06A1BBE6, 0x4BFB6350,\n\t            0x1A6B1018, 0x11CAEDFA, 0x3D25BDD8, 0xE2E1C3C9,\n\t            0x44421659, 0x0A121386, 0xD90CEC6E, 0xD5ABEA2A,\n\t            0x64AF674E, 0xDA86A85F, 0xBEBFE988, 0x64E4C3FE,\n\t            0x9DBC8057, 0xF0F7C086, 0x60787BF8, 0x6003604D,\n\t            0xD1FD8346, 0xF6381FB0, 0x7745AE04, 0xD736FCCC,\n\t            0x83426B33, 0xF01EAB71, 0xB0804187, 0x3C005E5F,\n\t            0x77A057BE, 0xBDE8AE24, 0x55464299, 0xBF582E61,\n\t            0x4E58F48F, 0xF2DDFDA2, 0xF474EF38, 0x8789BDC2,\n\t            0x5366F9C3, 0xC8B38E74, 0xB475F255, 0x46FCD9B9,\n\t            0x7AEB2661, 0x8B1DDF84, 0x846A0E79, 0x915F95E2,\n\t            0x466E598E, 0x20B45770, 0x8CD55591, 0xC902DE4C,\n\t            0xB90BACE1, 0xBB8205D0, 0x11A86248, 0x7574A99E,\n\t            0xB77F19B6, 0xE0A9DC09, 0x662D09A1, 0xC4324633,\n\t            0xE85A1F02, 0x09F0BE8C, 0x4A99A025, 0x1D6EFE10,\n\t            0x1AB93D1D, 0x0BA5A4DF, 0xA186F20F, 0x2868F169,\n\t            0xDCB7DA83, 0x573906FE, 0xA1E2CE9B, 0x4FCD7F52,\n\t            0x50115E01, 0xA70683FA, 0xA002B5C4, 0x0DE6D027,\n\t            0x9AF88C27, 0x773F8641, 0xC3604C06, 0x61A806B5,\n\t            0xF0177A28, 0xC0F586E0, 0x006058AA, 0x30DC7D62,\n\t            0x11E69ED7, 0x2338EA63, 0x53C2DD94, 0xC2C21634,\n\t            0xBBCBEE56, 0x90BCB6DE, 0xEBFC7DA1, 0xCE591D76,\n\t            0x6F05E409, 0x4B7C0188, 0x39720A3D, 0x7C927C24,\n\t            0x86E3725F, 0x724D9DB9, 0x1AC15BB4, 0xD39EB8FC,\n\t            0xED545578, 0x08FCA5B5, 0xD83D7CD3, 0x4DAD0FC4,\n\t            0x1E50EF5E, 0xB161E6F8, 0xA28514D9, 0x6C51133C,\n\t            0x6FD5C7E7, 0x56E14EC4, 0x362ABFCE, 0xDDC6C837,\n\t            0xD79A3234, 0x92638212, 0x670EFA8E, 0x406000E0  ],\n\t        [   0x3A39CE37, 0xD3FAF5CF, 0xABC27737, 0x5AC52D1B,\n\t            0x5CB0679E, 0x4FA33742, 0xD3822740, 0x99BC9BBE,\n\t            0xD5118E9D, 0xBF0F7315, 0xD62D1C7E, 0xC700C47B,\n\t            0xB78C1B6B, 0x21A19045, 0xB26EB1BE, 0x6A366EB4,\n\t            0x5748AB2F, 0xBC946E79, 0xC6A376D2, 0x6549C2C8,\n\t            0x530FF8EE, 0x468DDE7D, 0xD5730A1D, 0x4CD04DC6,\n\t            0x2939BBDB, 0xA9BA4650, 0xAC9526E8, 0xBE5EE304,\n\t            0xA1FAD5F0, 0x6A2D519A, 0x63EF8CE2, 0x9A86EE22,\n\t            0xC089C2B8, 0x43242EF6, 0xA51E03AA, 0x9CF2D0A4,\n\t            0x83C061BA, 0x9BE96A4D, 0x8FE51550, 0xBA645BD6,\n\t            0x2826A2F9, 0xA73A3AE1, 0x4BA99586, 0xEF5562E9,\n\t            0xC72FEFD3, 0xF752F7DA, 0x3F046F69, 0x77FA0A59,\n\t            0x80E4A915, 0x87B08601, 0x9B09E6AD, 0x3B3EE593,\n\t            0xE990FD5A, 0x9E34D797, 0x2CF0B7D9, 0x022B8B51,\n\t            0x96D5AC3A, 0x017DA67D, 0xD1CF3ED6, 0x7C7D2D28,\n\t            0x1F9F25CF, 0xADF2B89B, 0x5AD6B472, 0x5A88F54C,\n\t            0xE029AC71, 0xE019A5E6, 0x47B0ACFD, 0xED93FA9B,\n\t            0xE8D3C48D, 0x283B57CC, 0xF8D56629, 0x79132E28,\n\t            0x785F0191, 0xED756055, 0xF7960E44, 0xE3D35E8C,\n\t            0x15056DD4, 0x88F46DBA, 0x03A16125, 0x0564F0BD,\n\t            0xC3EB9E15, 0x3C9057A2, 0x97271AEC, 0xA93A072A,\n\t            0x1B3F6D9B, 0x1E6321F5, 0xF59C66FB, 0x26DCF319,\n\t            0x7533D928, 0xB155FDF5, 0x03563482, 0x8ABA3CBB,\n\t            0x28517711, 0xC20AD9F8, 0xABCC5167, 0xCCAD925F,\n\t            0x4DE81751, 0x3830DC8E, 0x379D5862, 0x9320F991,\n\t            0xEA7A90C2, 0xFB3E7BCE, 0x5121CE64, 0x774FBE32,\n\t            0xA8B6E37E, 0xC3293D46, 0x48DE5369, 0x6413E680,\n\t            0xA2AE0810, 0xDD6DB224, 0x69852DFD, 0x09072166,\n\t            0xB39A460A, 0x6445C0DD, 0x586CDECF, 0x1C20C8AE,\n\t            0x5BBEF7DD, 0x1B588D40, 0xCCD2017F, 0x6BB4E3BB,\n\t            0xDDA26A7E, 0x3A59FF45, 0x3E350A44, 0xBCB4CDD5,\n\t            0x72EACEA8, 0xFA6484BB, 0x8D6612AE, 0xBF3C6F47,\n\t            0xD29BE463, 0x542F5D9E, 0xAEC2771B, 0xF64E6370,\n\t            0x740E0D8D, 0xE75B1357, 0xF8721671, 0xAF537D5D,\n\t            0x4040CB08, 0x4EB4E2CC, 0x34D2466A, 0x0115AF84,\n\t            0xE1B00428, 0x95983A1D, 0x06B89FB4, 0xCE6EA048,\n\t            0x6F3F3B82, 0x3520AB82, 0x011A1D4B, 0x277227F8,\n\t            0x611560B1, 0xE7933FDC, 0xBB3A792B, 0x344525BD,\n\t            0xA08839E1, 0x51CE794B, 0x2F32C9B7, 0xA01FBAC9,\n\t            0xE01CC87E, 0xBCC7D1F6, 0xCF0111C3, 0xA1E8AAC7,\n\t            0x1A908749, 0xD44FBD9A, 0xD0DADECB, 0xD50ADA38,\n\t            0x0339C32A, 0xC6913667, 0x8DF9317C, 0xE0B12B4F,\n\t            0xF79E59B7, 0x43F5BB3A, 0xF2D519FF, 0x27D9459C,\n\t            0xBF97222C, 0x15E6FC2A, 0x0F91FC71, 0x9B941525,\n\t            0xFAE59361, 0xCEB69CEB, 0xC2A86459, 0x12BAA8D1,\n\t            0xB6C1075E, 0xE3056A0C, 0x10D25065, 0xCB03A442,\n\t            0xE0EC6E0E, 0x1698DB3B, 0x4C98A0BE, 0x3278E964,\n\t            0x9F1F9532, 0xE0D392DF, 0xD3A0342B, 0x8971F21E,\n\t            0x1B0A7441, 0x4BA3348C, 0xC5BE7120, 0xC37632D8,\n\t            0xDF359F8D, 0x9B992F2E, 0xE60B6F47, 0x0FE3F11D,\n\t            0xE54CDA54, 0x1EDAD891, 0xCE6279CF, 0xCD3E7E6F,\n\t            0x1618B166, 0xFD2C1D05, 0x848FD2C5, 0xF6FB2299,\n\t            0xF523F357, 0xA6327623, 0x93A83531, 0x56CCCD02,\n\t            0xACF08162, 0x5A75EBB5, 0x6E163697, 0x88D273CC,\n\t            0xDE966292, 0x81B949D0, 0x4C50901B, 0x71C65614,\n\t            0xE6C6C7BD, 0x327A140A, 0x45E1D006, 0xC3F27B9A,\n\t            0xC9AA53FD, 0x62A80F00, 0xBB25BFE2, 0x35BDD2F6,\n\t            0x71126905, 0xB2040222, 0xB6CBCF7C, 0xCD769C2B,\n\t            0x53113EC0, 0x1640E3D3, 0x38ABBD60, 0x2547ADF0,\n\t            0xBA38209C, 0xF746CE76, 0x77AFA1C5, 0x20756060,\n\t            0x85CBFE4E, 0x8AE88DD8, 0x7AAAF9B0, 0x4CF9AA7E,\n\t            0x1948C25C, 0x02FB8A8C, 0x01C36AE4, 0xD6EBE1F9,\n\t            0x90D4F869, 0xA65CDEA0, 0x3F09252D, 0xC208E69F,\n\t            0xB74E6132, 0xCE77E25B, 0x578FDFE3, 0x3AC372E6  ]\n\t    ];\n\n\t    var BLOWFISH_CTX = {\n\t        pbox: [],\n\t        sbox: []\n\t    }\n\n\t    function F(ctx, x){\n\t        let a = (x >> 24) & 0xFF;\n\t        let b = (x >> 16) & 0xFF;\n\t        let c = (x >> 8) & 0xFF;\n\t        let d = x & 0xFF;\n\n\t        let y = ctx.sbox[0][a] + ctx.sbox[1][b];\n\t        y = y ^ ctx.sbox[2][c];\n\t        y = y + ctx.sbox[3][d];\n\n\t        return y;\n\t    }\n\n\t    function BlowFish_Encrypt(ctx, left, right){\n\t        let Xl = left;\n\t        let Xr = right;\n\t        let temp;\n\n\t        for(let i = 0; i < N; ++i){\n\t            Xl = Xl ^ ctx.pbox[i];\n\t            Xr = F(ctx, Xl) ^ Xr;\n\n\t            temp = Xl;\n\t            Xl = Xr;\n\t            Xr = temp;\n\t        }\n\n\t        temp = Xl;\n\t        Xl = Xr;\n\t        Xr = temp;\n\n\t        Xr = Xr ^ ctx.pbox[N];\n\t        Xl = Xl ^ ctx.pbox[N + 1];\n\n\t        return {left: Xl, right: Xr};\n\t    }\n\n\t    function BlowFish_Decrypt(ctx, left, right){\n\t        let Xl = left;\n\t        let Xr = right;\n\t        let temp;\n\n\t        for(let i = N + 1; i > 1; --i){\n\t            Xl = Xl ^ ctx.pbox[i];\n\t            Xr = F(ctx, Xl) ^ Xr;\n\n\t            temp = Xl;\n\t            Xl = Xr;\n\t            Xr = temp;\n\t        }\n\n\t        temp = Xl;\n\t        Xl = Xr;\n\t        Xr = temp;\n\n\t        Xr = Xr ^ ctx.pbox[1];\n\t        Xl = Xl ^ ctx.pbox[0];\n\n\t        return {left: Xl, right: Xr};\n\t    }\n\n\t    /**\n\t     * Initialization ctx's pbox and sbox.\n\t     *\n\t     * @param {Object} ctx The object has pbox and sbox.\n\t     * @param {Array} key An array of 32-bit words.\n\t     * @param {int} keysize The length of the key.\n\t     *\n\t     * @example\n\t     *\n\t     *     BlowFishInit(BLOWFISH_CTX, key, 128/32);\n\t     */\n\t    function BlowFishInit(ctx, key, keysize)\n\t    {\n\t        for(let Row = 0; Row < 4; Row++)\n\t        {\n\t            ctx.sbox[Row] = [];\n\t            for(let Col = 0; Col < 256; Col++)\n\t            {\n\t                ctx.sbox[Row][Col] = ORIG_S[Row][Col];\n\t            }\n\t        }\n\n\t        let keyIndex = 0;\n\t        for(let index = 0; index < N + 2; index++)\n\t        {\n\t            ctx.pbox[index] = ORIG_P[index] ^ key[keyIndex];\n\t            keyIndex++;\n\t            if(keyIndex >= keysize)\n\t            {\n\t                keyIndex = 0;\n\t            }\n\t        }\n\n\t        let Data1 = 0;\n\t        let Data2 = 0;\n\t        let res = 0;\n\t        for(let i = 0; i < N + 2; i += 2)\n\t        {\n\t            res = BlowFish_Encrypt(ctx, Data1, Data2);\n\t            Data1 = res.left;\n\t            Data2 = res.right;\n\t            ctx.pbox[i] = Data1;\n\t            ctx.pbox[i + 1] = Data2;\n\t        }\n\n\t        for(let i = 0; i < 4; i++)\n\t        {\n\t            for(let j = 0; j < 256; j += 2)\n\t            {\n\t                res = BlowFish_Encrypt(ctx, Data1, Data2);\n\t                Data1 = res.left;\n\t                Data2 = res.right;\n\t                ctx.sbox[i][j] = Data1;\n\t                ctx.sbox[i][j + 1] = Data2;\n\t            }\n\t        }\n\n\t        return true;\n\t    }\n\n\t    /**\n\t     * Blowfish block cipher algorithm.\n\t     */\n\t    var Blowfish = C_algo.Blowfish = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Skip reset of nRounds has been set before and key did not change\n\t            if (this._keyPriorReset === this._key) {\n\t                return;\n\t            }\n\n\t            // Shortcuts\n\t            var key = this._keyPriorReset = this._key;\n\t            var keyWords = key.words;\n\t            var keySize = key.sigBytes / 4;\n\n\t            //Initialization pbox and sbox\n\t            BlowFishInit(BLOWFISH_CTX, keyWords, keySize);\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            var res = BlowFish_Encrypt(BLOWFISH_CTX, M[offset], M[offset + 1]);\n\t            M[offset] = res.left;\n\t            M[offset + 1] = res.right;\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            var res = BlowFish_Decrypt(BLOWFISH_CTX, M[offset], M[offset + 1]);\n\t            M[offset] = res.left;\n\t            M[offset + 1] = res.right;\n\t        },\n\n\t        blockSize: 64/32,\n\n\t        keySize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.Blowfish.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.Blowfish.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.Blowfish = BlockCipher._createHelper(Blowfish);\n\t}());\n\n\n\treturn CryptoJS.Blowfish;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"), require(\"./lib-typedarrays\"), require(\"./enc-utf16\"), require(\"./enc-base64\"), require(\"./enc-base64url\"), require(\"./md5\"), require(\"./sha1\"), require(\"./sha256\"), require(\"./sha224\"), require(\"./sha512\"), require(\"./sha384\"), require(\"./sha3\"), require(\"./ripemd160\"), require(\"./hmac\"), require(\"./pbkdf2\"), require(\"./evpkdf\"), require(\"./cipher-core\"), require(\"./mode-cfb\"), require(\"./mode-ctr\"), require(\"./mode-ctr-gladman\"), require(\"./mode-ofb\"), require(\"./mode-ecb\"), require(\"./pad-ansix923\"), require(\"./pad-iso10126\"), require(\"./pad-iso97971\"), require(\"./pad-zeropadding\"), require(\"./pad-nopadding\"), require(\"./format-hex\"), require(\"./aes\"), require(\"./tripledes\"), require(\"./rc4\"), require(\"./rabbit\"), require(\"./rabbit-legacy\"), require(\"./blowfish\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\", \"./lib-typedarrays\", \"./enc-utf16\", \"./enc-base64\", \"./enc-base64url\", \"./md5\", \"./sha1\", \"./sha256\", \"./sha224\", \"./sha512\", \"./sha384\", \"./sha3\", \"./ripemd160\", \"./hmac\", \"./pbkdf2\", \"./evpkdf\", \"./cipher-core\", \"./mode-cfb\", \"./mode-ctr\", \"./mode-ctr-gladman\", \"./mode-ofb\", \"./mode-ecb\", \"./pad-ansix923\", \"./pad-iso10126\", \"./pad-iso97971\", \"./pad-zeropadding\", \"./pad-nopadding\", \"./format-hex\", \"./aes\", \"./tripledes\", \"./rc4\", \"./rabbit\", \"./rabbit-legacy\", \"./blowfish\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\treturn CryptoJS;\n\n}));", "import CryptoJS from 'crypto-js';\n\nexport async function onRequestOptions() {\n  return new Response(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'POST, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n    },\n  });\n}\n\nexport async function onRequestPost(context: any) {\n  const { request, env } = context;\n\n  try {\n    // Use the same environment variable for both encryption and API auth\n    const password = env.AFFENSUS_CREDENTIALS_PASSWORD;\n    if (!password) {\n      return new Response(JSON.stringify({ \n        success: false, \n        error: 'AFFENSUS_CREDENTIALS_PASSWORD not configured' \n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    const body = await request.json();\n    const { project_id, network_id, credentials, credential_name } = body;\n\n    if (!project_id || !network_id || !credentials) {\n      return new Response(JSON.stringify({ \n        success: false, \n        error: 'project_id, network_id, and credentials are required' \n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    // Convert network_id to integer, keep project_id as string (UUID)\n    const networkId = parseInt(network_id);\n\n    if (isNaN(networkId)) {\n      return new Response(JSON.stringify({ \n        success: false, \n        error: 'network_id must be a valid number' \n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    console.log('Data to encrypt:', JSON.stringify(credentials, null, 2));\n    \n    // Encrypt function\n    const encryptCredentials = (data: any) => {\n      const encrypted = CryptoJS.AES.encrypt(JSON.stringify(data), password);\n      return encrypted.toString(); // Return the full encrypted object, not just ciphertext\n    };\n\n    const encryptedCredentials = encryptCredentials(credentials);\n    console.log('Encrypted credentials:', encryptedCredentials);\n    \n    // Test that we can decrypt what we just encrypted\n    try {\n      const testDecrypt = CryptoJS.AES.decrypt(encryptedCredentials, password);\n      const testDecryptString = testDecrypt.toString(CryptoJS.enc.Utf8);\n      const testDecryptData = JSON.parse(testDecryptString);\n      console.log('Encryption test successful - data can be decrypted');\n    } catch (testError) {\n      console.error('WARNING: Cannot decrypt the data we just encrypted!', testError);\n      return new Response(JSON.stringify({ \n        success: false, \n        error: 'Encryption validation failed - cannot decrypt encrypted data' \n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    const apiUrl = 'https://apiv2.affensus.com/api/credentials';\n\n    const requestPayload = { \n      project_id: project_id, // Keep as string (UUID)\n      network_id: networkId, \n      credentials: encryptedCredentials, \n      credential_name \n    };\n\n    console.log('Sending to apiv2:', JSON.stringify(requestPayload, null, 2));\n\n    const apiv2Response = await fetch(apiUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${password}`, // Using same password as bearer token\n      },\n      body: JSON.stringify(requestPayload)\n    });\n\n    if (!apiv2Response.ok) {\n      const errorText = await apiv2Response.text();\n      console.error('apiv2 error response:', errorText);\n      console.error('apiv2 status:', apiv2Response.status, apiv2Response.statusText);\n      return new Response(JSON.stringify({ \n        success: false, \n        error: `External API error: ${apiv2Response.status} ${apiv2Response.statusText}`,\n        details: errorText\n      }), {\n        status: apiv2Response.status,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    const responseData = await apiv2Response.json();\n\n    return new Response(JSON.stringify({ \n      success: true, \n      data: responseData \n    }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    });\n\n  } catch (error) {\n    console.error('Error creating credentials:', error);\n    return new Response(JSON.stringify({ \n      success: false, \n      error: 'Internal server error' \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n", "export async function onRequestOptions() {\n  return new Response(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'DELETE, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n    },\n  });\n}\n\nexport async function onRequestDelete(context: { request: Request; env: any }) {\n  const { request, env } = context;\n\n  try {\n    const body = await request.json();\n    const { credential_id } = body;\n    console.log('Credential ID:', credential_id);\n\n    if (!credential_id) {\n      return new Response(JSON.stringify({ \n        success: false, \n        error: 'credential_id is required' \n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    // Use the same environment variable for API auth\n    const password = env.AFFENSUS_CREDENTIALS_PASSWORD;\n    if (!password) {\n      return new Response(JSON.stringify({ \n        success: false, \n        error: 'AFFENSUS_CREDENTIALS_PASSWORD not configured' \n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    const apiUrl = `https://apiv2.affensus.com/api/credentials/${credential_id}`;\n\n    console.log('Making DELETE request to:', apiUrl);\n\n    const apiv2Response = await fetch(apiUrl, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${password}`,\n      }\n    });\n\n    if (!apiv2Response.ok) {\n      const errorText = await apiv2Response.text();\n      console.error('apiv2 error response:', errorText);\n      console.error('apiv2 status:', apiv2Response.status, apiv2Response.statusText);\n      return new Response(JSON.stringify({ \n        success: false, \n        error: `External API error: ${apiv2Response.status} ${apiv2Response.statusText}`,\n        details: errorText\n      }), {\n        status: apiv2Response.status,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    const responseData = await apiv2Response.json();\n\n    return new Response(JSON.stringify({ \n      success: true, \n      data: responseData \n    }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    });\n\n  } catch (error) {\n    console.error('Error deleting credentials:', error);\n    return new Response(JSON.stringify({ \n      success: false, \n      error: 'Internal server error' \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n", "import CryptoJS from 'crypto-js';\n\nexport async function onRequestOptions() {\n  return new Response(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'PUT, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n    },\n  });\n}\n\nexport async function onRequestPut(context: any) {\n  const { request, env } = context;\n\n  try {\n    const url = new URL(request.url);\n    const credentialId = url.searchParams.get('credential_id');\n    console.log('Credential ID:', credentialId);\n\n    if (!credentialId) {\n      return new Response(JSON.stringify({ \n        success: false, \n        error: 'Credential ID is required as query parameter' \n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    // Use the same environment variable for both encryption and API auth\n    const password = env.AFFENSUS_CREDENTIALS_PASSWORD;\n    if (!password) {\n      return new Response(JSON.stringify({ \n        success: false, \n        error: 'AFFENSUS_CREDENTIALS_PASSWORD not configured' \n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    const body = await request.json();\n    const { credentials, credential_name } = body;\n\n    if (!credentials) {\n      return new Response(JSON.stringify({ \n        success: false, \n        error: 'Credentials data is required' \n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    console.log('Data to encrypt:', JSON.stringify(credentials, null, 2));\n    \n    // Encrypt function\n    const encryptCredentials = (data: any) => {\n      const encrypted = CryptoJS.AES.encrypt(JSON.stringify(data), password);\n      return encrypted.toString(); // Return the full encrypted object, not just ciphertext\n    };\n\n    const encryptedCredentials = encryptCredentials(credentials);\n    console.log('Encrypted credentials:', encryptedCredentials);\n    \n    // Test that we can decrypt what we just encrypted\n    try {\n      const testDecrypt = CryptoJS.AES.decrypt(encryptedCredentials, password);\n      const testDecryptString = testDecrypt.toString(CryptoJS.enc.Utf8);\n      const testDecryptData = JSON.parse(testDecryptString);\n      console.log('Encryption test successful - data can be decrypted');\n    } catch (testError) {\n      console.error('WARNING: Cannot decrypt the data we just encrypted!', testError);\n      return new Response(JSON.stringify({ \n        success: false, \n        error: 'Encryption validation failed - cannot decrypt encrypted data' \n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    const apiUrl = `https://apiv2.affensus.com/api/credentials/${credentialId}`;\n\n    const apiv2Response = await fetch(apiUrl, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${password}`, // Using same password as bearer token\n      },\n      body: JSON.stringify({ credentials: encryptedCredentials, credential_name })\n    });\n\n    if (!apiv2Response.ok) {\n      const errorText = await apiv2Response.text();\n      return new Response(JSON.stringify({ \n        success: false, \n        error: `External API error: ${apiv2Response.status} ${apiv2Response.statusText}`,\n        details: errorText\n      }), {\n        status: apiv2Response.status,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    const responseData = await apiv2Response.json();\n\n    return new Response(JSON.stringify({ \n      success: true, \n      data: responseData \n    }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    });\n\n  } catch (error) {\n    console.error('Error updating credentials:', error);\n    return new Response(JSON.stringify({ \n      success: false, \n      error: 'Internal server error' \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}", "export async function onRequestOptions() {\n  return new Response(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'POST, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n    },\n  });\n}\n\nexport async function onRequestPost(context: any) {\n  const { request, env } = context;\n\n  try {\n    // Use the same environment variable for API auth\n    const password = env.AFFENSUS_CREDENTIALS_PASSWORD;\n    if (!password) {\n      return new Response(JSON.stringify({ \n        success: false, \n        error: 'AFFENSUS_CREDENTIALS_PASSWORD not configured' \n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    const body = await request.json();\n    const { merchants } = body;\n\n    if (!merchants || !Array.isArray(merchants)) {\n      return new Response(JSON.stringify({ \n        success: false, \n        error: 'merchants array is required' \n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    // Validate each merchant object\n    for (const merchant of merchants) {\n      const { credential_id, program_id, network_id, project_id } = merchant;\n      \n      if (!credential_id || !program_id || !network_id || !project_id) {\n        return new Response(JSON.stringify({ \n          success: false, \n          error: 'Each merchant must have credential_id, program_id, network_id, and project_id' \n        }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n\n      // Convert network_id to integer\n      const networkId = parseInt(network_id);\n      if (isNaN(networkId)) {\n        return new Response(JSON.stringify({ \n          success: false, \n          error: 'network_id must be a valid number' \n        }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n\n      // Update the network_id in the merchant object\n      merchant.network_id = networkId;\n    }\n\n    const apiUrl = 'https://apiv2.affensus.com/api/merchants/hidden';\n\n    const requestPayload = { \n      merchants: merchants\n    };\n\n    console.log('Sending to apiv2:', JSON.stringify(requestPayload, null, 2));\n\n    const apiv2Response = await fetch(apiUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${password}`, // Using same password as bearer token\n      },\n      body: JSON.stringify(requestPayload)\n    });\n\n    if (!apiv2Response.ok) {\n      const errorText = await apiv2Response.text();\n      console.error('apiv2 error response:', errorText);\n      console.error('apiv2 status:', apiv2Response.status, apiv2Response.statusText);\n      return new Response(JSON.stringify({ \n        success: false, \n        error: `External API error: ${apiv2Response.status} ${apiv2Response.statusText}`,\n        details: errorText\n      }), {\n        status: apiv2Response.status,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    const responseData = await apiv2Response.json();\n\n    return new Response(JSON.stringify({ \n      success: true, \n      data: responseData \n    }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    });\n\n  } catch (error) {\n    console.error('Error hiding merchants:', error);\n    return new Response(JSON.stringify({ \n      success: false, \n      error: 'Internal server error' \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\n\n\n\n\n\n", "// Edge-compatible JWT utilities using Web Crypto API\n// No Node.js dependencies, works in Cloudflare Workers/Pages\n\nconst JWT_ALGORITHM = 'HS256'\nconst JWT_HEADER = { alg: JWT_ALGORITHM, typ: 'JWT' }\n\nexport interface JWTPayload {\n  sub: string // user ID\n  email: string\n  login_method?: string // login method used (email, google, etc.)\n  iat: number // issued at\n  exp: number // expiration\n}\n\nexport interface User {\n  id: string\n  email: string\n  login_method?: string\n}\n\nexport async function signJwt(payload: Omit<JWTPayload, 'iat' | 'exp'>, secret: string, expiresIn: number = 7 * 24 * 60 * 60): Promise<string> {\n  const now = Math.floor(Date.now() / 1000)\n  const jwtPayload: JWTPayload = {\n    ...payload,\n    iat: now,\n    exp: now + expiresIn\n  }\n\n  const headerB64 = btoa(JSON.stringify(JWT_HEADER))\n  const payloadB64 = btoa(JSON.stringify(jwtPayload))\n  const data = `${headerB64}.${payloadB64}`\n\n  const encoder = new TextEncoder()\n  const key = await crypto.subtle.importKey(\n    'raw',\n    encoder.encode(secret),\n    { name: 'HMAC', hash: 'SHA-256' },\n    false,\n    ['sign']\n  )\n\n  const signature = await crypto.subtle.sign('HMAC', key, encoder.encode(data))\n  const signatureB64 = btoa(String.fromCharCode(...new Uint8Array(signature)))\n\n  return `${data}.${signatureB64}`\n}\n\nexport async function verifyJwt(token: string, secret: string): Promise<JWTPayload | null> {\n  try {\n    const parts = token.split('.')\n    if (parts.length !== 3) {\n      return null\n    }\n\n    const [headerB64, payloadB64, signatureB64] = parts\n    const data = `${headerB64}.${payloadB64}`\n\n    // Verify signature\n    const encoder = new TextEncoder()\n    const key = await crypto.subtle.importKey(\n      'raw',\n      encoder.encode(secret),\n      { name: 'HMAC', hash: 'SHA-256' },\n      false,\n      ['verify']\n    )\n\n    const signature = Uint8Array.from(atob(signatureB64), c => c.charCodeAt(0))\n    const isValid = await crypto.subtle.verify('HMAC', key, signature, encoder.encode(data))\n\n    if (!isValid) {\n      return null\n    }\n\n    // Parse payload\n    const payload = JSON.parse(atob(payloadB64)) as JWTPayload\n\n    // Check expiration\n    const now = Math.floor(Date.now() / 1000)\n    if (payload.exp < now) {\n      return null\n    }\n\n    return payload\n  } catch {\n    return null\n  }\n}\n\n/**\n * Validate JWT and return payload (alias for verifyJwt for consistency)\n */\nexport async function validateJWT(token: string, secret: string): Promise<JWTPayload> {\n  const payload = await verifyJwt(token, secret)\n  if (!payload) {\n    throw new Error('Invalid or expired JWT token')\n  }\n  return payload\n}\n\n/**\n * Extract user information from JWT payload\n */\nexport async function getUserFromToken(payload: JWTPayload): Promise<User> {\n  // In a real implementation, you might want to fetch additional user data from database\n  // For now, we'll just return the basic info from the token\n  return {\n    id: payload.sub,\n    email: payload.email,\n    login_method: payload.login_method,\n  }\n}\n\nexport function generateToken(): string {\n  const array = new Uint8Array(32)\n  crypto.getRandomValues(array)\n  return Array.from(array, byte => byte.toString(16).padStart(2, '0')).join('')\n} ", "import { verifyJwt } from '../../../src/lib/jwt'\n\n// Parse cookies from header\nfunction parseCookies(cookieHeader: string | null): { [key: string]: string } {\n  const cookies: { [key: string]: string } = {}\n  if (!cookieHeader) return cookies\n  \n  const cookiePairs = cookieHeader.split('; ')\n  for (const cookie of cookiePairs) {\n    const [name, ...rest] = cookie.split('=')\n    if (name && rest.length > 0) {\n      // Handle URL encoding like in /api/user\n      const value = rest.join('=') // Handle values with = signs\n      cookies[name] = decodeURIComponent(value)\n    }\n  }\n  \n  return cookies\n}\n\n// GET - Get billing address\nexport async function onRequestGet(context: any) {\n  try {\n    const { request, env } = context\n    const cookies = parseCookies(request.headers.get('Cookie'))\n    const token = cookies['auth-token']\n\n    if (!token) {\n      return new Response(JSON.stringify({ error: 'No authentication token' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    const jwtSecret = env.JWT_SECRET\n    if (!jwtSecret) {\n      return new Response(JSON.stringify({ error: 'JWT secret not configured' }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    try {\n      const decoded = await verifyJwt(token, jwtSecret)\n      if (!decoded) {\n        return new Response(JSON.stringify({ error: 'Invalid token' }), {\n          status: 401,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n      \n      const db = env.DB\n      if (!db) {\n        return new Response(JSON.stringify({ error: 'Database not available' }), {\n          status: 500,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n      // Get billing address from database\n      const address = await db.prepare(`\n        SELECT line1, line2, city, state, postal_code, country\n        FROM user_billing_addresses \n        WHERE user_id = ?\n      `).bind(decoded.sub).first()\n\n      return new Response(JSON.stringify({ \n        address: address || null \n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' }\n      })\n\n    } catch (jwtError) {\n      return new Response(JSON.stringify({ error: 'Invalid or expired token' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n  } catch (error) {\n    console.error('Error fetching billing address:', error)\n    return new Response(JSON.stringify({ error: 'Failed to fetch billing address' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    })\n  }\n}\n\n// PUT - Update billing address\nexport async function onRequestPut(context: any) {\n  try {\n    const { request, env } = context\n    \n    // Get JWT token from cookie\n    const cookieHeader = request.headers.get('Cookie')\n    let token: string | null = null\n    \n    if (cookieHeader) {\n      const cookies = cookieHeader.split('; ')\n      const authCookie = cookies.find((c: string) => c.startsWith('auth-token='))\n      if (authCookie) {\n        token = authCookie.split('=')[1]\n      }\n    }\n\n    if (!token) {\n      return new Response(JSON.stringify({ error: 'No authentication token' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    const jwtSecret = env.JWT_SECRET\n    if (!jwtSecret) {\n      return new Response(JSON.stringify({ error: 'JWT secret not configured' }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    try {\n      const decoded = await verifyJwt(token, jwtSecret)\n      if (!decoded) {\n        return new Response(JSON.stringify({ error: 'Invalid token' }), {\n          status: 401,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n      const { line1, line2, city, state, postalCode, country } = await request.json()\n\n      // Validate required fields\n      if (!line1 || !city || !postalCode || !country) {\n        return new Response(JSON.stringify({ error: 'Missing required fields' }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n      const db = env.DB\n      if (!db) {\n        return new Response(JSON.stringify({ error: 'Database not available' }), {\n          status: 500,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n      // Upsert billing address\n      await db.prepare(`\n        INSERT INTO user_billing_addresses (user_id, line1, line2, city, state, postal_code, country, updated_at)\n        VALUES (?, ?, ?, ?, ?, ?, ?, datetime('now'))\n        ON CONFLICT(user_id) DO UPDATE SET\n          line1 = excluded.line1,\n          line2 = excluded.line2,\n          city = excluded.city,\n          state = excluded.state,\n          postal_code = excluded.postal_code,\n          country = excluded.country,\n          updated_at = datetime('now')\n      `).bind(decoded.sub, line1, line2 || null, city, state, postalCode, country).run()\n\n      return new Response(JSON.stringify({ \n        success: true,\n        address: { line1, line2, city, state, postalCode, country }\n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' }\n      })\n\n    } catch (jwtError) {\n      return new Response(JSON.stringify({ error: 'Invalid or expired token' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n  } catch (error) {\n    console.error('Error saving billing address:', error)\n    return new Response(JSON.stringify({ error: 'Failed to save billing address' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    })\n  }\n} ", "import { verifyJwt } from '../../../src/lib/jwt'\n\nfunction parseCookies(cookieHeader: string | null): Record<string, string> {\n  if (!cookieHeader) return {}\n  \n  return cookieHeader.split(';').reduce((cookies, cookie) => {\n    const [name, value] = cookie.trim().split('=')\n    if (name && value) {\n      cookies[name] = decodeURIComponent(value)\n    }\n    return cookies\n  }, {} as Record<string, string>)\n}\n\nasync function getUserById(db: any, userId: string) {\n  try {\n    const user = await db.prepare(`\n      SELECT id, email, first_name, last_name, avatar_url, subscription_status, \n             stripe_customer_id, subscription_expires_at, trial_ends_at, \n             created_at, updated_at\n      FROM users \n      WHERE id = ?\n    `).bind(userId).first()\n    \n    return user\n  } catch (error) {\n    console.error('Error getting user by ID:', error)\n    return null\n  }\n}\n\n// GET - Check if user needs to complete profile\nexport async function onRequestGet(context: any) {\n  try {\n    const { request, env } = context\n    const cookies = parseCookies(request.headers.get('Cookie'))\n    const token = cookies['auth-token']\n\n    if (!token) {\n      return new Response(JSON.stringify({ error: 'No authentication token' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    const jwtSecret = env.JWT_SECRET\n    if (!jwtSecret) {\n      return new Response(JSON.stringify({ error: 'JWT secret not configured' }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    try {\n      const decoded = await verifyJwt(token, jwtSecret)\n      \n      if (!decoded) {\n        return new Response(JSON.stringify({ error: 'Invalid or expired token' }), {\n          status: 401,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n      \n      const db = env.DB\n      if (!db) {\n        return new Response(JSON.stringify({ error: 'Database not available' }), {\n          status: 500,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n      const user = await getUserById(db, decoded.sub)\n      if (!user) {\n        return new Response(JSON.stringify({ error: 'User not found' }), {\n          status: 404,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n      // Check if user has personal data (first name and last name)\n      const hasPersonalData = !!(user.first_name && user.last_name)\n\n      // Check if user has billing address\n      const billingAddress = await db.prepare(`\n        SELECT line1, line2, city, state, postal_code, country\n        FROM user_billing_addresses \n        WHERE user_id = ?\n      `).bind(decoded.sub).first()\n\n      const hasBillingAddress = !!billingAddress\n\n      // Determine if profile completion is needed\n      const needsProfileCompletion = !hasPersonalData || !hasBillingAddress\n\n      return new Response(JSON.stringify({\n        needsProfileCompletion,\n        hasPersonalData,\n        hasBillingAddress,\n        isPaidUser: user.subscription_status !== 'free'\n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' }\n      })\n\n    } catch (jwtError) {\n      return new Response(JSON.stringify({ error: 'Invalid or expired token' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n  } catch (error) {\n    console.error('Error checking profile completion status:', error)\n    return new Response(JSON.stringify({ error: 'Failed to check profile completion status' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    })\n  }\n}\n", "import { verifyJwt } from '../../../src/lib/jwt'\n\nasync function getUserInvoices(db: any, userId: string) {\n  return await db.prepare(`\n    SELECT * FROM stripe_invoices \n    WHERE user_id = ? \n    ORDER BY created_at DESC \n    LIMIT 50\n  `).bind(userId).all()\n}\n\n// GET - Get user invoices\nexport async function onRequestGet(context: any) {\n  try {\n    const { request, env } = context\n    \n    // Get JWT token from cookie (same logic as /api/user)\n    const cookieHeader = request.headers.get('Cookie')\n    let token: string | null = null\n    \n    if (cookieHeader) {\n      const cookies = cookieHeader.split('; ')\n      const authCookie = cookies.find((c: string) => c.startsWith('auth-token='))\n      if (authCookie) {\n        // Handle URL encoding like in /api/user\n        const encodedToken = authCookie.split('=')[1]\n        token = decodeURIComponent(encodedToken)\n      }\n    }\n\n    if (!token) {\n      return new Response(JSON.stringify({ error: 'No authentication token' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    const jwtSecret = env.JWT_SECRET\n    if (!jwtSecret) {\n      return new Response(JSON.stringify({ error: 'JWT secret not configured' }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    try {\n      const decoded = await verifyJwt(token, jwtSecret)\n      if (!decoded) {\n        return new Response(JSON.stringify({ error: 'Invalid token' }), {\n          status: 401,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n      \n      const db = env.DB\n      if (!db) {\n        return new Response(JSON.stringify({ error: 'Database not available' }), {\n          status: 500,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n      const invoicesResult = await getUserInvoices(db, decoded.sub)\n      const invoices = invoicesResult.results || []\n\n      // Format invoices for frontend\n      const formattedInvoices = invoices.map((invoice: any) => ({\n        id: invoice.id.toString(),\n        stripeInvoiceId: invoice.stripe_invoice_id,\n        amountPaid: invoice.amount_paid,\n        currency: invoice.currency,\n        status: invoice.status,\n        description: invoice.description,\n        invoiceUrl: invoice.invoice_url,\n        hostedInvoiceUrl: invoice.hosted_invoice_url,\n        periodStart: invoice.period_start,\n        periodEnd: invoice.period_end,\n        createdAt: invoice.created_at,\n        // New invoice fields\n        invoiceNumber: invoice.invoice_number,\n        invoiceType: invoice.invoice_type,\n        invoiceDate: invoice.invoice_date,\n        totalAmount: invoice.total_amount,\n        creditNoteForInvoiceId: invoice.credit_note_for_invoice_id\n      }))\n\n      return new Response(JSON.stringify({\n        invoices: formattedInvoices\n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' }\n      })\n\n    } catch (jwtError) {\n      return new Response(JSON.stringify({ error: 'Invalid or expired token' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n  } catch (error) {\n    console.error('Error getting user invoices:', error)\n    return new Response(JSON.stringify({ error: 'Internal server error' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    })\n  }\n} ", "import { verifyJwt } from '../../../src/lib/jwt'\n\nasync function getUserPreferences(db: any, userId: string) {\n  return await db.prepare(`\n    SELECT * FROM user_preferences \n    WHERE user_id = ?\n  `).bind(userId).first()\n}\n\nasync function createDefaultPreferences(db: any, userId: string) {\n  await db.prepare(`\n    INSERT INTO user_preferences (user_id, speed_preference, audio_enabled, notifications_enabled, theme, language)\n    VALUES (?, 20, 1, 1, 'light', 'en')\n  `).bind(userId).run()\n  \n  return await getUserPreferences(db, userId)\n}\n\n// GET - Get user preferences\nexport async function onRequestGet(context: any) {\n  try {\n    const { request, env } = context\n    \n    // Get JWT token from cookie (same logic as /api/user)\n    const cookieHeader = request.headers.get('Cookie')\n    let token: string | null = null\n    \n    if (cookieHeader) {\n      const cookies = cookieHeader.split('; ')\n      const authCookie = cookies.find((c: string) => c.startsWith('auth-token='))\n      if (authCookie) {\n        // Handle URL encoding like in /api/user\n        const encodedToken = authCookie.split('=')[1]\n        token = decodeURIComponent(encodedToken)\n      }\n    }\n\n    if (!token) {\n      return new Response(JSON.stringify({ error: 'No authentication token' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    const jwtSecret = env.JWT_SECRET\n    if (!jwtSecret) {\n      return new Response(JSON.stringify({ error: 'JWT secret not configured' }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    try {\n      const decoded = await verifyJwt(token, jwtSecret)\n      if (!decoded) {\n        return new Response(JSON.stringify({ error: 'Invalid token' }), {\n          status: 401,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n      \n      const db = env.DB\n      if (!db) {\n        return new Response(JSON.stringify({ error: 'Database not available' }), {\n          status: 500,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n      let preferences = await getUserPreferences(db, decoded.sub)\n      \n      // Create default preferences if none exist\n      if (!preferences) {\n        preferences = await createDefaultPreferences(db, decoded.sub)\n      }\n\n      // Format preferences for frontend\n      const formattedPreferences = {\n        speedPreference: preferences.speed_preference,\n        audioEnabled: Boolean(preferences.audio_enabled),\n        notificationsEnabled: Boolean(preferences.notifications_enabled),\n        theme: preferences.theme,\n        language: preferences.language\n      }\n\n      return new Response(JSON.stringify({\n        preferences: formattedPreferences\n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' }\n      })\n\n    } catch (jwtError) {\n      console.error('JWT Error:', jwtError)\n      return new Response(JSON.stringify({ error: 'Invalid or expired token' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n  } catch (error) {\n    console.error('Error getting user preferences:', error)\n    return new Response(JSON.stringify({ error: 'Internal server error' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    })\n  }\n} ", "/**\n * Invoice Generation Utilities\n * Handles sequential invoice numbering and invoice record creation\n */\n\n// Database interface for CloudFlare D1\ninterface D1Database {\n  prepare(query: string): D1PreparedStatement\n}\n\ninterface D1PreparedStatement {\n  bind(...values: unknown[]): D1PreparedStatement\n  first(): Promise<Record<string, unknown>>\n  all(): Promise<{ results: Record<string, unknown>[] }>\n  run(): Promise<{ success: boolean; meta: Record<string, unknown> }>\n}\n\ninterface BillingAddress {\n  line1: string\n  line2?: string\n  city: string\n  state: string\n  postalCode: string\n  country: string\n  addressType?: 'personal' | 'company'\n  companyName?: string\n  taxIdType?: string\n  taxIdNumber?: string\n}\n\ninterface InvoiceData {\n  userId: number\n  userEmail: string\n  userName: string\n  stripeCustomerId: string\n  stripeInvoiceId: string\n  amountPaid: number\n  currency: string\n  description: string\n  billingAddress: BillingAddress\n  invoiceType?: 'invoice' | 'credit_note'\n  creditNoteForInvoiceId?: number\n}\n\ninterface InvoiceRecord {\n  id: number\n  invoiceNumber: string\n  invoiceType: 'invoice' | 'credit_note'\n  userId: number\n  stripeInvoiceId: string\n  stripeCustomerId: string\n  amountPaid: number\n  currency: string\n  status: string\n  description: string\n  billingName: string\n  billingEmail: string\n  billingAddressLine1: string\n  billingAddressLine2?: string\n  billingCity: string\n  billingState: string\n  billingPostalCode: string\n  billingCountry: string\n  taxRate: number\n  taxAmount: number\n  taxDescription: string\n  subtotalAmount: number\n  totalAmount: number\n  invoiceDate: string\n  dueDate: string\n  creditNoteForInvoiceId?: number\n  createdAt: string\n}\n\n/**\n * Generates the next sequential invoice number\n */\nexport async function generateInvoiceNumber(db: D1Database): Promise<string> {\n  const currentYear = new Date().getFullYear()\n  \n  // Atomic increment of sequence number\n  const result = await db.prepare(`\n    INSERT INTO invoice_sequence (year, sequence_number) \n    VALUES (?, 1)\n    ON CONFLICT(year) DO UPDATE SET \n      sequence_number = sequence_number + 1,\n      last_updated = datetime('now')\n    RETURNING sequence_number\n  `).bind(currentYear).first()\n  \n  const sequenceNumber = result?.sequence_number as number\n  \n  // Format: INV-2025-001\n  return `INV-${currentYear}-${sequenceNumber.toString().padStart(3, '0')}`\n}\n\n/**\n * Calculates tax based on billing address and Hong Kong regulations\n */\nexport function calculateTax(amount: number, billingAddress: BillingAddress): {\n  taxRate: number\n  taxAmount: number\n  taxDescription: string\n  subtotalAmount: number\n  totalAmount: number\n} {\n  // Hong Kong tax logic\n  // For now, 0% tax on all transactions (foreign income exemption)\n  // Future: Could add logic for HK residents or different jurisdictions\n  \n  const taxRate = 0.00\n  const taxAmount = 0\n  const taxDescription = billingAddress.country === 'HK' \n    ? 'No tax applicable (Hong Kong)' \n    : 'No tax applicable (Hong Kong - Foreign Income)'\n  \n  const subtotalAmount = amount\n  const totalAmount = subtotalAmount + taxAmount\n  \n  return {\n    taxRate,\n    taxAmount,\n    taxDescription,\n    subtotalAmount,\n    totalAmount\n  }\n}\n\n/**\n * Creates a complete invoice record in the database\n */\nexport async function createInvoiceRecord(db: D1Database, invoiceData: InvoiceData): Promise<InvoiceRecord> {\n  const invoiceNumber = await generateInvoiceNumber(db)\n  const invoiceDate = new Date().toISOString()\n  const dueDate = new Date().toISOString() // Immediate payment for one-time purchases\n  \n  // Calculate tax\n  const taxCalc = calculateTax(invoiceData.amountPaid, invoiceData.billingAddress)\n  \n  // Format billing name\n  const billingName = invoiceData.billingAddress.addressType === 'company' && invoiceData.billingAddress.companyName\n    ? invoiceData.billingAddress.companyName\n    : invoiceData.userName\n  \n  // Insert invoice record\n  const invoiceRecord = await db.prepare(`\n    INSERT INTO stripe_invoices (\n      invoice_number,\n      invoice_type,\n      user_id,\n      stripe_invoice_id,\n      stripe_customer_id,\n      amount_paid,\n      currency,\n      status,\n      description,\n      billing_name,\n      billing_email,\n      billing_address_line1,\n      billing_address_line2,\n      billing_city,\n      billing_state,\n      billing_postal_code,\n      billing_country,\n      tax_rate,\n      tax_amount,\n      tax_description,\n      subtotal_amount,\n      total_amount,\n      invoice_date,\n      due_date,\n      credit_note_for_invoice_id,\n      created_at\n    ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, datetime('now'))\n    RETURNING *\n  `).bind(\n    invoiceNumber,\n    invoiceData.invoiceType || 'invoice',\n    invoiceData.userId,\n    invoiceData.stripeInvoiceId,\n    invoiceData.stripeCustomerId,\n    invoiceData.amountPaid,\n    invoiceData.currency,\n    'paid', // Default status for new invoices\n    invoiceData.description,\n    billingName,\n    invoiceData.userEmail,\n    invoiceData.billingAddress.line1,\n    invoiceData.billingAddress.line2 || null,\n    invoiceData.billingAddress.city,\n    invoiceData.billingAddress.state,\n    invoiceData.billingAddress.postalCode,\n    invoiceData.billingAddress.country,\n    taxCalc.taxRate,\n    taxCalc.taxAmount,\n    taxCalc.taxDescription,\n    taxCalc.subtotalAmount,\n    taxCalc.totalAmount,\n    invoiceDate,\n    dueDate,\n    invoiceData.creditNoteForInvoiceId || null\n  ).first() as unknown as InvoiceRecord\n  \n  console.log(`Generated invoice: ${invoiceNumber} for user ${invoiceData.userId}`)\n  \n  return invoiceRecord\n}\n\n/**\n * Creates a credit note for a refund\n */\nexport async function createCreditNote(db: D1Database, originalInvoiceId: number, refundReason: string): Promise<InvoiceRecord> {\n  // Get original invoice data\n  const originalInvoice = await db.prepare(`\n    SELECT * FROM stripe_invoices WHERE id = ?\n  `).bind(originalInvoiceId).first() as unknown as InvoiceRecord\n  \n  if (!originalInvoice) {\n    throw new Error('Original invoice not found')\n  }\n  \n  // Create credit note with negative amounts\n  const creditNoteData: InvoiceData = {\n    userId: originalInvoice.userId,\n    userEmail: originalInvoice.billingEmail,\n    userName: originalInvoice.billingName,\n    stripeCustomerId: originalInvoice.stripeCustomerId,\n    stripeInvoiceId: `refund_${originalInvoice.stripeInvoiceId}`,\n    amountPaid: -Math.abs(originalInvoice.amountPaid), // Negative amount for credit\n    currency: originalInvoice.currency,\n    description: `Credit Note - ${refundReason}`,\n    billingAddress: {\n      line1: originalInvoice.billingAddressLine1,\n      line2: originalInvoice.billingAddressLine2,\n      city: originalInvoice.billingCity,\n      state: originalInvoice.billingState,\n      postalCode: originalInvoice.billingPostalCode,\n      country: originalInvoice.billingCountry\n    },\n    invoiceType: 'credit_note',\n    creditNoteForInvoiceId: originalInvoiceId\n  }\n  \n  return await createInvoiceRecord(db, creditNoteData)\n}\n\n/**\n * Gets user's billing address from the database\n */\nexport async function getUserBillingAddress(db: D1Database, userId: number): Promise<BillingAddress | null> {\n  const address = await db.prepare(`\n    SELECT * FROM user_billing_addresses WHERE user_id = ?\n  `).bind(userId).first()\n  \n  if (!address) {\n    return null\n  }\n  \n  return {\n    line1: address.line1 as string,\n    line2: address.line2 as string | undefined,\n    city: address.city as string,\n    state: address.state as string,\n    postalCode: address.postal_code as string,\n    country: address.country as string,\n    addressType: address.address_type as 'personal' | 'company' | undefined,\n    companyName: address.company_name as string | undefined,\n    taxIdType: address.tax_id_type as string | undefined,\n    taxIdNumber: address.tax_id_number as string | undefined\n  }\n}\n\n/**\n * Processes pending payments after user completes billing address\n */\nexport async function processPendingInvoices(db: D1Database, userId: number, userEmail: string): Promise<InvoiceRecord[]> {\n  // Get user's billing address\n  const billingAddress = await getUserBillingAddress(db, userId)\n  if (!billingAddress) {\n    throw new Error('Billing address not found')\n  }\n  \n  // Get user's name\n  const user = await db.prepare(`\n    SELECT first_name, last_name FROM users WHERE id = ?\n  `).bind(userId).first()\n  \n  const userName = user ? `${user.first_name as string} ${user.last_name as string}`.trim() : 'Customer'\n  \n  // Get pending payments for this user\n  const pendingPayments = await db.prepare(`\n    SELECT * FROM pending_payments WHERE email = ? ORDER BY created_at ASC\n  `).bind(userEmail.toLowerCase()).all()\n  \n  const createdInvoices: InvoiceRecord[] = []\n  \n  for (const payment of pendingPayments.results || []) {\n    const invoiceData: InvoiceData = {\n      userId,\n      userEmail,\n      userName,\n      stripeCustomerId: (payment.stripe_customer_id as string) || 'pending',\n      stripeInvoiceId: payment.session_id as string,\n      amountPaid: payment.amount_total as number,\n      currency: payment.currency as string,\n      description: `${(payment.customer_name as string) || 'Premium Plan'} - Processed Payment`,\n      billingAddress\n    }\n    \n    const invoice = await createInvoiceRecord(db, invoiceData)\n    createdInvoices.push(invoice)\n    \n    // Remove from pending payments\n    await db.prepare(`\n      DELETE FROM pending_payments WHERE id = ?\n    `).bind(payment.id as number).run()\n  }\n  \n  console.log(`Processed ${createdInvoices.length} pending invoices for user ${userId}`)\n  \n  return createdInvoices\n}\n\nexport type { InvoiceData, InvoiceRecord, BillingAddress }\n", "import { verifyJwt } from '../../../src/lib/jwt'\n\nexport async function onRequestOptions() {\n  return new Response(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'POST, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n    },\n  })\n}\n\nexport async function onRequestPost(context: any) {\n  try {\n    const { request, env } = context\n    \n    // Get JWT token from cookie\n    const cookieHeader = request.headers.get('Cookie')\n    let token: string | null = null\n    \n    if (cookieHeader) {\n      const cookies = cookieHeader.split('; ')\n      const authCookie = cookies.find((c: string) => c.startsWith('auth-token='))\n      if (authCookie) {\n        // Handle URL encoding like in /api/user\n        const encodedToken = authCookie.split('=')[1]\n        token = decodeURIComponent(encodedToken)\n      }\n    }\n\n    if (!token) {\n      return new Response(JSON.stringify({ error: 'No authentication token' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    const jwtSecret = env.JWT_SECRET\n    if (!jwtSecret) {\n      return new Response(JSON.stringify({ error: 'JWT secret not configured' }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    try {\n      const payload = await verifyJwt(token, jwtSecret)\n      if (!payload) {\n        return new Response(JSON.stringify({ error: 'Invalid token' }), {\n          status: 401,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n      const db = env.DB\n      if (!db) {\n        return new Response(JSON.stringify({ error: 'Database not available' }), {\n          status: 500,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n      // Import invoice generator functions\n      const { processPendingInvoices } = await import('../../../src/lib/invoice-generator.js')\n\n      // Process pending invoices for this user\n      const createdInvoices = await processPendingInvoices(db, parseInt(payload.sub), payload.email)\n\n      return new Response(JSON.stringify({ \n        success: true,\n        invoicesCreated: createdInvoices.length,\n        invoices: createdInvoices.map(inv => ({\n          invoiceNumber: inv.invoiceNumber,\n          amount: inv.totalAmount,\n          currency: inv.currency\n        }))\n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' }\n      })\n\n    } catch (jwtError) {\n      return new Response(JSON.stringify({ error: 'Invalid or expired token' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n  } catch (error) {\n    console.error('Error processing pending invoices:', error)\n    return new Response(JSON.stringify({ \n      error: \"Internal server error\" \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    })\n  }\n}\n", "// API endpoint for queue status monitoring\nexport async function onRequestOptions() {\n  return new Response(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n    }\n  });\n}\n\nexport interface QueueStatus {\n  total_queued: number;\n  currently_processing: number;\n  total_waiting: number;\n  average_wait_time?: number;\n  estimated_completion?: string;\n}\n\n// GET /api/queue/status - Get overall queue status\nexport async function onRequestGet(context: { request: Request; env: { AFFENSUS_CREDENTIALS_PASSWORD: string } }) {\n  try {\n    const { request, env } = context;\n\n    // Use external API\n    const bearerToken = env.AFFENSUS_CREDENTIALS_PASSWORD;\n    if (!bearerToken) {\n      throw new Error('AFFENSUS_CREDENTIALS_PASSWORD not configured');\n    }\n\n    console.log('Making API request to:', 'https://apiv2.affensus.com/api/queue/status');\n\n    let response;\n    try {\n      response = await fetch('https://apiv2.affensus.com/api/queue/status', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${bearerToken}`,\n        },\n      });\n    } catch (fetchError) {\n      console.error('Fetch error:', fetchError);\n      const errorMessage = fetchError instanceof Error ? fetchError.message : 'Unknown fetch error';\n      throw new Error(`Network error: ${errorMessage}`);\n    }\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('API Response Error:', {\n        status: response.status,\n        statusText: response.statusText,\n        body: errorText\n      });\n      throw new Error(`External API error: ${response.status} ${response.statusText} - ${errorText}`);\n    }\n\n    const data = await response.json() as QueueStatus;\n    \n    return new Response(JSON.stringify(data), {\n      status: 200,\n      headers: {\n        'Content-Type': 'application/json',\n        'Cache-Control': 'no-store, max-age=0',\n      },\n    });\n  } catch (error) {\n    console.error('Queue status error:', error);\n    return new Response(JSON.stringify({ \n      success: false, \n      error: error instanceof Error ? error.message : 'Internal server error' \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' },\n    });\n  }\n}\n\n\n", "export async function onRequestOptions() {\n  return new Response(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'POST, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n    },\n  });\n}\n\nexport async function onRequestGet(context: any) {\n  const { request, env } = context;\n  \n  try {\n    // Use the same environment variable for API auth\n    const password = env.AFFENSUS_CREDENTIALS_PASSWORD;\n    if (!password) {\n      return new Response(JSON.stringify({ \n        success: false, \n        error: 'AFFENSUS_CREDENTIALS_PASSWORD not configured' \n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    const url = new URL(request.url);\n    const uuid = url.searchParams.get('uuid');\n\n    if (!uuid) {\n      return new Response(JSON.stringify({ \n        success: false, \n        error: 'UUID is required' \n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    const apiUrl = `https://apiv2.affensus.com/api/redirect-checker/${uuid}`;\n\n    console.log('Fetching from apiv2:', apiUrl);\n\n    const apiv2Response = await fetch(apiUrl, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${password}`,\n      }\n    });\n\n    if (!apiv2Response.ok) {\n      const errorText = await apiv2Response.text();\n      console.error('apiv2 error response:', errorText);\n      console.error('apiv2 status:', apiv2Response.status, apiv2Response.statusText);\n      return new Response(JSON.stringify({ \n        success: false, \n        error: `External API error: ${apiv2Response.status} ${apiv2Response.statusText}`,\n        details: errorText\n      }), {\n        status: apiv2Response.status,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    const responseData = await apiv2Response.json();\n    console.log('Response data:', responseData);\n    \n    return new Response(JSON.stringify({\n      success: true, \n      data: responseData \n    }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    });\n\n  } catch (error) {\n    console.error('Error fetching shared result:', error);\n    return new Response(JSON.stringify({ \n      success: false, \n      error: 'Internal server error' \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\nexport async function onRequestPost(context: any) {\n  const { request, env } = context;\n\n  try {\n    // Use the same environment variable for API auth\n    const password = env.AFFENSUS_CREDENTIALS_PASSWORD;\n    if (!password) {\n      return new Response(JSON.stringify({ \n        success: false, \n        error: 'AFFENSUS_CREDENTIALS_PASSWORD not configured' \n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    const body = await request.json();\n    const { url, proxy, country } = body;\n\n    if (!url) {\n      return new Response(JSON.stringify({ \n        success: false, \n        error: 'URL is required' \n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    const apiUrl = 'https://apiv2.affensus.com/api/redirect-checker';\n\n    const requestPayload: any = { \n      url: url\n    };\n\n    // Add proxy settings if provided\n    if (proxy && country) {\n      requestPayload.proxy = proxy;\n      requestPayload.country = country;\n    }\n\n    console.log('Sending to apiv2:', JSON.stringify(requestPayload, null, 2));\n\n    const apiv2Response = await fetch(apiUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${password}`,\n      },\n      body: JSON.stringify(requestPayload)\n    });\n\n    if (!apiv2Response.ok) {\n      const errorText = await apiv2Response.text();\n      console.error('apiv2 error response:', errorText);\n      console.error('apiv2 status:', apiv2Response.status, apiv2Response.statusText);\n      return new Response(JSON.stringify({ \n        success: false, \n        error: `External API error: ${apiv2Response.status} ${apiv2Response.statusText}`,\n        details: errorText\n      }), {\n        status: apiv2Response.status,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    const responseData = await apiv2Response.json();\n    console.log('Response data:', responseData);\n    \n    return new Response(JSON.stringify({ \n      success: true, \n      data: responseData \n    }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    });\n\n  } catch (error) {\n    console.error('Error checking redirects:', error);\n    return new Response(JSON.stringify({ \n      success: false, \n      error: 'Internal server error' \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}", "export interface Env {\n  UPTIME_KUMA_SECRET: string;\n  UPTIME_KUMA_URL?: string;\n}\n\ninterface StatusPageHeartbeat {\n  status: number;\n  time: string;\n  msg: string;\n  ping: number;\n}\n\ninterface StatusPageResponse {\n  heartbeatList: {\n    [key: string]: StatusPageHeartbeat[];\n  };\n  uptimeList: {\n    [key: string]: number;\n  };\n}\n\ninterface UrlData {\n  type: string;\n  avg_uptime_percentage: number;\n  avg_response_time: number;\n  hasStatusPage: boolean;\n  heartbeats?: StatusPageHeartbeat[];\n  uptimeList?: { [key: string]: number };\n}\n\ninterface Domain {\n  domain: string;\n  displayName: string;\n  dashboardId?: string; // The monitor ID from Uptime Kuma\n  originalName?: string; // Original monitor name for status page lookup\n  avg_uptime_percentage: number;\n  urls: UrlData[];\n  day_uptime: { type: string; day_uptime: { date: string; uptime: number | null }[] }[];\n  hasStatusPage: boolean;\n  uptimeList?: { [key: string]: number };\n}\n\nexport async function onRequestGet(context: { env: Env, request: Request }): Promise<Response> {\n  try {\n    const { env, request } = context;\n    const url = new URL(request.url);\n    const debug = url.searchParams.get('debug') === 'true';\n    \n    const uptimeKumaSecret = env.UPTIME_KUMA_SECRET;\n\n    if (!uptimeKumaSecret) {\n      return new Response(JSON.stringify({ error: 'Uptime Kuma secret not configured' }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    // Debug mode - return environment info\n    if (debug) {\n      // Try to fetch data and include network count in debug response\n      let networkCount = 0;\n      let fetchError = null;\n      \n      try {\n        const uptimeKumaUrl = env.UPTIME_KUMA_URL || 'http://uptime.affensus.com:3001';\n        const monitorsResponse = await fetch(`${uptimeKumaUrl}/metrics`, {\n          headers: {\n            'Authorization': `Basic ${btoa(':' + uptimeKumaSecret)}`,\n            'Accept': 'text/plain'\n          }\n        });\n        \n        if (monitorsResponse.ok) {\n          const metricsText = await monitorsResponse.text();\n          if (!metricsText.startsWith('<!DOCTYPE') && !metricsText.includes('<html')) {\n            const processedDomains = await processPrometheusMetrics(metricsText, env.UPTIME_KUMA_URL);\n            networkCount = processedDomains.length;\n          }\n        } else {\n          fetchError = `HTTP ${monitorsResponse.status}: ${monitorsResponse.statusText}`;\n        }\n      } catch (error) {\n        fetchError = error instanceof Error ? error.message : 'Unknown error';\n      }\n      \n      return new Response(JSON.stringify({\n        environment: typeof caches !== 'undefined' ? 'cloudflare' : 'local',\n        hasSecret: !!uptimeKumaSecret,\n        secretLength: uptimeKumaSecret?.length || 0,\n        secretPrefix: uptimeKumaSecret?.substring(0, 4) || 'none',\n        uptimeKumaUrl: env.UPTIME_KUMA_URL || 'http://uptime.affensus.com:3001',\n        networkCount,\n        fetchError,\n        timestamp: new Date().toISOString()\n      }), {\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'Cache-Control': 'no-store, must-revalidate'\n        }\n      });\n    }\n\n    // Try multiple endpoints to get data from Uptime Kuma\n    let metricsText = '';\n    let success = false;\n\n    // First try the metrics endpoint with Basic Auth\n    const uptimeKumaUrl = env.UPTIME_KUMA_URL || 'http://uptime.affensus.com:3001';\n    const metricsUrl = `${uptimeKumaUrl}/metrics`;\n    \n    console.log('Fetching from:', metricsUrl);\n    console.log('Environment variables updated - triggering new deployment');\n    \n    try {\n      const monitorsResponse = await fetch(metricsUrl, {\n        headers: {\n          'Authorization': `Basic ${btoa(':' + uptimeKumaSecret)}`,\n          'Accept': 'text/plain'\n        }\n      });\n\n      console.log('Response status:', monitorsResponse.status, monitorsResponse.statusText);\n\n      if (monitorsResponse.ok) {\n        metricsText = await monitorsResponse.text();\n        console.log('Metrics text length:', metricsText.length);\n        console.log('First 200 chars:', metricsText.substring(0, 200));\n        \n        // Check if we got HTML instead of metrics\n        if (metricsText.startsWith('<!DOCTYPE') || metricsText.includes('<html')) {\n          console.log('Received HTML instead of metrics');\n        } else {\n          success = true;\n          console.log('Successfully fetched metrics data');\n        }\n      } else {\n        console.error('Metrics endpoint failed:', monitorsResponse.status, monitorsResponse.statusText);\n        const errorText = await monitorsResponse.text();\n        console.error('Error response:', errorText.substring(0, 500));\n      }\n    } catch (error) {\n      console.error('Error fetching metrics:', error);\n    }\n\n    if (!success) {\n      \n      // Check if we're in Cloudflare environment and the issue is network access\n      const isCloudflareEnv = typeof caches !== 'undefined';\n      const usingPrivateIp = !env.UPTIME_KUMA_URL && isCloudflareEnv;\n      \n      let errorMessage = 'Unable to fetch data from Uptime Kuma';\n      if (usingPrivateIp) {\n        errorMessage += ' - Unable to access Uptime Kuma server. Please check network connectivity.';\n      }\n      \n      return new Response(JSON.stringify({ \n        error: errorMessage,\n        debug: {\n          environment: isCloudflareEnv ? 'cloudflare' : 'local',\n          hasPublicUrl: !!env.UPTIME_KUMA_URL,\n          suggestedAction: usingPrivateIp ? 'Configure UPTIME_KUMA_URL environment variable' : 'Check network connectivity'\n        }\n      }), {\n        status: 503,\n        headers: {\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*',\n          'Access-Control-Allow-Methods': 'GET, OPTIONS',\n          'Access-Control-Allow-Headers': 'Content-Type',\n          'Cache-Control': 'no-store, must-revalidate'\n        }\n      });\n    }\n\n    // Process the Prometheus metrics to match our expected format\n    const processedDomains = await processPrometheusMetrics(metricsText, env.UPTIME_KUMA_URL);\n    \n    console.log(`Processed ${processedDomains.length} domains`);\n    console.log('Domain names:', processedDomains.map(d => d.displayName || d.domain));\n\n    return new Response(JSON.stringify(processedDomains), {\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET, OPTIONS',\n        'Access-Control-Allow-Headers': 'Content-Type',\n        'Cache-Control': 'no-store, must-revalidate'\n      }\n    });\n\n  } catch (error) {\n    console.error('Error in affiliate-network-uptime API:', error);\n    \n    // Return error instead of mock data\n    return new Response(JSON.stringify({ error: 'Failed to fetch real uptime data: ' + (error instanceof Error ? error.message : 'Unknown error') }), {\n      status: 500,\n      headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*',\n        'Access-Control-Allow-Methods': 'GET, OPTIONS',\n        'Access-Control-Allow-Headers': 'Content-Type',\n        'Cache-Control': 'no-store, must-revalidate'\n      }\n    });\n  }\n}\n\nexport async function onRequestOptions(): Promise<Response> {\n  return new Response(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type'\n    }\n  });\n}\n\nfunction formatNetworkDisplayName(networkName: string): string {\n  const nameMappings: { [key: string]: string } = {\n    'involveasia': 'Involve Asia',\n    'partnerads': 'Partner Ads',\n    'retailads': 'Retail Ads',\n    'smartresponse': 'Smart Response',\n    'takeads': 'Take Ads'\n  };\n  \n  const normalizedName = networkName.toLowerCase().replace(/[^a-z0-9]/g, '');\n  return nameMappings[normalizedName] || networkName;\n}\n\nasync function fetchStatusPageData(networkName: string, uptimeKumaUrl?: string): Promise<StatusPageResponse | null> {\n  try {\n    const url = `${uptimeKumaUrl || 'http://uptime.affensus.com:3001'}/api/status-page/heartbeat/${networkName}?limit=10080`;\n    \n    const response = await fetch(url);\n    \n    if (!response.ok) {\n      return null;\n    }\n    \n    const data = await response.json();\n    \n    return data;\n  } catch (error) {\n    console.error(`Error fetching status page data for ${networkName}:`, error);\n    return null;\n  }\n}\n\nasync function processPrometheusMetrics(metricsText: string, uptimeKumaUrl?: string): Promise<Domain[]> {\n  const domains: Map<string, Domain> = new Map();\n  const lines = metricsText.split('\\n');\n\n  // Parse Prometheus metrics\n  const monitors: Map<string, any> = new Map();\n\n  for (const line of lines) {\n    if (line.startsWith('#') || !line.trim()) continue;\n\n    // Parse metric lines like: metric_name{label1=\"value1\",label2=\"value2\"} value\n    const metricMatch = line.match(/^([a-zA-Z_:][a-zA-Z0-9_:]*)\\{([^}]*)\\}\\s+(.+)$/);\n    if (!metricMatch) continue;\n\n    const [, metricName, labelsStr, value] = metricMatch;\n    \n    // Parse labels\n    const labels: { [key: string]: string } = {};\n    const labelMatches = labelsStr.matchAll(/([a-zA-Z_][a-zA-Z0-9_]*)=\"([^\"]*)\"/g);\n    for (const labelMatch of labelMatches) {\n      labels[labelMatch[1]] = labelMatch[2];\n    }\n    \n    const monitorName = labels.monitor_name || labels.job || 'unknown';\n    \n    // Skip group monitors or invalid ones\n    if (labels.monitor_type === 'group' || monitorName === 'unknown') continue;\n\n    if (!monitors.has(monitorName)) {\n      monitors.set(monitorName, {\n        name: monitorName,\n        type: labels.monitor_type || 'http',\n        url: labels.monitor_url || '',\n        monitorId: labels.monitor_id || labels.monitor || '', // Extract monitor ID from labels\n        metrics: {}\n      });\n    }\n\n    const monitor = monitors.get(monitorName)!;\n    monitor.metrics[metricName] = parseFloat(value);\n  }\n\n  // Process monitors into domains\n  for (const monitor of monitors.values()) {\n    const domain = monitor.name.toLowerCase().replace(/[^a-z0-9]/g, '');\n    \n    if (!domains.has(domain)) {\n      domains.set(domain, {\n        domain,\n        displayName: formatNetworkDisplayName(monitor.name),\n        dashboardId: monitor.monitorId, // Include the monitor ID\n        originalName: monitor.name, // Preserve original name for status page\n        avg_uptime_percentage: 0,\n        urls: [],\n        day_uptime: [],\n        hasStatusPage: false\n      });\n    }\n\n    const domainData = domains.get(domain)!;\n\n    // Extract metrics - using the actual metric names from Uptime Kuma\n    const status = monitor.metrics['monitor_status'] || 0; // 1 = UP, 0 = DOWN\n    const responseTime = monitor.metrics['monitor_response_time'] || 0;\n    \n    // Calculate uptime percentage based on actual status\n    const uptimePercentage = status === 1 ? 100 : 0;\n\n    // Add URL data - treating each monitor as a \"Tracking\" endpoint since they're all tracking URLs\n    domainData.urls.push({\n      type: 'Tracking',\n      avg_uptime_percentage: uptimePercentage,\n      avg_response_time: responseTime,\n      hasStatusPage: false\n    });\n\n    // Only include today's data since we don't have historical data\n    const today = new Date().toISOString().split('T')[0];\n    domainData.day_uptime.push({\n      type: 'Tracking',\n      day_uptime: [{\n        date: today,\n        uptime: uptimePercentage / 100\n      }]\n    });\n  }\n\n  // Fetch status page data for each domain and only keep those with status pages\n  const domainsWithStatusPages: Domain[] = [];\n  \n  for (const domain of domains.values()) {\n    // Try multiple variations of the network name for status page\n    const namesToTry = [\n      domain.domain, // normalized name (e.g., \"involveasia\")\n      domain.originalName, // original name from monitor (e.g., \"InvolveAsia\")\n      domain.displayName?.replace(/\\s+/g, '').toLowerCase(), // display name without spaces\n      domain.displayName?.replace(/\\s+/g, '-').toLowerCase(), // display name with hyphens\n    ].filter(name => name); // Remove undefined values\n    \n    let statusPageData = null;\n    for (const networkName of namesToTry) {\n      if (!networkName) continue; // Skip undefined names\n      statusPageData = await fetchStatusPageData(networkName, uptimeKumaUrl);\n      if (statusPageData && statusPageData.heartbeatList && Object.keys(statusPageData.heartbeatList).length > 0) {\n        break;\n      }\n    }\n    \n    if (statusPageData && statusPageData.heartbeatList && Object.keys(statusPageData.heartbeatList).length > 0) {\n      \n      domain.hasStatusPage = true;\n      \n      // Add uptimeList to domain\n      if (statusPageData.uptimeList) {\n        domain.uptimeList = statusPageData.uptimeList;\n      }\n      \n      // Update URLs with status page data\n      domain.urls.forEach(url => {\n        url.hasStatusPage = true;\n        \n        // Add uptimeList to each URL as well\n        if (statusPageData.uptimeList) {\n          url.uptimeList = statusPageData.uptimeList;\n        }\n        \n        // Get heartbeats from all available monitors - each heartbeat should be a separate candle\n        const allHeartbeats: StatusPageHeartbeat[] = [];\n        \n        // Extract all individual heartbeats from all monitors\n        Object.entries(statusPageData.heartbeatList).forEach(([monitorId, heartbeatArray]) => {\n          if (Array.isArray(heartbeatArray)) {\n            // Each heartbeat in the array should be a separate candle\n            heartbeatArray.forEach(heartbeat => {\n              if (heartbeat && typeof heartbeat === 'object' && 'status' in heartbeat) {\n                allHeartbeats.push(heartbeat as StatusPageHeartbeat);\n              }\n            });\n          }\n        });\n        \n        // Sort by time (newest first) and assign to URL\n        url.heartbeats = allHeartbeats.sort((a, b) => \n          new Date(b.time).getTime() - new Date(a.time).getTime()\n        );\n      });\n      \n      domainsWithStatusPages.push(domain);\n    }\n  }\n\n  // Calculate overall domain uptime for domains with status pages\n  domainsWithStatusPages.forEach((domain) => {\n    if (domain.urls.length > 0) {\n      domain.avg_uptime_percentage = domain.urls.reduce((sum, url) => sum + url.avg_uptime_percentage, 0) / domain.urls.length;\n    }\n  });\n\n  // Sort domains by name (displayName) by default\n  domainsWithStatusPages.sort((a, b) => {\n    const nameA = (a.displayName || a.domain).toLowerCase();\n    const nameB = (b.displayName || b.domain).toLowerCase();\n    return nameA.localeCompare(nameB);\n  });\n\n  return domainsWithStatusPages;\n}\n\n\n", "{\n  \"plans\": {\n    \"starter\": {\n      \"id\": \"starter\",\n      \"name\": {\n        \"en\": \"Starter\",\n        \"nl-nl\": \"Starter\"\n      },\n      \"description\": {\n        \"en\": \"Perfect for starters or entrepreneurs working on one domain.\",\n        \"nl-nl\": \"Perfect voor starters of ondernemers die aan \u00E9\u00E9n domein werken.\"\n      },\n      \"price\": {\n        \"monthly\": {\n          \"amount\": 2900,\n          \"currency\": \"USD\",\n          \"symbol\": \"$\"\n        },\n        \"yearly\": {\n          \"amount\": 31900,\n          \"currency\": \"USD\",\n          \"symbol\": \"$\"\n        }\n      },\n      \"billing\": {\n        \"monthly\": {\n          \"en\": \"month\",\n          \"nl-nl\": \"maand\"\n        },\n        \"yearly\": {\n          \"en\": \"year\",\n          \"nl-nl\": \"jaar\"\n        }\n      },\n      \"features\": {\n        \"en\": [\n          \"1 Project\",\n          \"1 Seat\",\n          \"$30 Additional project\",\n          \"Fully Encrypt\",\n          \"Network Uptime Alerts\"\n        ],\n        \"nl-nl\": [\n          \"1 Project\",\n          \"1 Gebruiker\",\n          \"$30 Extra project\",\n          \"Volledig versleuteld\",\n          \"Network Uptime Alerts\"\n        ]\n      },\n      \"stripePriceId\": \"price_starter\",\n      \"popular\": false\n    },\n    \"professional\": {\n      \"id\": \"professional\",\n      \"name\": {\n        \"en\": \"Professional\",\n        \"nl-nl\": \"Professioneel\"\n      },\n      \"description\": {\n        \"en\": \"For those that work in teams or maintain multiple domains.\",\n        \"nl-nl\": \"Voor degenen die in teams werken of meerdere domeinen onderhouden.\"\n      },\n      \"price\": {\n        \"monthly\": {\n          \"amount\": 9900,\n          \"currency\": \"USD\",\n          \"symbol\": \"$\"\n        },\n        \"yearly\": {\n          \"amount\": 108900,\n          \"currency\": \"USD\",\n          \"symbol\": \"$\"\n        }\n      },\n      \"billing\": {\n        \"monthly\": {\n          \"en\": \"month\",\n          \"nl-nl\": \"maand\"\n        },\n        \"yearly\": {\n          \"en\": \"year\",\n          \"nl-nl\": \"jaar\"\n        }\n      },\n      \"features\": {\n        \"en\": [\n          \"1 Project\",\n          \"10 Seat\",\n          \"$20 Additional project\",\n          \"Fully Encrypt\",\n          \"Coupon plugin\",\n          \"Project export\",\n          \"Customer support\",\n          \"Network Uptime Alerts\"\n        ],\n        \"nl-nl\": [\n          \"1 Project\",\n          \"10 Gebruikers\",\n          \"$20 Extra project\",\n          \"Volledig versleuteld\",\n          \"Coupon plugin\",\n          \"Project export\",\n          \"Klantondersteuning\",\n          \"Network Uptime Alerts\"\n        ]\n      },\n      \"stripePriceId\": \"price_professional\",\n      \"popular\": true\n    },\n    \"enterprise\": {\n      \"id\": \"enterprise\",\n      \"name\": {\n        \"en\": \"Enterprise\",\n        \"nl-nl\": \"Enterprise\"\n      },\n      \"description\": {\n        \"en\": \"Perfect for agencies that run multiple sites.\",\n        \"nl-nl\": \"Perfect voor bureaus die meerdere sites beheren.\"\n      },\n      \"price\": {\n        \"monthly\": {\n          \"amount\": 14900,\n          \"currency\": \"USD\",\n          \"symbol\": \"$\"\n        },\n        \"yearly\": {\n          \"amount\": 163900,\n          \"currency\": \"USD\",\n          \"symbol\": \"$\"\n        }\n      },\n      \"billing\": {\n        \"monthly\": {\n          \"en\": \"month\",\n          \"nl-nl\": \"maand\"\n        },\n        \"yearly\": {\n          \"en\": \"year\",\n          \"nl-nl\": \"jaar\"\n        }\n      },\n      \"features\": {\n        \"en\": [\n          \"1 Project\",\n          \"Unlimited seats\",\n          \"$10 Additional project\",\n          \"Fully Encrypt\",\n          \"Coupon plugin\",\n          \"Project export\",\n          \"Customer support\",\n          \"Network Uptime Alerts\"\n        ],\n        \"nl-nl\": [\n          \"1 Project\",\n          \"Onbeperkte gebruikers\",\n          \"$10 Extra project\",\n          \"Volledig versleuteld\",\n          \"Coupon plugin\",\n          \"Project export\",\n          \"Klantondersteuning\",\n          \"Network Uptime Alerts\"\n        ]\n      },\n      \"stripePriceId\": \"price_enterprise\",\n      \"popular\": false\n    }\n  }\n} ", "export const locales = {\n  'en': {\n    label: 'English',\n    country: 'Global',\n    locale: 'en',\n    currency: 'USD',\n    currencySymbol: '$',\n    flag: '\uD83C\uDDFA\uD83C\uDDF8',\n    hreflang: 'en',\n    canonicalBase: 'https://affensus.com',\n  },\n  'nl-nl': {\n    label: 'Nederlands',\n    country: 'Nederland',\n    locale: 'nl-NL',\n    currency: 'EUR',\n    currencySymbol: '\u20AC',\n    flag: '\uD83C\uDDF3\uD83C\uDDF1',\n    hreflang: 'nl-NL',\n    canonicalBase: 'https://affensus.com/nl-nl/',\n  }\n};\n", "import { verifyJwt } from '../../../src/lib/jwt'\nimport pricingPlans from '../../../src/pricing-plans.json'\nimport { locales } from '../../../src/locales/settings'\n\nfunction parseCookies(cookieHeader: string | null): { [key: string]: string } {\n  const cookies: { [key: string]: string } = {}\n  if (!cookieHeader) return cookies\n  \n  cookieHeader.split(';').forEach(cookie => {\n    const [name, value] = cookie.trim().split('=')\n    if (name && value) {\n      cookies[name] = decodeURIComponent(value)\n    }\n  })\n  \n  return cookies\n}\n\nasync function getUserByEmail(db: any, email: string) {\n  return await db.prepare('SELECT * FROM users WHERE email = ?').bind(email).first()\n}\n\nasync function createOrUpdateStripeCustomer(db: any, userId: string, stripeCustomerId: string) {\n  await db.prepare(`\n    UPDATE users \n    SET stripe_customer_id = ?, updated_at = datetime('now')\n    WHERE id = ?\n  `).bind(stripeCustomerId, userId).run()\n}\n\n// Create Stripe checkout session\nexport const onRequest = async (context: { request: Request; env: any }): Promise<Response> => {\n  try {\n    const { request, env } = context\n    const cookies = parseCookies(request.headers.get('Cookie'))\n    const token = cookies['auth-token']\n\n    const jwtSecret = env.JWT_SECRET\n    const stripeSecretKey = env.STRIPE_SECRET_KEY\n\n    if (!jwtSecret || !stripeSecretKey) {\n      return new Response(JSON.stringify({ error: 'Server configuration error' }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    const { priceId, currency = 'USD', email, name, promoCode } = await request.json()\n    \n    // Validate price ID against allowed list\n    const allowedPriceIds = env.STRIPE_ALLOWED_PRICE_IDS?.split(',') || [\n      'price_basic',\n      'price_pro', \n      'price_lifetime'\n    ]\n    \n    // Always allow our internal price IDs\n    allowedPriceIds.push('price_pro', 'price_basic', 'price_lifetime')\n    \n    if (!allowedPriceIds.includes(priceId)) {\n      return new Response(JSON.stringify({ error: 'Invalid price ID' }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    let customerId: string | null = null\n    let userId: string | null = null\n\n    \n\n    // If no customer ID yet (unauthenticated user), let Stripe collect email\n    if (!customerId && email) {\n      // Only create customer if email is provided, otherwise let Stripe handle it\n      // Add location suffix for testing currency conversion\n      let customerEmail = email\n      if (currency === 'TRY') {\n        // Add Turkish location suffix for testing\n        customerEmail = customerEmail.replace('@', '+location_TR@')\n      }\n      \n      const customerResponse = await fetch('https://api.stripe.com/v1/customers', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${stripeSecretKey}`,\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: new URLSearchParams({\n          email: customerEmail,\n          name: name || 'Customer',\n          'metadata[temp_user]': 'true',\n          'metadata[user_id]': userId || 'temp',\n        }),\n      })\n\n      if (!customerResponse.ok) {\n        console.error('Failed to create Stripe customer:', await customerResponse.text())\n        return new Response(JSON.stringify({ error: 'Failed to create customer' }), {\n          status: 500,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n      const customer = await customerResponse.json()\n      customerId = customer.id\n    }\n\n    // Get plan info for dynamic pricing\n    const plans = pricingPlans.plans as { [key: string]: any }\n    let planId = ''\n    let plan = null\n    \n    // Try to find the plan by stripePriceId\n    for (const [id, planData] of Object.entries(plans)) {\n      if (planData.stripePriceId === priceId) {\n        planId = id\n        plan = planData\n        break\n      }\n    }\n    \n    // If plan not found, try to extract plan ID from priceId (fallback)\n    if (!plan) {\n      planId = priceId.replace('price_', '')\n      plan = plans[planId]\n    }\n\n    // Create checkout session\n    const checkoutParams: any = {\n      'payment_method_types[]': 'card',\n      mode: 'payment', // One-time payment instead of subscription\n      success_url: `${env.SITE_URL || 'http://localhost:3000'}/auth/?paid=true&session_id={CHECKOUT_SESSION_ID}`,\n      cancel_url: `${env.SITE_URL || 'http://localhost:3000'}/learn-morse-code/`,\n      'metadata[user_id]': userId || 'temp',\n      'metadata[plan_id]': priceId,\n      'metadata[currency]': currency,\n      'metadata[temp_user]': userId ? 'false' : 'true',\n    }\n    \n    // Set customer or let Stripe collect email\n    if (customerId) {\n      checkoutParams.customer = customerId\n    } else {\n      // Let Stripe collect the email on the checkout page\n      // For currency testing, we can still use customer_email if provided\n      if (currency !== 'USD' && email) {\n        const countryCode = Object.values(locales).find((locale: any) => locale.currency === currency)?.locale?.split('-')[1]?.toUpperCase()\n        if (countryCode) {\n          let testEmail = email\n          testEmail = testEmail.replace('@', `+location_${countryCode}@`)\n          checkoutParams.customer_email = testEmail\n        }\n      }\n    }\n\n    // Determine language based on currency\n    let language = 'en'\n    if (currency === 'TRY') {\n      language = 'tr'\n    }\n    \n    // Get localized description from plan\n    const description = plan?.description?.[language] || plan?.description?.en || 'Morse Code Course'\n    \n    // Use price_data to override description while keeping Adaptive Pricing\n    const basePrice = plan?.price\n    if (!basePrice) {\n      return new Response(JSON.stringify({ error: 'Plan not found' }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n    \n    // Get currency code from settings\n    const currencyCode = Object.values(locales).find((locale: any) => locale.currency === currency)?.currency?.toLowerCase() || currency.toLowerCase()\n    \n    // Use the actual Stripe price ID instead of price_data when we have a promo code\n    // This ensures the promotional code can be applied correctly\n    if (promoCode) {\n      checkoutParams['line_items[0][price]'] = priceId\n      checkoutParams['line_items[0][quantity]'] = '1'\n    } else {\n      // Use price_data for dynamic pricing when no promo code\n      checkoutParams['line_items[0][price_data][currency]'] = currencyCode\n      checkoutParams['line_items[0][price_data][unit_amount]'] = basePrice.amount.toString()\n      checkoutParams['line_items[0][price_data][product_data][name]'] = plan.name?.[language] || plan.name?.en || 'Morse Code Course'\n      checkoutParams['line_items[0][price_data][product_data][description]'] = description\n      checkoutParams['line_items[0][quantity]'] = '1'\n    }\n\n    // Add promotional code if provided\n    if (promoCode) {\n      checkoutParams['discounts[0][promotion_code]'] = promoCode\n    }\n\n    const checkoutResponse = await fetch('https://api.stripe.com/v1/checkout/sessions', {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${stripeSecretKey}`,\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: new URLSearchParams(checkoutParams),\n    })\n\n    if (!checkoutResponse.ok) {\n      console.error('Failed to create checkout session:', await checkoutResponse.text())\n      return new Response(JSON.stringify({ error: 'Failed to create checkout session' }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    const session = await checkoutResponse.json()\n\n    return new Response(JSON.stringify({\n      url: session.url\n    }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    })\n\n  } catch (error) {\n    console.error('Error creating checkout session:', error)\n    return new Response(JSON.stringify({ error: 'Internal server error' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    })\n  }\n} ", "async function verifyJwt(token: string, secret: string): Promise<any> {\n  try {\n    const [headerB64, payloadB64, signatureB64] = token.split('.')\n    \n    const encoder = new TextEncoder()\n    const key = await crypto.subtle.importKey(\n      'raw',\n      encoder.encode(secret),\n      { name: 'HMAC', hash: 'SHA-256' },\n      false,\n      ['verify']\n    )\n    \n    const dataToVerify = encoder.encode(`${headerB64}.${payloadB64}`)\n    const signature = Uint8Array.from(atob(signatureB64.replace(/-/g, '+').replace(/_/g, '/')), c => c.charCodeAt(0))\n    \n    const isValid = await crypto.subtle.verify('HMAC', key, signature, dataToVerify)\n    \n    if (!isValid) {\n      throw new Error('Invalid signature')\n    }\n    \n    const payload = JSON.parse(atob(payloadB64.replace(/-/g, '+').replace(/_/g, '/')))\n    \n    if (payload.exp && payload.exp < Math.floor(Date.now() / 1000)) {\n      throw new Error('Token expired')\n    }\n    \n    return payload\n  } catch (error) {\n    throw new Error('Invalid token')\n  }\n}\n\nfunction parseCookies(cookieHeader: string | null): { [key: string]: string } {\n  const cookies: { [key: string]: string } = {}\n  if (!cookieHeader) return cookies\n  \n  cookieHeader.split(';').forEach(cookie => {\n    const [name, value] = cookie.trim().split('=')\n    if (name && value) {\n      cookies[name] = decodeURIComponent(value)\n    }\n  })\n  \n  return cookies\n}\n\nasync function getUserByEmail(db: any, email: string) {\n  return await db.prepare('SELECT * FROM users WHERE email = ?').bind(email).first()\n}\n\n// Create Stripe customer portal session\nexport const onRequest = async (context: any) => {\n  try {\n    const { request, env } = context\n    const cookies = parseCookies(request.headers.get('Cookie'))\n    const token = cookies['auth-token']\n\n    if (!token) {\n      return new Response(JSON.stringify({ error: 'No authentication token' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    const jwtSecret = env.JWT_SECRET\n    const stripeSecretKey = env.STRIPE_SECRET_KEY\n\n    if (!jwtSecret || !stripeSecretKey) {\n      return new Response(JSON.stringify({ error: 'Server configuration error' }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    try {\n      const decoded = await verifyJwt(token, jwtSecret)\n      \n      const db = env.DB\n      if (!db) {\n        return new Response(JSON.stringify({ error: 'Database not available' }), {\n          status: 500,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n      const user = await getUserByEmail(db, decoded.email)\n      if (!user || !user.stripe_customer_id) {\n        return new Response(JSON.stringify({ error: 'No active subscription found' }), {\n          status: 404,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n      // Create customer portal session\n      const portalResponse = await fetch('https://api.stripe.com/v1/billing_portal/sessions', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${stripeSecretKey}`,\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: new URLSearchParams({\n          customer: user.stripe_customer_id,\n          return_url: `${env.SITE_URL || 'http://localhost:3000'}/profile`,\n        }),\n      })\n\n      if (!portalResponse.ok) {\n        console.error('Failed to create portal session:', await portalResponse.text())\n        return new Response(JSON.stringify({ error: 'Failed to create portal session' }), {\n          status: 500,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n      const session = await portalResponse.json()\n\n      return new Response(JSON.stringify({\n        url: session.url\n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' }\n      })\n\n    } catch (jwtError) {\n      return new Response(JSON.stringify({ error: 'Invalid or expired token' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n  } catch (error) {\n    console.error('Error creating portal session:', error)\n    return new Response(JSON.stringify({ error: 'Internal server error' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    })\n  }\n} ", "import { verifyJwt } from '../../../src/lib/jwt'\nimport { signJwt } from '../../../src/lib/jwt'\n\nfunction parseCookies(cookieHeader: string | null): { [key: string]: string } {\n  if (!cookieHeader) return {}\n  return cookieHeader.split(';').reduce((cookies, cookie) => {\n    const [name, value] = cookie.trim().split('=')\n    if (name && value) {\n      // Handle URL encoding like in /api/user\n      cookies[name] = decodeURIComponent(value)\n    }\n    return cookies\n  }, {} as { [key: string]: string })\n}\n\nasync function getUserByEmail(db: any, email: string) {\n  return await db.prepare('SELECT * FROM users WHERE email = ?').bind(email).first()\n}\n\nasync function createUserAccount(db: any, email: string, loginMethod: string, stripeCustomerId?: string) {\n  const stmt = db.prepare(`\n    INSERT OR IGNORE INTO users (email, preferred_login_method, stripe_customer_id, created_at, updated_at)\n    VALUES (?, ?, ?, datetime('now'), datetime('now'))\n  `)\n  const result = await stmt.bind(email, loginMethod, stripeCustomerId || null).run()\n  \n  // Get the user (either just created or existing)\n  const user = await db.prepare('SELECT * FROM users WHERE email = ?').bind(email).first()\n  \n  // Check if this is a new user by checking if the insert actually happened\n  const isNewUser = result.changes > 0\n  \n  return { user, isNewUser }\n}\n\nasync function updateStripeCustomerId(db: any, email: string, stripeCustomerId: string) {\n  await db.prepare(`\n    UPDATE users \n    SET stripe_customer_id = ?, updated_at = datetime('now')\n    WHERE email = ?\n  `).bind(stripeCustomerId, email).run()\n}\n\n// POST - Create user account for paid users\nexport const onRequest = async (context: { request: Request; env: any }): Promise<Response> => {\n  try {\n    const { request, env } = context\n    const { email, loginMethod, sessionId } = await request.json()\n\n    if (!email || !loginMethod) {\n      return new Response(JSON.stringify({ error: 'Email and login method are required' }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    const db = env.DB\n    if (!db) {\n      return new Response(JSON.stringify({ error: 'Database not available' }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    // If sessionId is provided, try to find the Stripe customer ID\n    let stripeCustomerId: string | null = null\n    if (sessionId) {\n      try {\n        const stripeSecretKey = env.STRIPE_SECRET_KEY\n        if (stripeSecretKey) {\n          const sessionResponse = await fetch(`https://api.stripe.com/v1/checkout/sessions/${sessionId}`, {\n            headers: {\n              'Authorization': `Bearer ${stripeSecretKey}`,\n            },\n          })\n          \n          if (sessionResponse.ok) {\n            const session = await sessionResponse.json()\n            if (session.customer) {\n              stripeCustomerId = session.customer\n            }\n          }\n        }\n      } catch (error) {\n        console.error('Error fetching Stripe session:', error)\n        // Continue without Stripe customer ID\n      }\n    }\n\n    // Create or update user account\n    const { user, isNewUser } = await createUserAccount(db, email.toLowerCase(), loginMethod, stripeCustomerId || undefined)\n\n    // If we found a Stripe customer ID but the user already exists, update it\n    if (stripeCustomerId && !isNewUser) {\n      await updateStripeCustomerId(db, email.toLowerCase(), stripeCustomerId)\n    }\n\n    // Generate JWT token\n    const jwtSecret = env.JWT_SECRET\n    if (!jwtSecret) {\n      return new Response(JSON.stringify({ error: 'JWT secret not configured' }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    const jwtToken = await signJwt(\n      {\n        sub: user.id.toString(),\n        email: user.email,\n        login_method: loginMethod,\n      },\n      jwtSecret,\n      7 * 24 * 60 * 60 // 7 days\n    )\n\n    // Set cookie with appropriate security settings\n    const isProduction = env.SITE_URL?.startsWith('https://') || false\n    const secureFlag = isProduction ? 'Secure; ' : ''\n    \n    const headers = new Headers({\n      'Content-Type': 'application/json',\n      'Set-Cookie': `auth-token=${jwtToken}; HttpOnly; Path=/; ${secureFlag}SameSite=Lax; Max-Age=${7 * 24 * 60 * 60}`\n    })\n\n    return new Response(JSON.stringify({\n      success: true,\n      user: {\n        id: user.id,\n        email: user.email,\n        subscription_status: user.subscription_status\n      },\n      isNewUser\n    }), {\n      status: 200,\n      headers\n    })\n\n  } catch (error) {\n    console.error('Error creating user account:', error)\n    return new Response(JSON.stringify({ error: 'Internal server error' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    })\n  }\n}\n", "import { verifyJwt } from '../../../src/lib/jwt'\n\nasync function handlePaymentWithoutCustomer(db: any, session: any, stripeSecretKey: string, resendApiKey?: string) {\n  try {\n    const { customer_details, amount_total, currency, metadata } = session\n    \n    if (!customer_details?.email) {\n      console.error('No customer email found in session')\n      return\n    }\n\n    const email = customer_details.email.toLowerCase()\n    \n    // Send immediate payment confirmation email\n    if (resendApiKey) {\n      try {\n        await sendPaymentConfirmationEmail(email, {\n          amount: amount_total / 100, // Convert from cents\n          currency: currency.toUpperCase(),\n          sessionId: session.id\n        }, resendApiKey)\n        console.log(`Payment confirmation email sent to: ${email}`)\n      } catch (error) {\n        console.error('Failed to send payment confirmation email:', error)\n      }\n    }\n\n    // Try to find existing user by email\n    let user = await db.prepare('SELECT * FROM users WHERE email = ?').bind(email).first()\n    \n    if (user) {\n      // Existing user - create/update Stripe customer and link\n      console.log(`Found existing user for email: ${email}`)\n      \n      // Create Stripe customer if needed\n      const customerResponse = await fetch('https://api.stripe.com/v1/customers', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${stripeSecretKey}`,\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: new URLSearchParams({\n          email: email,\n          name: customer_details.name || 'Customer',\n          'metadata[user_id]': user.id.toString(),\n          'metadata[session_id]': session.id,\n        }),\n      })\n\n      if (customerResponse.ok) {\n        const customer = await customerResponse.json()\n        \n        // Update user with Stripe customer ID\n        await db.prepare(`\n          UPDATE users \n          SET stripe_customer_id = ?, updated_at = datetime('now')\n          WHERE id = ?\n        `).bind(customer.id, user.id).run()\n        \n        // Process subscription update\n        await updateUserSubscription(db, customer.id, session)\n        await createInvoiceRecord(db, customer.id, session, stripeSecretKey)\n        \n        console.log(`Linked payment to existing user ${user.id} with new customer ${customer.id}`)\n      }\n    } else {\n      // New user - store payment info for when they sign up\n      console.log(`No existing user found for email: ${email} - storing payment for later linking`)\n      \n      // Store pending payment info\n      await db.prepare(`\n        INSERT INTO pending_payments (\n          email, session_id, amount_total, currency, customer_name,\n          created_at\n        ) VALUES (?, ?, ?, ?, ?, datetime('now'))\n      `).bind(\n        email,\n        session.id,\n        amount_total,\n        currency,\n        customer_details.name || 'Customer'\n      ).run()\n      \n      console.log(`Stored pending payment for email: ${email}`)\n    }\n  } catch (error) {\n    console.error('Error handling payment without customer:', error)\n  }\n}\n\nasync function sendPaymentConfirmationEmail(email: string, payment: any, resendApiKey: string) {\n  const emailResponse = await fetch('https://api.resend.com/emails', {\n    method: 'POST',\n    headers: {\n      'Authorization': `Bearer ${resendApiKey}`,\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      from: 'noreply@email.morsexpress.com',\n      to: email,\n      subject: 'Payment Confirmation - MorseXpress',\n      html: `\n        <h2>Payment Confirmation</h2>\n        <p>Thank you for your payment!</p>\n        <p><strong>Amount:</strong> ${payment.currency} ${payment.amount}</p>\n        <p><strong>Session ID:</strong> ${payment.sessionId}</p>\n        <p>To access your purchase, please create an account or sign in with this email address.</p>\n        <p><a href=\"https://morsexpress.com/auth?paid=true&session_id=${payment.sessionId}\">Complete Your Account Setup</a></p>\n      `,\n    }),\n  })\n\n  if (!emailResponse.ok) {\n    throw new Error(`Failed to send email: ${await emailResponse.text()}`)\n  }\n}\n\nasync function updateUserSubscription(db: any, customerId: string, paymentData: any) {\n  const { id, status, amount_total, currency, metadata } = paymentData\n  \n  // Determine plan from metadata or payment amount\n  let planId = metadata?.plan_id || 'basic'\n  let subscriptionStatus = 'free'\n  \n  // Map payment amounts to plans\n  if (amount_total === 1999) planId = 'basic'\n  else if (amount_total === 3999) planId = 'pro'\n  else if (amount_total === 7900) planId = 'lifetime'\n  \n  // Set subscription status based on plan\n  if (planId === 'basic') subscriptionStatus = 'basic'\n  else if (planId === 'pro') subscriptionStatus = 'active'\n  else if (planId === 'lifetime') subscriptionStatus = 'lifetime'\n\n  await db.prepare(`\n    UPDATE users \n    SET \n      subscription_status = ?, \n      subscription_expires_at = datetime('now', '+1 year'),\n      updated_at = datetime('now')\n    WHERE stripe_customer_id = ?\n  `).bind(subscriptionStatus, customerId).run()\n}\n\nasync function createInvoiceRecord(db: any, customerId: string, paymentData: any, stripeSecretKey?: string) {\n  // Get user ID from customer ID\n  let user = await db.prepare('SELECT id, email, first_name, last_name FROM users WHERE stripe_customer_id = ?').bind(customerId).first()\n  \n  if (!user && stripeSecretKey) {\n    // Fallback: try to find user by email from Stripe customer\n    try {\n      const customerResponse = await fetch(`https://api.stripe.com/v1/customers/${customerId}`, {\n        headers: {\n          'Authorization': `Bearer ${stripeSecretKey}`,\n        },\n      })\n      \n      if (customerResponse.ok) {\n        const customer = await customerResponse.json()\n        if (customer.email) {\n          // Try to find user by email\n          user = await db.prepare('SELECT id, email, first_name, last_name FROM users WHERE email = ?').bind(customer.email.toLowerCase()).first()\n          \n          if (user) {\n            // Update user with the correct Stripe customer ID\n            await db.prepare(`\n              UPDATE users \n              SET stripe_customer_id = ?, updated_at = datetime('now')\n              WHERE id = ?\n            `).bind(customerId, user.id).run()\n            \n            console.log(`Linked existing user ${user.id} to Stripe customer ${customerId}`)\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Error fetching Stripe customer for fallback:', error)\n    }\n  }\n  \n  if (!user) {\n    console.error('User not found for Stripe customer:', customerId)\n    return\n  }\n\n  // Check if user has billing address\n  const billingAddress = await db.prepare(`\n    SELECT * FROM user_billing_addresses WHERE user_id = ?\n  `).bind(user.id).first()\n\n  if (!billingAddress) {\n    console.log(`User ${user.id} has no billing address, payment will be processed when address is added`)\n    return\n  }\n\n  // Import invoice generator functions\n  const { createInvoiceRecord: generateInvoice } = await import('../../../src/lib/invoice-generator.js')\n\n  const {\n    id,\n    amount_total,\n    currency,\n    description,\n    metadata\n  } = paymentData\n\n  // Format user name\n  const userName = user.first_name && user.last_name \n    ? `${user.first_name} ${user.last_name}`.trim()\n    : 'Customer'\n\n  // Prepare invoice data\n  const invoiceData = {\n    userId: user.id,\n    userEmail: user.email,\n    userName,\n    stripeCustomerId: customerId,\n    stripeInvoiceId: id || `session_${Date.now()}`,\n    amountPaid: amount_total || 0,\n    currency: currency || 'usd',\n    description: description || 'Premium Plan Purchase',\n    billingAddress: {\n      line1: billingAddress.line1,\n      line2: billingAddress.line2,\n      city: billingAddress.city,\n      state: billingAddress.state,\n      postalCode: billingAddress.postal_code,\n      country: billingAddress.country,\n      addressType: billingAddress.address_type,\n      companyName: billingAddress.company_name,\n      taxIdType: billingAddress.tax_id_type,\n      taxIdNumber: billingAddress.tax_id_number\n    }\n  }\n\n  // Generate invoice with sequential number and proper billing snapshot\n  await generateInvoice(db, invoiceData)\n}\n\nasync function verifyStripeSignature(payload: string, signature: string, secret: string): Promise<boolean> {\n  try {\n    const elements = signature.split(',')\n    let timestamp = ''\n    let v1 = ''\n\n    for (const element of elements) {\n      const [key, value] = element.split('=')\n      if (key === 't') timestamp = value\n      if (key === 'v1') v1 = value\n    }\n\n    if (!timestamp || !v1) return false\n\n    // Create the signed payload\n    const signedPayload = `${timestamp}.${payload}`\n    \n    // Create HMAC\n    const encoder = new TextEncoder()\n    const key = await crypto.subtle.importKey(\n      'raw',\n      encoder.encode(secret),\n      { name: 'HMAC', hash: 'SHA-256' },\n      false,\n      ['sign']\n    )\n    \n    const signature_buffer = await crypto.subtle.sign('HMAC', key, encoder.encode(signedPayload))\n    const signature_array = new Uint8Array(signature_buffer)\n    const signature_hex = Array.from(signature_array)\n      .map(b => b.toString(16).padStart(2, '0'))\n      .join('')\n\n    return signature_hex === v1\n  } catch (error) {\n    console.error('Error verifying Stripe signature:', error)\n    return false\n  }\n}\n\n// Handle Stripe webhooks\nexport const onRequest = async (context: { request: Request; env: any }): Promise<Response> => {\n  try {\n    const { request, env } = context\n    \n    const stripeWebhookSecret = env.STRIPE_WEBHOOK_SECRET\n    if (!stripeWebhookSecret) {\n      console.error('STRIPE_WEBHOOK_SECRET not configured')\n      return new Response('Webhook secret not configured', { status: 500 })\n    }\n\n    const body = await request.text()\n    const signature = request.headers.get('stripe-signature')\n\n    if (!signature) {\n      console.error('Missing Stripe signature')\n      return new Response('Missing signature', { status: 400 })\n    }\n\n    // Verify webhook signature\n    const isValid = await verifyStripeSignature(body, signature, stripeWebhookSecret)\n    if (!isValid) {\n      console.error('Invalid Stripe signature')\n      return new Response('Invalid signature', { status: 400 })\n    }\n\n    const event = JSON.parse(body)\n    console.log('Stripe webhook event:', event.type)\n\n    const db = env.DB\n    if (!db) {\n      console.error('Database not available')\n      return new Response('Database error', { status: 500 })\n    }\n\n    try {\n      switch (event.type) {\n        case 'checkout.session.completed': {\n          const session = event.data.object\n          if (session.payment_status === 'paid') {\n            if (session.customer) {\n              await updateUserSubscription(db, session.customer, session)\n              await createInvoiceRecord(db, session.customer, session, env.STRIPE_SECRET_KEY)\n              console.log(`Payment completed for customer: ${session.customer}`)\n            } else {\n              console.log('Payment completed but no customer ID - creating customer from session data')\n              await handlePaymentWithoutCustomer(db, session, env.STRIPE_SECRET_KEY, env.RESEND_API_KEY)\n            }\n          }\n          break\n        }\n\n        case 'payment_intent.succeeded': {\n          const paymentIntent = event.data.object\n          if (paymentIntent.status === 'succeeded') {\n            if (paymentIntent.customer) {\n              await updateUserSubscription(db, paymentIntent.customer, paymentIntent)\n              await createInvoiceRecord(db, paymentIntent.customer, paymentIntent, env.STRIPE_SECRET_KEY)\n              console.log(`Payment succeeded for customer: ${paymentIntent.customer}`)\n            } else {\n              console.log('Payment succeeded but no customer ID - cannot process without customer')\n            }\n          }\n          break\n        }\n\n        case 'payment_intent.payment_failed': {\n          const paymentIntent = event.data.object\n          console.log(`Payment failed for customer: ${paymentIntent.customer}`)\n          // Could send email notification here\n          break\n        }\n\n        case 'invoice.payment_succeeded':\n        case 'invoice.payment_failed': {\n          const invoice = event.data.object\n          await createInvoiceRecord(db, invoice.customer, invoice)\n          console.log(`Recorded invoice ${invoice.id} for customer: ${invoice.customer}`)\n          break\n        }\n\n        case 'checkout.session.expired': {\n          const session = event.data.object\n          console.log(`Checkout session expired: ${session.id}`)\n          // Could add analytics tracking or reminder emails here in the future\n          break\n        }\n\n        default:\n          console.log(`Unhandled event type: ${event.type}`)\n      }\n\n      return new Response(JSON.stringify({ received: true }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' }\n      })\n\n    } catch (dbError) {\n      console.error('Database error processing webhook:', dbError)\n      return new Response('Database error', { status: 500 })\n    }\n\n  } catch (error) {\n    console.error('Error processing Stripe webhook:', error)\n    return new Response('Webhook error', { status: 500 })\n  }\n} ", "import { verifyJwt } from '../../../src/lib/jwt'\n\nexport async function onRequestOptions() {\n  return new Response(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n    },\n  })\n}\n\nexport async function onRequestGet(context: any) {\n  try {\n    const { request, env, params } = context\n    const invoiceNumber = params.invoiceNumber\n    \n    // Get JWT token from cookie\n    const cookieHeader = request.headers.get('Cookie')\n    let token: string | null = null\n    \n    if (cookieHeader) {\n      const cookies = cookieHeader.split('; ')\n      const authCookie = cookies.find((c: string) => c.startsWith('auth-token='))\n      if (authCookie) {\n        // Handle URL encoding like in /api/user\n        const encodedToken = authCookie.split('=')[1]\n        token = decodeURIComponent(encodedToken)\n      }\n    }\n\n    if (!token) {\n      return new Response(JSON.stringify({ error: 'No authentication token' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    const jwtSecret = env.JWT_SECRET\n    if (!jwtSecret) {\n      return new Response(JSON.stringify({ error: 'JWT secret not configured' }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    try {\n      const payload = await verifyJwt(token, jwtSecret)\n      if (!payload) {\n        return new Response(JSON.stringify({ error: 'Invalid token' }), {\n          status: 401,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n      const db = env.DB\n      if (!db) {\n        return new Response(JSON.stringify({ error: 'Database not available' }), {\n          status: 500,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n      // Get invoice by number and verify user ownership\n      const invoice = await db.prepare(`\n        SELECT * FROM stripe_invoices \n        WHERE invoice_number = ? AND user_id = ?\n      `).bind(invoiceNumber, payload.sub).first()\n\n      if (!invoice) {\n        return new Response(JSON.stringify({ error: 'Invoice not found' }), {\n          status: 404,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n      // Get URL parameters to determine response format\n      const url = new URL(request.url)\n      const format = url.searchParams.get('format') || 'json'\n\n      if (format === 'pdf') {\n        // Generate HTML content for PDF conversion\n        const htmlContent = generateInvoiceHTML(invoice)\n        \n        // For now, we'll return the HTML with PDF headers to trigger browser PDF generation\n        // In production, you might want to use a PDF generation service like Puppeteer or jsPDF\n        return new Response(htmlContent, {\n          status: 200,\n          headers: {\n            'Content-Type': 'text/html',\n            'Content-Disposition': `inline; filename=\"${invoice.invoice_number}.html\"`\n          }\n        })\n      } else {\n        // Return invoice data as JSON\n        return new Response(JSON.stringify({\n          invoice: {\n            invoiceNumber: invoice.invoice_number,\n            invoiceType: invoice.invoice_type,\n            invoiceDate: invoice.invoice_date,\n            dueDate: invoice.due_date,\n            status: invoice.status,\n            description: invoice.description,\n            billingName: invoice.billing_name,\n            billingEmail: invoice.billing_email,\n            billingAddress: {\n              line1: invoice.billing_address_line1,\n              line2: invoice.billing_address_line2,\n              city: invoice.billing_city,\n              state: invoice.billing_state,\n              postalCode: invoice.billing_postal_code,\n              country: invoice.billing_country\n            },\n            amounts: {\n              subtotal: invoice.subtotal_amount,\n              taxRate: invoice.tax_rate,\n              taxAmount: invoice.tax_amount,\n              taxDescription: invoice.tax_description,\n              total: invoice.total_amount,\n              currency: invoice.currency\n            },\n            creditNoteForInvoiceId: invoice.credit_note_for_invoice_id,\n            createdAt: invoice.created_at\n          }\n        }), {\n          status: 200,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n    } catch (jwtError) {\n      return new Response(JSON.stringify({ error: 'Invalid or expired token' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n  } catch (error) {\n    console.error('Error retrieving invoice:', error)\n    return new Response(JSON.stringify({ \n      error: \"Internal server error\" \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    })\n  }\n}\n\n/**\n * Generates a professional HTML invoice for Affensus Limited / MorseXpress\n * This HTML is designed to be easily convertible to PDF via browser print or PDF services\n */\nfunction generateInvoiceHTML(invoice: any): string {\n  const isCredit = invoice.invoice_type === 'credit_note'\n  const amountPrefix = isCredit ? '-' : ''\n  const documentTitle = isCredit ? 'CREDIT NOTE' : 'INVOICE'\n  \n  // Format amounts with proper currency display\n  const formatAmount = (amount: number) => {\n    const formatted = Math.abs(amount / 100).toFixed(2)\n    return `${amountPrefix}$${formatted} ${(invoice.currency || 'USD').toUpperCase()}`\n  }\n  \n  const html = `\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\">\n    <title>${documentTitle} ${invoice.invoice_number}</title>\n    <style>\n        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap');\n        \n        * { box-sizing: border-box; }\n        \n        body { \n            font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif; \n            margin: 0; \n            padding: 40px; \n            color: #1a1a1a;\n            line-height: 1.6;\n            font-size: 14px;\n        }\n        \n        .invoice-container {\n            max-width: 800px;\n            margin: 0 auto;\n            background: white;\n        }\n        \n        /* Header Section */\n        .header {\n            display: flex;\n            justify-content: space-between;\n            align-items: flex-start;\n            padding-bottom: 30px;\n            border-bottom: 3px solid #2563eb;\n            margin-bottom: 40px;\n        }\n        \n        .company-info {\n            flex: 1;\n        }\n        \n        .company-logo {\n            display: flex;\n            align-items: center;\n            margin-bottom: 20px;\n        }\n        \n        .company-name {\n            font-size: 28px;\n            font-weight: 700;\n            color: #2563eb;\n            margin-bottom: 8px;\n        }\n        \n        .company-tagline {\n            font-size: 16px;\n            color: #6b7280;\n            font-weight: 500;\n            margin-bottom: 20px;\n        }\n        \n        .company-details {\n            font-size: 13px;\n            color: #374151;\n            line-height: 1.8;\n        }\n        \n        .company-details strong {\n            font-weight: 600;\n            color: #1f2937;\n        }\n        \n        .document-info {\n            text-align: right;\n            flex-shrink: 0;\n            margin-left: 40px;\n        }\n        \n        .document-title {\n            font-size: 36px;\n            font-weight: 700;\n            color: ${isCredit ? '#dc2626' : '#2563eb'};\n            margin-bottom: 10px;\n            letter-spacing: -0.5px;\n        }\n        \n        .document-subtitle {\n            font-size: 14px;\n            color: #6b7280;\n            margin-bottom: 20px;\n        }\n        \n        .document-meta {\n            background: ${isCredit ? '#fef2f2' : '#eff6ff'};\n            padding: 20px;\n            border-radius: 8px;\n            border-left: 4px solid ${isCredit ? '#dc2626' : '#2563eb'};\n        }\n        \n        .document-meta-row {\n            display: flex;\n            justify-content: space-between;\n            margin-bottom: 8px;\n        }\n        \n        .document-meta-row:last-child {\n            margin-bottom: 0;\n        }\n        \n        .meta-label {\n            font-weight: 500;\n            color: #374151;\n        }\n        \n        .meta-value {\n            font-weight: 600;\n            color: #1f2937;\n        }\n        \n        /* Billing Section */\n        .billing-section {\n            display: flex;\n            justify-content: space-between;\n            margin: 40px 0;\n            gap: 40px;\n        }\n        \n        .billing-from, .billing-to {\n            flex: 1;\n        }\n        \n        .billing-header {\n            font-size: 16px;\n            font-weight: 600;\n            color: #1f2937;\n            margin-bottom: 15px;\n            text-transform: uppercase;\n            letter-spacing: 0.5px;\n        }\n        \n        .billing-details {\n            background: #f9fafb;\n            padding: 20px;\n            border-radius: 8px;\n            border: 1px solid #e5e7eb;\n        }\n        \n        .billing-name {\n            font-weight: 600;\n            color: #1f2937;\n            font-size: 16px;\n            margin-bottom: 8px;\n        }\n        \n        .billing-address {\n            color: #374151;\n            line-height: 1.7;\n        }\n        \n        /* Line Items */\n        .line-items {\n            margin: 40px 0;\n        }\n        \n        .line-items-header {\n            font-size: 18px;\n            font-weight: 600;\n            color: #1f2937;\n            margin-bottom: 20px;\n        }\n        \n        .items-table {\n            width: 100%;\n            border-collapse: collapse;\n            border-radius: 8px;\n            overflow: hidden;\n            box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n        }\n        \n        .items-table th {\n            background: #f9fafb;\n            padding: 16px;\n            text-align: left;\n            font-weight: 600;\n            color: #374151;\n            text-transform: uppercase;\n            letter-spacing: 0.5px;\n            font-size: 12px;\n            border-bottom: 1px solid #e5e7eb;\n        }\n        \n        .items-table td {\n            padding: 16px;\n            border-bottom: 1px solid #e5e7eb;\n            color: #1f2937;\n        }\n        \n        .items-table .amount-cell {\n            text-align: right;\n            font-weight: 600;\n            font-family: 'SF Mono', Monaco, 'Cascadia Code', monospace;\n        }\n        \n        .credit-amount {\n            color: #dc2626;\n        }\n        \n        /* Totals Section */\n        .totals-section {\n            margin-top: 40px;\n            display: flex;\n            justify-content: flex-end;\n        }\n        \n        .totals-table {\n            width: 350px;\n        }\n        \n        .total-row {\n            display: flex;\n            justify-content: space-between;\n            padding: 12px 0;\n            border-bottom: 1px solid #e5e7eb;\n        }\n        \n        .total-row:last-child {\n            border-bottom: none;\n            border-top: 3px solid #2563eb;\n            padding-top: 16px;\n            margin-top: 8px;\n            font-weight: 700;\n            font-size: 18px;\n        }\n        \n        .total-label {\n            color: #374151;\n        }\n        \n        .total-amount {\n            font-family: 'SF Mono', Monaco, 'Cascadia Code', monospace;\n            font-weight: 600;\n            color: #1f2937;\n        }\n        \n        .final-total .total-amount {\n            color: ${isCredit ? '#dc2626' : '#2563eb'};\n        }\n        \n        /* Footer */\n        .footer {\n            margin-top: 60px;\n            padding-top: 30px;\n            border-top: 2px solid #e5e7eb;\n            display: flex;\n            justify-content: space-between;\n            align-items: flex-end;\n        }\n        \n        .footer-left {\n            flex: 1;\n        }\n        \n        .footer-note {\n            font-size: 14px;\n            color: #6b7280;\n            line-height: 1.6;\n            margin-bottom: 20px;\n        }\n        \n        .footer-legal {\n            font-size: 11px;\n            color: #9ca3af;\n            line-height: 1.5;\n        }\n        \n        .footer-right {\n            text-align: right;\n            margin-left: 40px;\n        }\n        \n        .signature-section {\n            margin-bottom: 20px;\n        }\n        \n        .signature-label {\n            font-size: 12px;\n            color: #6b7280;\n            margin-bottom: 10px;\n            text-transform: uppercase;\n            letter-spacing: 0.5px;\n        }\n        \n        .signature-placeholder {\n            width: 200px;\n            height: 60px;\n            border-bottom: 1px solid #d1d5db;\n            position: relative;\n        }\n        \n        .authorized-signature {\n            font-size: 11px;\n            color: #9ca3af;\n            margin-top: 5px;\n        }\n        \n        /* Print Styles */\n        @media print {\n            body { margin: 0; padding: 20px; }\n            .invoice-container { box-shadow: none; }\n            .print-controls { display: none !important; }\n            .header { border-bottom: 2px solid #000 !important; }\n            .document-title { color: #000 !important; }\n            .company-name { color: #000 !important; }\n        }\n        \n        /* Print Controls */\n        .print-controls {\n            position: fixed;\n            top: 20px;\n            right: 20px;\n            z-index: 1000;\n            background: white;\n            padding: 15px;\n            border-radius: 8px;\n            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n            border: 1px solid #e5e7eb;\n        }\n        \n        .print-button {\n            background: #2563eb;\n            color: white;\n            border: none;\n            padding: 12px 24px;\n            border-radius: 6px;\n            font-weight: 600;\n            cursor: pointer;\n            margin-right: 10px;\n            font-family: inherit;\n        }\n        \n        .print-button:hover {\n            background: #1d4ed8;\n        }\n        \n        .close-button {\n            background: #6b7280;\n            color: white;\n            border: none;\n            padding: 12px 24px;\n            border-radius: 6px;\n            font-weight: 600;\n            cursor: pointer;\n            font-family: inherit;\n        }\n        \n        .close-button:hover {\n            background: #4b5563;\n        }\n        \n        /* Credit Note Specific Styles */\n        .credit-notice {\n            background: #fef2f2;\n            border: 1px solid #fecaca;\n            border-radius: 8px;\n            padding: 16px;\n            margin: 30px 0;\n            color: #991b1b;\n            font-weight: 500;\n        }\n    </style>\n</head>\n<body>\n    <!-- Print Controls -->\n    <div class=\"print-controls\">\n        <button class=\"print-button\" onclick=\"window.print()\">Print / Save as PDF</button>\n        <button class=\"close-button\" onclick=\"window.close()\">Close</button>\n    </div>\n    \n    <div class=\"invoice-container\">\n        <!-- Header -->\n        <div class=\"header\">\n            <div class=\"company-info\">\n                <div class=\"company-logo\">\n                    <!-- Logo would go here -->\n                </div>\n                <div class=\"company-name\">MorseXpress</div>\n                <div class=\"company-tagline\">Master Morse Code Faster</div>\n                <div class=\"company-details\">\n                    <strong>Affensus Limited</strong><br>\n                    UNIT B, 3/F., KAI WAN HOUSE,<br>\n                    146 TUNG CHOI STREET,<br>\n                    MONGKOK, KLN<br>\n                    Hong Kong<br><br>\n                    <strong>Company Registration:</strong> 76782638-000-07-24-4\n                </div>\n            </div>\n            \n            <div class=\"document-info\">\n                <div class=\"document-title\">${documentTitle}</div>\n                <div class=\"document-subtitle\">${isCredit ? 'Refund Credit Note' : 'Payment Invoice'}</div>\n                <div class=\"document-meta\">\n                    <div class=\"document-meta-row\">\n                        <span class=\"meta-label\">${documentTitle} #:</span>\n                        <span class=\"meta-value\">${invoice.invoice_number}</span>\n                    </div>\n                    <div class=\"document-meta-row\">\n                        <span class=\"meta-label\">Date:</span>\n                        <span class=\"meta-value\">${new Date(invoice.invoice_date || invoice.created_at).toLocaleDateString('en-US', { \n                          year: 'numeric', month: 'long', day: 'numeric' \n                        })}</span>\n                    </div>\n                    <div class=\"document-meta-row\">\n                        <span class=\"meta-label\">Due Date:</span>\n                        <span class=\"meta-value\">${new Date(invoice.due_date || invoice.created_at).toLocaleDateString('en-US', { \n                          year: 'numeric', month: 'long', day: 'numeric' \n                        })}</span>\n                    </div>\n                    <div class=\"document-meta-row\">\n                        <span class=\"meta-label\">Status:</span>\n                        <span class=\"meta-value\">${(invoice.status || 'PAID').toUpperCase()}</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        ${isCredit ? `\n        <div class=\"credit-notice\">\n            <strong>\u26A0\uFE0F Credit Note Notice:</strong> This document represents a refund issued for your original purchase. \n            The refund amount will be credited back to your original payment method within 3-5 business days.\n        </div>\n        ` : ''}\n        \n        <!-- Billing Information -->\n        <div class=\"billing-section\">\n            <div class=\"billing-from\">\n                <div class=\"billing-header\">From</div>\n                <div class=\"billing-details\">\n                    <div class=\"billing-name\">Affensus Limited</div>\n                    <div class=\"billing-address\">\n                        UNIT B, 3/F., KAI WAN HOUSE<br>\n                        146 TUNG CHOI STREET<br>\n                        MONGKOK, KLN<br>\n                        Hong Kong<br><br>\n                        <strong>Registration:</strong> 76782638-000-07-24-4<br>\n                        <strong>Contact:</strong> support@morsexpress.com\n                    </div>\n                </div>\n            </div>\n            \n            <div class=\"billing-to\">\n                <div class=\"billing-header\">Bill To</div>\n                <div class=\"billing-details\">\n                    <div class=\"billing-name\">${invoice.billing_name || 'Customer'}</div>\n                    <div class=\"billing-address\">\n                        ${invoice.billing_email || ''}<br>\n                        ${invoice.billing_address_line1 || ''}<br>\n                        ${invoice.billing_address_line2 ? invoice.billing_address_line2 + '<br>' : ''}\n                        ${invoice.billing_city || ''}, ${invoice.billing_state || ''} ${invoice.billing_postal_code || ''}<br>\n                        ${invoice.billing_country || ''}\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <!-- Line Items -->\n        <div class=\"line-items\">\n            <div class=\"line-items-header\">Items & Services</div>\n            <table class=\"items-table\">\n                <thead>\n                    <tr>\n                        <th style=\"width: 70%;\">Description</th>\n                        <th style=\"width: 30%;\" class=\"amount-cell\">Amount</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr>\n                        <td>\n                            <strong>${invoice.description || 'MorseXpress Premium Subscription'}</strong><br>\n                            <span style=\"color: #6b7280; font-size: 13px;\">\n                                ${isCredit ? 'Refund for premium subscription purchase' : 'One-time payment for premium features and content'}\n                            </span>\n                        </td>\n                        <td class=\"amount-cell ${isCredit ? 'credit-amount' : ''}\">\n                            ${formatAmount(invoice.subtotal_amount || invoice.total_amount || invoice.amount_paid)}\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n        \n        <!-- Totals -->\n        <div class=\"totals-section\">\n            <div class=\"totals-table\">\n                <div class=\"total-row\">\n                    <span class=\"total-label\">Subtotal:</span>\n                    <span class=\"total-amount ${isCredit ? 'credit-amount' : ''}\">\n                        ${formatAmount(invoice.subtotal_amount || invoice.total_amount || invoice.amount_paid)}\n                    </span>\n                </div>\n                <div class=\"total-row\">\n                    <span class=\"total-label\">Tax (${(invoice.tax_rate || 0)}%):</span>\n                    <span class=\"total-amount ${isCredit ? 'credit-amount' : ''}\">\n                        ${formatAmount(invoice.tax_amount || 0)}\n                    </span>\n                </div>\n                ${invoice.tax_description ? `\n                <div class=\"total-row\" style=\"border: none; padding: 4px 0; font-size: 12px;\">\n                    <span class=\"total-label\" style=\"color: #6b7280;\">${invoice.tax_description}</span>\n                    <span></span>\n                </div>\n                ` : ''}\n                <div class=\"total-row final-total\">\n                    <span class=\"total-label\">Total:</span>\n                    <span class=\"total-amount ${isCredit ? 'credit-amount' : ''}\">\n                        ${formatAmount(invoice.total_amount || invoice.amount_paid)}\n                    </span>\n                </div>\n            </div>\n        </div>\n        \n        <!-- Footer -->\n        <div class=\"footer\">\n            <div class=\"footer-left\">\n                <div class=\"footer-note\">\n                    ${isCredit ? \n                      `<strong>Refund processed successfully.</strong> We're sorry to see you go! Your refund will be credited back to your original payment method within 3-5 business days.` :\n                      `Thank you for choosing MorseXpress! Your payment enables us to continue providing quality Morse code education and tools.`\n                    }\n                </div>\n                <div class=\"footer-legal\">\n                    This ${documentTitle.toLowerCase()} was generated on ${new Date().toLocaleDateString('en-US', { \n                      year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit' \n                    })}.<br>\n                    ${isCredit ? 'This is an official credit note for refund processing.' : 'This is an official invoice for services rendered.'}<br>\n                    Affensus Limited \u2022 Hong Kong Company Registration: 76782638-000-07-24-4\n                </div>\n            </div>\n            \n            <div class=\"footer-right\">\n                <div class=\"signature-section\">\n                    <div class=\"signature-label\">Authorized Signature</div>\n                    <div class=\"signature-placeholder\"></div>\n                    <div class=\"authorized-signature\">Affensus Limited</div>\n                </div>\n            </div>\n        </div>\n    </div>\n</body>\n</html>`\n  \n  return html\n}\n", "// User data API - using external API server\nexport async function onRequestOptions() {\n  return new Response(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n    },\n  });\n}\n\n// GET /api/users/[userId] - Get user data by user ID\nexport async function onRequestGet(context: { request: Request; env: any; params: any }) {\n  try {\n    const { request, env, params } = context;\n    const userId = params.userId;\n    \n    if (!userId) {\n      return new Response(JSON.stringify({\n        success: false,\n        error: 'User ID is required'\n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    // Use external API instead of D1\n    const bearerToken = env.AFFENSUS_CREDENTIALS_PASSWORD;\n    if (!bearerToken) {\n      throw new Error('AFFENSUS_CREDENTIALS_PASSWORD not configured');\n    }\n\n    console.log('Making API request to:', `https://apiv2.affensus.com/api/users/${userId}`);\n    console.log('Headers:', {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${bearerToken.substring(0, 8)}...`\n    });\n\n    let response;\n    try {\n      response = await fetch(`https://apiv2.affensus.com/api/users/${userId}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${bearerToken}`,\n        },\n      });\n    } catch (fetchError) {\n      console.error('Fetch error:', fetchError);\n      const errorMessage = fetchError instanceof Error ? fetchError.message : 'Unknown fetch error';\n      throw new Error(`Network error: ${errorMessage}`);\n    }\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('API Response Error:', {\n        status: response.status,\n        statusText: response.statusText,\n        body: errorText\n      });\n      throw new Error(`External API error: ${response.status} ${response.statusText} - ${errorText}`);\n    }\n\n    const data = await response.json();\n    \n    return new Response(JSON.stringify({\n      success: true,\n      data: data\n    }), {\n      status: 200,\n      headers: { \n        'Content-Type': 'application/json',\n        'Cache-Control': 'private, max-age=300, s-maxage=0' // 5 minutes cache for user data\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching user data:', error);\n    return new Response(JSON.stringify({\n      success: false,\n      error: 'Failed to fetch user data'\n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\n", "export async function onRequestPost(context: any) {\n  try {\n    const { request, env } = context\n    const { name, email, message } = await request.json()\n\n    // Validate input\n    if (!name || !email || !message) {\n      return new Response(JSON.stringify({ error: \"Missing required fields\" }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    // Validate email format\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n    if (!emailRegex.test(email)) {\n      return new Response(JSON.stringify({ error: \"Invalid email format\" }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    // Basic spam protection\n    if (message.length > 5000) {\n      return new Response(JSON.stringify({ error: \"Message too long\" }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    // Log the contact submission (in production, you'd send an email or save to database)\n    console.log(`Contact form submission from ${email}:`, {\n      name,\n      email,\n      message: message.substring(0, 100) + (message.length > 100 ? '...' : '')\n    })\n\n    // TODO: Implement actual email sending or database storage\n    // For now, we'll just return success\n\n    return new Response(JSON.stringify({ \n      message: \"Thank you for your message. We'll get back to you soon!\" \n    }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    })\n\n  } catch (error) {\n    console.error('Error processing contact form:', error)\n    return new Response(JSON.stringify({ error: \"Internal server error\" }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    })\n  }\n} ", "export async function onRequestOptions() {\n  return new Response(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n    },\n  });\n}\n\n// GET /api/credential-schemas - Get all available network credential schemas\nexport async function onRequestGet(context: { request: Request; env: any }) {\n  try {\n    const { request, env } = context;\n\n    // Use external API instead of D1\n    const bearerToken = env.AFFENSUS_CREDENTIALS_PASSWORD;\n    if (!bearerToken) {\n      throw new Error('AFFENSUS_CREDENTIALS_PASSWORD not configured');\n    }\n\n    let response;\n    try {\n      response = await fetch('https://apiv2.affensus.com/api/credential-schemas', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${bearerToken}`,\n        },\n      });\n    } catch (fetchError) {\n      console.error('Fetch error:', fetchError);\n      const errorMessage = fetchError instanceof Error ? fetchError.message : 'Unknown fetch error';\n      throw new Error(`Network error: ${errorMessage}`);\n    }\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('API Response Error:', {\n        status: response.status,\n        statusText: response.statusText,\n        body: errorText\n      });\n      throw new Error(`External API error: ${response.status} ${response.statusText} - ${errorText}`);\n    }\n\n    const data = await response.json();\n    \n    return new Response(JSON.stringify({\n      success: true,\n      data: data\n    }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    });\n\n  } catch (error) {\n    console.error('Error fetching credential schemas:', error);\n    return new Response(JSON.stringify({\n      success: false,\n      error: error instanceof Error ? error.message : 'Internal server error'\n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n", "export async function onRequestOptions() {\n  return new Response(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'POST, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n    },\n  });\n}\n\nexport async function onRequestPost(context: any) {\n  const { request, env } = context;\n\n  try {\n    // Get auth token from header\n    const authHeader = request.headers.get('Authorization');\n    if (!authHeader || !authHeader.startsWith('Bearer ')) {\n      return new Response(JSON.stringify({ \n        success: false, \n        error: 'Authentication required' \n      }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    // Get encrypted credentials from request body\n    const body = await request.json();\n    const { encryptedCredentials } = body;\n\n    if (!encryptedCredentials) {\n      return new Response(JSON.stringify({ \n        success: false, \n        error: 'Encrypted credentials required' \n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    // Get decryption password\n    const password = env.AFFENSUS_CREDENTIALS_PASSWORD;\n    if (!password) {\n      return new Response(JSON.stringify({ \n        success: false, \n        error: 'Decryption key not configured' \n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    // Import CryptoJS and decrypt\n    const CryptoJS = await import('crypto-js');\n    \n    let decryptedCredentials = {};\n    try {\n      console.log('Attempting to decrypt credentials...');\n      console.log('Encrypted data length:', encryptedCredentials.length);\n      console.log('First 50 chars:', encryptedCredentials.substring(0, 50));\n      \n      const bytes = CryptoJS.AES.decrypt(encryptedCredentials, password);\n      const decryptedString = bytes.toString(CryptoJS.enc.Utf8);\n      \n      console.log('Decrypted string length:', decryptedString.length);\n      \n      if (!decryptedString) {\n        throw new Error('Decryption resulted in empty string');\n      }\n      \n      decryptedCredentials = JSON.parse(decryptedString);\n      console.log('Successfully decrypted and parsed credentials');\n    } catch (decryptError) {\n      console.error('Decryption failed:', decryptError);\n      return new Response(JSON.stringify({ \n        success: false, \n        error: 'Failed to decrypt credentials' \n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    return new Response(JSON.stringify({ \n      success: true, \n      data: decryptedCredentials\n    }), {\n      status: 200,\n      headers: { \n        'Content-Type': 'application/json',\n        'Cache-Control': 'no-cache, no-store, must-revalidate'\n      }\n    });\n\n  } catch (error) {\n    console.error('Error decrypting credentials:', error);\n    return new Response(JSON.stringify({ \n      success: false, \n      error: 'Internal server error' \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n", "interface ImportNetworkRequest {\n  credential_id: string;\n}\n\ninterface ImportNetworkResponse {\n  job_id: string;\n  queue_position: number;\n  message: string;\n}\n\nexport async function onRequestOptions() {\n  return new Response(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'POST, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n    },\n  });\n}\n\nexport async function onRequestPost(context: { request: Request; env: any }) {\n  try {\n    const { request, env } = context;\n    const body = await request.json() as ImportNetworkRequest;\n    \n    if (!body.credential_id) {\n      return new Response(JSON.stringify({ error: 'credential_id is required' }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' },\n      });\n    }\n\n    const bearerToken = env.AFFENSUS_CREDENTIALS_PASSWORD;\n    if (!bearerToken) {\n      throw new Error('AFFENSUS_CREDENTIALS_PASSWORD not configured');\n    }\n\n    console.log('Sending import network request:', body);\n\n    // Call the apiv2 endpoint\n    const response = await fetch('https://apiv2.affensus.com/api/import-network', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${bearerToken}`,\n      },\n      body: JSON.stringify(body),\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('Import network API error:', response.status, response.statusText, errorText);\n      return new Response(JSON.stringify({ error: 'Failed to start import job', details: errorText }), {\n        status: response.status,\n        headers: { 'Content-Type': 'application/json' },\n      });\n    }\n\n    const data = await response.json() as ImportNetworkResponse;\n    console.log('Import network response:', data);\n\n    return new Response(JSON.stringify(data), {\n      status: 200,\n      headers: {\n        'Content-Type': 'application/json',\n        'Cache-Control': 'no-store, max-age=0',\n      },\n    });\n  } catch (error) {\n    console.error('Import network error:', error);\n    return new Response(JSON.stringify({ error: 'Internal server error' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' },\n    });\n  }\n};\n", "export async function onRequestOptions() {\n  return new Response(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'POST, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n    },\n  });\n}\n\nexport async function onRequestPost(context: { request: Request; env: any }) {\n  try {\n    const { request, env } = context;\n    \n    const requestBody = await request.json();\n    const { url } = requestBody;\n\n    if (!url) {\n      return new Response(JSON.stringify({\n        success: false,\n        error: 'URL is required'\n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    const bearerToken = env.AFFENSUS_CREDENTIALS_PASSWORD;\n    if (!bearerToken) {\n      throw new Error('AFFENSUS_CREDENTIALS_PASSWORD not configured');\n    }\n\n    const apiUrl = `https://apiv2.affensus.com/api/get-logo`;\n\n    const response = await fetch(apiUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${bearerToken}`,\n      },\n      body: JSON.stringify({ url }),\n    });\n\n    console.log('url', JSON.stringify({ url }));\n    console.log('response', response);\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      throw new Error(`External API error: ${response.status} ${response.statusText} - ${errorText}`);\n    }\n\n    const data = await response.json();\n\n    return new Response(JSON.stringify({\n      success: true,\n      data: data\n    }), {\n      status: 200,\n      headers: {\n        'Content-Type': 'application/json',\n        'Cache-Control': 'private, max-age=0, s-maxage=0'\n      }\n    });\n  } catch (error) {\n    console.error('Error fetching logo:', error);\n    return new Response(JSON.stringify({\n      success: false,\n      error: 'Failed to fetch logo'\n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n", "export async function onRequestPost(context: any) {\n  const { env } = context\n  \n  // Set cookie clearing with appropriate security settings\n  const isProduction = env.SITE_URL?.startsWith('https://') || false\n  const secureFlag = isProduction ? 'Secure; ' : ''\n  const clearCookieHeader = `auth-token=; HttpOnly; ${secureFlag}SameSite=Lax; Max-Age=0; Path=/`\n  \n  console.log('\uD83D\uDEAA Clearing auth cookie:', clearCookieHeader)\n  \n  const response = new Response(JSON.stringify({ message: 'Logged out successfully' }), {\n    status: 200,\n    headers: { 'Content-Type': 'application/json' }\n  })\n\n  // Clear the auth cookie\n  response.headers.set('Set-Cookie', clearCookieHeader)\n\n  return response\n} ", "async function signJwt(payload: any, secret: string, expiresIn: number): Promise<string> {\n  const header = { alg: 'HS256', typ: 'JWT' }\n  const now = Math.floor(Date.now() / 1000)\n  const exp = now + expiresIn\n  \n  const jwtPayload = { ...payload, iat: now, exp }\n  \n  const encoder = new TextEncoder()\n  const key = await crypto.subtle.importKey(\n    'raw',\n    encoder.encode(secret),\n    { name: 'HMAC', hash: 'SHA-256' },\n    false,\n    ['sign']\n  )\n  \n  const headerB64 = btoa(JSON.stringify(header)).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_')\n  const payloadB64 = btoa(JSON.stringify(jwtPayload)).replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_')\n  \n  const signatureArrayBuffer = await crypto.subtle.sign(\n    'HMAC',\n    key,\n    encoder.encode(`${headerB64}.${payloadB64}`)\n  )\n  \n  const signatureB64 = btoa(String.fromCharCode(...new Uint8Array(signatureArrayBuffer)))\n    .replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_')\n  \n  return `${headerB64}.${payloadB64}.${signatureB64}`\n}\n\nasync function getMagicLinkByToken(token: string, apiKey: string) {\n  try {\n    const response = await fetch(`https://apiv2.affensus.com/api/auth/magic-link/${token}`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${apiKey}`,\n        'Content-Type': 'application/json',\n      },\n    })\n\n    if (!response.ok) {\n      if (response.status === 404) {\n        return null // Magic link not found\n      }\n      throw new Error(`API error: ${response.status}`)\n    }\n\n    const data = await response.json()\n    \n    // Check if magic link is valid (not used and not expired)\n    if (data.used || new Date(data.expires_at) <= new Date()) {\n      return null\n    }\n\n    return data\n  } catch (error) {\n    console.error('Error fetching magic link:', error)\n    return null\n  }\n}\n\nasync function markMagicLinkAsUsed(token: string, apiKey: string) {\n  try {\n    const response = await fetch(`https://apiv2.affensus.com/api/auth/magic-link/${token}/use`, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Bearer ${apiKey}`,\n        'Content-Type': 'application/json',\n      },\n    })\n\n    if (!response.ok) {\n      throw new Error(`Failed to mark magic link as used: ${response.status}`)\n    }\n\n    return true\n  } catch (error) {\n    console.error('Error marking magic link as used:', error)\n    return false\n  }\n}\n\nasync function getUserByEmail(email: string, apiKey: string) {\n  try {\n    const response = await fetch(`https://apiv2.affensus.com/api/auth/user/email/${encodeURIComponent(email)}`, {\n      method: 'GET',\n      headers: {\n        'Authorization': `Bearer ${apiKey}`,\n        'Content-Type': 'application/json',\n      },\n    })\n\n    if (!response.ok) {\n      if (response.status === 404) {\n        return null // User not found\n      }\n      throw new Error(`API error: ${response.status}`)\n    }\n\n    return await response.json()\n  } catch (error) {\n    console.error('Error fetching user by email:', error)\n    return null\n  }\n}\n\nasync function updatePreferredLoginMethod(email: string, method: string, apiKey: string) {\n  try {\n    const response = await fetch(`https://apiv2.affensus.com/api/auth/user/preferred-login-method`, {\n      method: 'PUT',\n      headers: {\n        'Authorization': `Bearer ${apiKey}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        email: email,\n        method: method\n      }),\n    })\n\n    if (!response.ok) {\n      throw new Error(`Failed to update login method: ${response.status}`)\n    }\n\n    return true\n  } catch (error) {\n    console.error('Error updating preferred login method:', error)\n    return false\n  }\n}\n\nasync function processPendingPayments(email: string, userId: number, stripeSecretKey?: string) {\n  try {\n    // Note: This function still contains D1 database calls for pending payments\n    // This will need to be migrated to the API as well in a future update\n    console.log(`Processing pending payments for user ${userId} (${email})`)\n    \n    // TODO: Migrate pending payments to external API\n    // For now, we'll skip this functionality to avoid D1 dependencies\n    \n  } catch (error) {\n    console.error('Error processing pending payments:', error)\n  }\n}\n\nexport async function onRequestGet(context: any) {\n  try {\n    const { request, env } = context\n    const url = new URL(request.url)\n    const token = url.searchParams.get('token')\n\n    if (!token) {\n      return new Response(null, {\n        status: 302,\n        headers: { 'Location': `${env.SITE_URL || 'http://localhost:3000'}/auth?error=missing_token` }\n      })\n    }\n\n    // Get API key from environment\n    const apiKey = env.AFFENSUS_CREDENTIALS_PASSWORD\n    if (!apiKey) {\n      return new Response(null, {\n        status: 302,\n        headers: { 'Location': `${env.SITE_URL || 'http://localhost:3000'}/auth?error=api_not_configured` }\n      })\n    }\n\n    try {\n      // Find magic link via API\n      const magicLink = await getMagicLinkByToken(token, apiKey)\n      \n      if (!magicLink) {\n        return new Response(null, {\n          status: 302,\n          headers: { 'Location': `${env.SITE_URL || 'http://localhost:3000'}/auth?error=invalid_or_expired_token` }\n        })\n      }\n\n      // Mark magic link as used via API\n      const markedAsUsed = await markMagicLinkAsUsed(token, apiKey)\n      if (!markedAsUsed) {\n        console.error('Failed to mark magic link as used')\n        // Continue anyway to avoid blocking the user\n      }\n\n      // Get user via API\n      const user = await getUserByEmail(magicLink.email, apiKey)\n      if (!user) {\n        return new Response(null, {\n          status: 302,\n          headers: { 'Location': `${env.SITE_URL || 'http://localhost:3000'}/auth?error=user_not_found` }\n        })\n      }\n\n      // Update user's preferred login method via API\n      const loginMethodUpdated = await updatePreferredLoginMethod(user.email, 'magic_link', apiKey)\n      if (!loginMethodUpdated) {\n        console.error('Failed to update preferred login method')\n        // Continue anyway to avoid blocking the user\n      }\n\n      // Check for pending payments after user login\n      await processPendingPayments(user.email, user.id, env.STRIPE_SECRET_KEY)\n\n      // Generate JWT token\n      const jwtSecret = env.JWT_SECRET\n      if (!jwtSecret) {\n        return new Response(null, {\n          status: 302,\n          headers: { 'Location': `${env.SITE_URL || 'http://localhost:3000'}/auth?error=jwt_not_configured` }\n        })\n      }\n\n      const jwtToken = await signJwt(\n        {\n          sub: user.id.toString(),\n          email: user.email,\n          login_method: 'magic_link',\n        },\n        jwtSecret,\n        7 * 24 * 60 * 60 // 7 days\n      )\n\n      // Create HTML response with localStorage and redirect\n      const html = `\n        <!DOCTYPE html>\n        <html>\n        <head>\n          <title>Redirecting...</title>\n        </head>\n        <body>\n          <script>\n            localStorage.setItem('lastLoginMethod', 'magic_link');\n            localStorage.setItem('lastLoginTime', new Date().toISOString());\n            window.location.href = '${env.SITE_URL || 'http://localhost:3000'}/auth';\n          </script>\n          <p>Redirecting...</p>\n        </body>\n        </html>\n      `\n      \n      // Set cookie with appropriate security settings\n      const isProduction = env.SITE_URL?.startsWith('https://') || false\n      const cookieFlags = `HttpOnly; ${isProduction ? 'Secure; ' : ''}SameSite=Lax; Max-Age=${7 * 24 * 60 * 60}; Path=/`\n      const cookieHeader = `auth-token=${jwtToken}; ${cookieFlags}`\n      \n      console.log('\uD83C\uDF6A Setting cookie:', cookieHeader)\n      console.log('\uD83D\uDD11 JWT Token (first 20 chars):', jwtToken.substring(0, 20))\n      console.log('\uD83D\uDCCD Is Production:', isProduction)\n      \n      return new Response(html, {\n        status: 200,\n        headers: {\n          'Content-Type': 'text/html',\n          'Set-Cookie': cookieHeader\n        },\n      })\n\n    } catch (apiError) {\n      console.error('API error:', apiError)\n      return new Response(null, {\n        status: 302,\n        headers: { 'Location': `${env.SITE_URL || 'http://localhost:3000'}/auth?error=api_error` }\n      })\n    }\n\n  } catch (error) {\n    console.error('Error processing magic login:', error)\n    return new Response(null, {\n      status: 302,\n      headers: { 'Location': `${context.env.SITE_URL || 'http://localhost:3000'}/auth?error=internal_error` }\n    })\n  }\n} ", "export async function onRequestPost(context: any) {\n  try {\n    const { request, env } = context\n    const { \n      category, \n      word, \n      morseCode, \n      description, \n      userEmail,\n      locale = 'en'\n    } = await request.json()\n\n    // Validate required fields\n    if (!category || !word || !description) {\n      return new Response(JSON.stringify({ \n        error: \"Missing required fields\" \n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    // Validate category\n    const validCategories = [\n      'animals', 'basic-needs', 'colors', 'commands', 'communication',\n      'countries', 'emergency', 'family-friends', 'farewells', 'fashion',\n      'feel-good-words', 'feelings', 'food-drink', 'greetings',\n      'inspirational-motivational', 'internet-slang', 'military-tactical',\n      'nature', 'navigation', 'occupations', 'questions', 'responses',\n      'romantic-personal', 'sports-games', 'tattoo', 'technology',\n      'travel-transport', 'tv-games', 'weather'\n    ]\n\n    if (!validCategories.includes(category)) {\n      return new Response(JSON.stringify({ \n        error: \"Invalid category\" \n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    // Basic validation\n    if (description.length > 1000) {\n      return new Response(JSON.stringify({ \n        error: \"Description too long (max 1000 characters)\" \n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    // Log the mistake report (in production, you'd save to database or send notification)\n    console.log(`Mistake report for ${category}/${word}:`, {\n      category,\n      word,\n      morseCode,\n      description: description.substring(0, 100) + (description.length > 100 ? '...' : ''),\n      userEmail,\n      locale,\n      timestamp: new Date().toISOString()\n    })\n\n    // TODO: Implement actual database storage or notification system\n    // For now, we'll just return success\n\n    return new Response(JSON.stringify({ \n      message: \"Thank you for reporting this issue. We'll review it and make corrections if necessary.\" \n    }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    })\n\n  } catch (error) {\n    console.error('Error processing mistake report:', error)\n    return new Response(JSON.stringify({ \n      error: \"Internal server error\" \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    })\n  }\n} ", "// Network monitors API - using external API server\nexport async function onRequestOptions() {\n  return new Response(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n    },\n  });\n}\n\n// GET /api/network-monitors - Get all monitors for a user\nexport async function onRequestGet(context: { request: Request; env: any }) {\n  try {\n    const { request, env } = context;\n    const url = new URL(request.url);\n    \n    // Get user ID from query params (you'll need to implement auth)\n    const userId = url.searchParams.get('userId') || 'demo-user';\n    \n    // Use external API instead of D1\n    const bearerToken = env.AFFENSUS_CREDENTIALS_PASSWORD;\n    if (!bearerToken) {\n      throw new Error('AFFENSUS_CREDENTIALS_PASSWORD not configured');\n    }\n\n    console.log('Making API request to:', 'https://apiv2.affensus.com/api/network-monitors');\n    console.log('Headers:', {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${bearerToken.substring(0, 8)}...`\n    });\n    \n    // Test if the API server is reachable\n    try {\n      const testResponse = await fetch('https://apiv2.affensus.com/health', { method: 'GET' });\n      console.log('Health check response:', testResponse.status);\n    } catch (healthError) {\n      console.log('Health check failed:', healthError);\n    }\n\n    let response;\n    try {\n      response = await fetch(`https://apiv2.affensus.com/api/network-monitors?user_id=${encodeURIComponent(userId)}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${bearerToken}`,\n        },\n      });\n    } catch (fetchError) {\n      console.error('Fetch error:', fetchError);\n      const errorMessage = fetchError instanceof Error ? fetchError.message : 'Unknown fetch error';\n      throw new Error(`Network error: ${errorMessage}`);\n    }\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('API Response Error:', {\n        status: response.status,\n        statusText: response.statusText,\n        body: errorText\n      });\n      throw new Error(`External API error: ${response.status} ${response.statusText} - ${errorText}`);\n    }\n\n    const data = await response.json();\n    \n    // Ensure data is an array for the frontend\n    const monitorsArray = Array.isArray(data) ? data : (data.monitors || data.data || []);\n    \n    return new Response(JSON.stringify({\n      success: true,\n      data: monitorsArray\n    }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  } catch (error) {\n    console.error('Error fetching network monitors:', error);\n    return new Response(JSON.stringify({\n      success: false,\n      error: 'Failed to fetch network monitors'\n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\n// POST /api/network-monitors - Create a new monitor\nexport async function onRequestPost(context: { request: Request; env: any }) {\n  try {\n    const { request, env } = context;\n    const body = await request.json();\n    \n    // Validate required fields\n    if (!body.user_id || (!body.domain && !body.dashboard_id)) {\n      return new Response(JSON.stringify({\n        success: false,\n        error: 'user_id and either domain or dashboard_id are required'\n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    // Use external API instead of D1\n    const bearerToken = env.AFFENSUS_CREDENTIALS_PASSWORD;\n    if (!bearerToken) {\n      throw new Error('AFFENSUS_CREDENTIALS_PASSWORD not configured');\n    }\n\n    console.log('Making API request to:', 'https://apiv2.affensus.com/api/network-monitors');\n    console.log('Request body:', { \n      user_id: body.user_id, \n      domain: body.domain,\n      dashboard_id: body.dashboard_id || body.domain \n    });\n    console.log('Headers:', {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${bearerToken.substring(0, 8)}...`\n    });\n\n    let response;\n    try {\n      response = await fetch('https://apiv2.affensus.com/api/network-monitors', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${bearerToken}`,\n        },\n        body: JSON.stringify({\n          user_id: body.user_id,\n          domain: body.domain,\n          dashboard_id: body.dashboard_id || body.domain // Use dashboard_id if provided, otherwise fallback to domain\n        }),\n      });\n    } catch (fetchError) {\n      console.error('Fetch error:', fetchError);\n      const errorMessage = fetchError instanceof Error ? fetchError.message : 'Unknown fetch error';\n      throw new Error(`Network error: ${errorMessage}`);\n    }\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('API Response Error:', {\n        status: response.status,\n        statusText: response.statusText,\n        body: errorText\n      });\n      throw new Error(`External API error: ${response.status} ${response.statusText} - ${errorText}`);\n    }\n\n    const data = await response.json();\n    \n    return new Response(JSON.stringify({\n      success: true,\n      data: data\n    }), {\n      status: 201,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  } catch (error) {\n    console.error('Error creating network monitor:', error);\n    return new Response(JSON.stringify({\n      success: false,\n      error: 'Failed to create network monitor'\n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\n// PUT /api/network-monitors - Update a monitor\nexport async function onRequestPut(context: { request: Request; env: any }) {\n  try {\n    const { request, env } = context;\n    const body = await request.json();\n    \n    // Validate required fields\n    if (!body.id || !body.user_id) {\n      return new Response(JSON.stringify({\n        success: false,\n        error: 'id and user_id are required'\n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    // Use external API instead of D1\n    const bearerToken = env.AFFENSUS_CREDENTIALS_PASSWORD;\n    if (!bearerToken) {\n      throw new Error('AFFENSUS_CREDENTIALS_PASSWORD not configured');\n    }\n\n    const response = await fetch(`https://apiv2.affensus.com/api/network-monitors/${body.id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${bearerToken}`,\n      },\n      body: JSON.stringify({\n        user_id: body.user_id,\n        enabled: body.enabled,\n        display_name: body.display_name,\n        notification_enabled: body.notification_enabled,\n        check_interval_minutes: body.check_interval_minutes\n      }),\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('API Response Error:', {\n        status: response.status,\n        statusText: response.statusText,\n        body: errorText\n      });\n      throw new Error(`External API error: ${response.status} ${response.statusText} - ${errorText}`);\n    }\n\n    const data = await response.json();\n    \n    return new Response(JSON.stringify({\n      success: true,\n      data: data\n    }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  } catch (error) {\n    console.error('Error updating network monitor:', error);\n    return new Response(JSON.stringify({\n      success: false,\n      error: 'Failed to update network monitor'\n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n\n// DELETE /api/network-monitors - Delete a monitor\nexport async function onRequestDelete(context: { request: Request; env: any }) {\n  try {\n    const { request, env } = context;\n    const body = await request.json();\n    \n    // Validate required fields\n    if (!body.id || !body.user_id) {\n      return new Response(JSON.stringify({\n        success: false,\n        error: 'id and user_id are required'\n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    // Use external API instead of D1\n    const bearerToken = env.AFFENSUS_CREDENTIALS_PASSWORD;\n    if (!bearerToken) {\n      throw new Error('AFFENSUS_CREDENTIALS_PASSWORD not configured');\n    }\n\n    const response = await fetch(`https://apiv2.affensus.com/api/network-monitors/${body.id}`, {\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${bearerToken}`,\n      },\n      body: JSON.stringify({\n        user_id: body.user_id\n      }),\n    });\n\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('API Response Error:', {\n        status: response.status,\n        statusText: response.statusText,\n        body: errorText\n      });\n      throw new Error(`External API error: ${response.status} ${response.statusText} - ${errorText}`);\n    }\n\n    const data = await response.json();\n    \n    return new Response(JSON.stringify({\n      success: true,\n      message: 'Monitor deleted successfully'\n    }), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  } catch (error) {\n    console.error('Error deleting network monitor:', error);\n    return new Response(JSON.stringify({\n      success: false,\n      error: 'Failed to delete network monitor'\n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n", "import { verifyJwt } from '../../../src/lib/jwt'\n\n// Parse cookies from header (same as /api/user)\nfunction parseCookies(cookieHeader: string | null): { [key: string]: string } {\n  const cookies: { [key: string]: string } = {}\n  if (!cookieHeader) return cookies\n  \n  const cookiePairs = cookieHeader.split('; ')\n  for (const cookie of cookiePairs) {\n    const [name, ...rest] = cookie.split('=')\n    if (name && rest.length > 0) {\n      // Handle URL encoding like in /api/user\n      const value = rest.join('=') // Handle values with = signs\n      cookies[name] = decodeURIComponent(value)\n    }\n  }\n  \n  return cookies\n}\n\nasync function getUserById(db: any, userId: string) {\n  return await db.prepare('SELECT * FROM users WHERE id = ?').bind(userId).first()\n}\n\nasync function updateUser(db: any, userId: string, data: any) {\n  const { firstName, lastName } = data\n  \n  await db.prepare(`\n    UPDATE users \n    SET first_name = ?, last_name = ?, updated_at = datetime('now')\n    WHERE id = ?\n  `).bind(firstName, lastName, userId).run()\n  \n  return await getUserById(db, userId)\n}\n\n// GET - Get user profile\nexport async function onRequestGet(context: any) {\n  try {\n    const { request, env } = context\n    const cookies = parseCookies(request.headers.get('Cookie'))\n    const token = cookies['auth-token']\n\n    if (!token) {\n      return new Response(JSON.stringify({ error: 'No authentication token' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    const jwtSecret = env.JWT_SECRET\n    if (!jwtSecret) {\n      return new Response(JSON.stringify({ error: 'JWT secret not configured' }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    try {\n      const decoded = await verifyJwt(token, jwtSecret)\n      \n      if (!decoded) {\n        return new Response(JSON.stringify({ error: 'Invalid or expired token' }), {\n          status: 401,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n      \n      const db = env.DB\n      if (!db) {\n        return new Response(JSON.stringify({ error: 'Database not available' }), {\n          status: 500,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n      const user = await getUserById(db, decoded.sub)\n      if (!user) {\n        return new Response(JSON.stringify({ error: 'User not found' }), {\n          status: 404,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n      // Format user data for frontend\n      const userProfile = {\n        id: user.id.toString(),\n        email: user.email,\n        firstName: user.first_name,\n        lastName: user.last_name,\n        avatarUrl: user.avatar_url,\n        subscriptionStatus: user.subscription_status || 'free',\n        stripeCustomerId: user.stripe_customer_id,\n        subscriptionExpiresAt: user.subscription_expires_at,\n        trialEndsAt: user.trial_ends_at,\n        createdAt: user.created_at,\n        updatedAt: user.updated_at\n      }\n\n      return new Response(JSON.stringify({\n        user: userProfile\n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' }\n      })\n\n    } catch (jwtError) {\n      return new Response(JSON.stringify({ error: 'Invalid or expired token' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n  } catch (error) {\n    console.error('Error getting user profile:', error)\n    return new Response(JSON.stringify({ error: 'Internal server error' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    })\n  }\n}\n\n// PUT - Update user profile\nexport async function onRequestPut(context: any) {\n  try {\n    const { request, env } = context\n    \n    const cookies = parseCookies(request.headers.get('Cookie'))\n    const token = cookies['auth-token']\n\n    if (!token) {\n      return new Response(JSON.stringify({ error: 'No authentication token' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    const jwtSecret = env.JWT_SECRET\n    if (!jwtSecret) {\n      return new Response(JSON.stringify({ error: 'JWT secret not configured' }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    try {\n      const decoded = await verifyJwt(token, jwtSecret)\n      if (!decoded) {\n        return new Response(JSON.stringify({ error: 'Invalid token' }), {\n          status: 401,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n      const updateData = await request.json()\n      \n      const db = env.DB\n      if (!db) {\n        return new Response(JSON.stringify({ error: 'Database not available' }), {\n          status: 500,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n      const updatedUser = await updateUser(db, decoded.sub, updateData)\n      if (!updatedUser) {\n        return new Response(JSON.stringify({ error: 'Failed to update user' }), {\n          status: 500,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n      // Format user data for frontend\n      const userProfile = {\n        id: updatedUser.id.toString(),\n        email: updatedUser.email,\n        firstName: updatedUser.first_name,\n        lastName: updatedUser.last_name,\n        avatarUrl: updatedUser.avatar_url,\n        subscriptionStatus: updatedUser.subscription_status || 'free',\n        stripeCustomerId: updatedUser.stripe_customer_id,\n        subscriptionExpiresAt: updatedUser.subscription_expires_at,\n        trialEndsAt: updatedUser.trial_ends_at,\n        createdAt: updatedUser.created_at,\n        updatedAt: updatedUser.updated_at\n      }\n\n      return new Response(JSON.stringify({\n        user: userProfile\n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' }\n      })\n\n    } catch (jwtError) {\n      return new Response(JSON.stringify({ error: 'Invalid or expired token' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n  } catch (error) {\n    console.error('Error updating user profile:', error)\n    return new Response(JSON.stringify({ error: 'Internal server error' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    })\n  }\n} ", "export async function onRequestOptions() {\n  return new Response(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'POST, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n    },\n  });\n}\n\nexport async function onRequestPost(context: any) {\n  const { request, env } = context;\n\n  try {\n    // Use the same environment variable for both encryption and API auth\n    const password = env.AFFENSUS_CREDENTIALS_PASSWORD;\n    if (!password) {\n      return new Response(JSON.stringify({ \n        success: false, \n        error: 'AFFENSUS_CREDENTIALS_PASSWORD not configured' \n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    const body = await request.json();\n    const { project_id } = body;\n\n    if (!project_id) {\n      return new Response(JSON.stringify({ \n        success: false, \n        error: 'project_id is required' \n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    const apiUrl = 'https://apiv2.affensus.com/api/refresh-published';\n\n    const requestPayload = { \n      projectId: project_id\n    };\n\n    console.log('Sending to apiv2:', JSON.stringify(requestPayload, null, 2));\n\n    const apiv2Response = await fetch(apiUrl, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${password}`, // Using same password as bearer token\n      },\n      body: JSON.stringify(requestPayload)\n    });\n\n    if (!apiv2Response.ok) {\n      const errorText = await apiv2Response.text();\n      console.error('apiv2 error response:', errorText);\n      console.error('apiv2 status:', apiv2Response.status, apiv2Response.statusText);\n      return new Response(JSON.stringify({ \n        success: false, \n        error: `External API error: ${apiv2Response.status} ${apiv2Response.statusText}`,\n        details: errorText\n      }), {\n        status: apiv2Response.status,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    const responseData = await apiv2Response.json();\n\n    // Map the response to match our Statistics interface\n    const mappedResponse = {\n      success: responseData.success,\n      message: responseData.message,\n      linkRot: {\n        totalCount: responseData.totalCount,\n        validCount: responseData.validCount,\n        brokenLinks: responseData.brokenLinks || [], // Use the actual broken links data from the API\n        unmatchedCount: responseData.unmatchedCount,\n        inactiveNetworks: responseData.inactiveNetworks\n      },\n      stoppedLinks: responseData.invalidCount + responseData.unmatchedCount\n    };\n\n    return new Response(JSON.stringify(mappedResponse), {\n      status: 200,\n      headers: { 'Content-Type': 'application/json' }\n    });\n\n  } catch (error) {\n    console.error('Error refreshing published links:', error);\n    return new Response(JSON.stringify({ \n      success: false, \n      error: 'Internal server error' \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    });\n  }\n}\n", "// API endpoint for refreshing wishlist\nexport async function onRequestOptions() {\n  return new Response(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'POST, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n    }\n  });\n}\n\nasync function verifyJwt(token: string, secret: string): Promise<any> {\n  try {\n    const [headerB64, payloadB64, signatureB64] = token.split('.')\n    \n    // Decode and verify\n    const encoder = new TextEncoder()\n    const key = await crypto.subtle.importKey(\n      'raw',\n      encoder.encode(secret),\n      { name: 'HMAC', hash: 'SHA-256' },\n      false,\n      ['verify']\n    )\n    \n    const dataToVerify = encoder.encode(`${headerB64}.${payloadB64}`)\n    const signature = Uint8Array.from(atob(signatureB64.replace(/-/g, '+').replace(/_/g, '/')), c => c.charCodeAt(0))\n    \n    const isValid = await crypto.subtle.verify('HMAC', key, signature, dataToVerify)\n    \n    if (!isValid) {\n      throw new Error('Invalid signature')\n    }\n    \n    const payload = JSON.parse(atob(payloadB64.replace(/-/g, '+').replace(/_/g, '/')))\n    \n    // Check expiration\n    if (payload.exp && payload.exp < Math.floor(Date.now() / 1000)) {\n      throw new Error('Token expired')\n    }\n    \n    return payload\n  } catch (error) {\n    throw new Error('Invalid token')\n  }\n}\n\nfunction parseCookies(cookieHeader: string | null): Record<string, string> {\n  const cookies: Record<string, string> = {}\n  \n  if (!cookieHeader) {\n    return cookies\n  }\n  \n  cookieHeader.split('; ').forEach(cookie => {\n    const [name, value] = cookie.split('=')\n    if (name && value) {\n      cookies[name] = decodeURIComponent(value)\n    }\n  })\n  \n  return cookies\n}\n\nexport interface RefreshWishlistRequest {\n  projectId: string;\n  sendNotification: boolean;\n}\n\nexport interface RefreshWishlistResponse {\n  success: boolean;\n  message: string;\n  newCount: number;\n  counts: {\n    \"Approved\": number;\n    \"Pending\": number;\n    \"Not joined\": number;\n    \"Suspended\": number;\n  };\n  wishlistInfo: Array<{\n    wishlist_name: string;\n    wishlist_url: string;\n    project_unique_identifier: string;\n    status: string;\n    clean_name: string;\n    display_url: string;\n    program_id: string;\n    network_name: string;\n    network_id: number;\n    match_type: string;\n  }>;\n}\n\n// POST /api/refresh-wishlist - Refresh wishlist for a project\nexport async function onRequestPost(context: { request: Request; env: any }) {\n  try {\n    const { request, env } = context;\n    const body = await request.json() as RefreshWishlistRequest;\n    \n    // Validate required fields\n    if (!body.projectId) {\n      return new Response(JSON.stringify({\n        success: false,\n        error: 'projectId is required'\n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    // Get JWT token from cookie\n    const cookieHeader = request.headers.get('Cookie');\n    let token: string | null = null;\n    \n    if (cookieHeader) {\n      const cookies = cookieHeader.split('; ');\n      const authCookie = cookies.find((c: string) => c.startsWith('auth-token='));\n      if (authCookie) {\n        const encodedToken = authCookie.split('=')[1];\n        token = decodeURIComponent(encodedToken);\n      }\n    }\n\n    if (!token) {\n      return new Response(JSON.stringify({ \n        success: false,\n        error: 'No authentication token' \n      }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    const jwtSecret = env.JWT_SECRET;\n    if (!jwtSecret) {\n      return new Response(JSON.stringify({ \n        success: false,\n        error: 'JWT secret not configured' \n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    try {\n      const payload = await verifyJwt(token, jwtSecret);\n      \n      if (!payload) {\n        return new Response(JSON.stringify({ \n          success: false,\n          error: 'Invalid or expired token' \n        }), {\n          status: 401,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n\n      // Use external API\n      const bearerToken = env.AFFENSUS_CREDENTIALS_PASSWORD;\n      if (!bearerToken) {\n        throw new Error('AFFENSUS_CREDENTIALS_PASSWORD not configured');\n      }\n\n      console.log('Making API request to:', 'https://apiv2.affensus.com/api/refresh-wishlist');\n      console.log('Request body:', { \n        projectId: body.projectId, \n        sendNotification: body.sendNotification || false\n      });\n      console.log('Headers:', {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${bearerToken.substring(0, 8)}...`\n      });\n\n      let response;\n      try {\n        response = await fetch('https://apiv2.affensus.com/api/refresh-wishlist', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${bearerToken}`,\n          },\n          body: JSON.stringify({\n            projectId: body.projectId,\n            sendNotification: body.sendNotification || false\n          }),\n        });\n      } catch (fetchError) {\n        console.error('Fetch error:', fetchError);\n        const errorMessage = fetchError instanceof Error ? fetchError.message : 'Unknown fetch error';\n        throw new Error(`Network error: ${errorMessage}`);\n      }\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('API Response Error:', {\n          status: response.status,\n          statusText: response.statusText,\n          body: errorText\n        });\n        throw new Error(`External API error: ${response.status} ${response.statusText} - ${errorText}`);\n      }\n\n      const data = await response.json() as RefreshWishlistResponse;\n      \n      // Log only the new numbers to terminal\n      console.log('New wishlist numbers:', {\n        newCount: data.newCount,\n        counts: data.counts\n      });\n      \n      return new Response(JSON.stringify(data), {\n        status: 200,\n        headers: {\n          'Content-Type': 'application/json',\n          'Cache-Control': 'no-store, max-age=0',\n        },\n      });\n    } catch (error) {\n      console.error('JWT verification error:', error);\n      return new Response(JSON.stringify({ \n        success: false,\n        error: error instanceof Error ? error.message : 'Invalid token' \n      }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n  } catch (error) {\n    console.error('Refresh wishlist error:', error);\n    return new Response(JSON.stringify({ \n      success: false, \n      error: error instanceof Error ? error.message : 'Internal server error' \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' },\n    });\n  }\n}\n", "import { verifyJwt } from '../../../src/lib/jwt'\n\nexport async function onRequestOptions() {\n  return new Response(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'POST, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n    },\n  })\n}\n\nexport async function onRequestPost(context: any) {\n  try {\n    const { request, env } = context\n    \n    // Get JWT token from cookie\n    const cookieHeader = request.headers.get('Cookie')\n    let token: string | null = null\n    \n    if (cookieHeader) {\n      const cookies = cookieHeader.split('; ')\n      const authCookie = cookies.find((c: string) => c.startsWith('auth-token='))\n      if (authCookie) {\n        // Handle URL encoding like in /api/user\n        const encodedToken = authCookie.split('=')[1]\n        token = decodeURIComponent(encodedToken)\n      }\n    }\n\n    if (!token) {\n      return new Response(JSON.stringify({ error: 'No authentication token' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    const jwtSecret = env.JWT_SECRET\n    if (!jwtSecret) {\n      return new Response(JSON.stringify({ error: 'JWT secret not configured' }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    try {\n      const payload = await verifyJwt(token, jwtSecret)\n      if (!payload) {\n        return new Response(JSON.stringify({ error: 'Invalid token' }), {\n          status: 401,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n      const { description, userEmail, subscriptionStatus } = await request.json()\n\n      // Validate required fields\n      if (!description) {\n        return new Response(JSON.stringify({ \n          error: \"Description is required\" \n        }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n      // Basic validation\n      if (description.length > 1000) {\n        return new Response(JSON.stringify({ \n          error: \"Description too long (max 1000 characters)\" \n        }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n      // Get user's payment information from database\n      const db = env.DB\n      if (!db) {\n        return new Response(JSON.stringify({ error: 'Database not available' }), {\n          status: 500,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n      // Get user's most recent paid invoice\n      const userInvoices = await db.prepare(`\n        SELECT * FROM stripe_invoices \n        WHERE user_id = ? AND status = 'paid' AND amount_paid > 0\n        ORDER BY created_at DESC \n        LIMIT 1\n      `).bind(payload.sub).all()\n\n      if (!userInvoices.results || userInvoices.results.length === 0) {\n        return new Response(JSON.stringify({ \n          error: \"No payment found to refund\" \n        }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n      const latestInvoice = userInvoices.results[0]\n\n      // Check if refund is within 7 days\n      const paymentDate = new Date(latestInvoice.created_at)\n      const now = new Date()\n      const daysSincePayment = Math.floor((now.getTime() - paymentDate.getTime()) / (1000 * 60 * 60 * 24))\n\n      if (daysSincePayment > 7) {\n        return new Response(JSON.stringify({ \n          error: \"Refund window has expired. Refunds are only available within 7 days of payment.\" \n        }), {\n          status: 400,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n      // Check if this is a manually created invoice (fake Stripe ID)\n      if (latestInvoice.stripe_invoice_id.startsWith('manual_fix_')) {\n        // For manually created invoices, just update subscription status without Stripe refund\n        await db.prepare(`\n          UPDATE users \n          SET subscription_status = 'free', \n              subscription_expires_at = datetime('now'),\n              updated_at = datetime('now')\n          WHERE id = ?\n        `).bind(payload.sub).run()\n\n        // Create credit note for the refund\n        const { createCreditNote } = await import('../../../src/lib/invoice-generator.js')\n        const creditNote = await createCreditNote(db, latestInvoice.id, description)\n\n        // Log the manual refund\n        console.log(`Manual refund processed for user ${payload.sub}:`, {\n          userId: payload.sub,\n          userEmail: userEmail || payload.email,\n          amountRefunded: latestInvoice.amount_paid,\n          currency: latestInvoice.currency,\n          refundReason: description,\n          timestamp: new Date().toISOString()\n        })\n\n        // Send email notification for refund request\n        const resendApiKey = env.RESEND_API_KEY\n        if (resendApiKey) {\n          try {\n            await fetch('https://api.resend.com/emails', {\n              method: 'POST',\n              headers: {\n                'Authorization': `Bearer ${resendApiKey}`,\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify({\n                from: 'MorseXpress <noreply@email.morsexpress.com>',\n                to: 'info@sjoerdcopier.nl',\n                subject: 'Refund Request - MorseXpress',\n                html: `\n                  <h2>Refund Request Processed</h2>\n                  <p><strong>User:</strong> ${userEmail || payload.email}</p>\n                  <p><strong>User ID:</strong> ${payload.sub}</p>\n                  <p><strong>Amount Refunded:</strong> $${(latestInvoice.amount_paid / 100).toFixed(2)} ${latestInvoice.currency.toUpperCase()}</p>\n                  <p><strong>Refund Reason:</strong> ${description}</p>\n                  <p><strong>Processed:</strong> ${new Date().toISOString()}</p>\n                  <p><strong>Type:</strong> Manual refund (testing environment)</p>\n                `\n              }),\n            })\n            console.log('Refund notification email sent')\n          } catch (emailError) {\n            console.error('Failed to send refund notification email:', emailError)\n          }\n        }\n\n        return new Response(JSON.stringify({ \n          message: `Refund processed successfully! $${(latestInvoice.amount_paid / 100).toFixed(2)} has been refunded. Your subscription has been cancelled.`,\n          amountRefunded: latestInvoice.amount_paid,\n          currency: latestInvoice.currency,\n          note: \"This was a manual refund for testing purposes.\"\n        }), {\n          status: 200,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n      // Process refund through Stripe for real payments\n      const stripeSecretKey = env.STRIPE_SECRET_KEY\n      if (!stripeSecretKey) {\n        return new Response(JSON.stringify({ error: 'Stripe not configured' }), {\n          status: 500,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n      try {\n        // Create refund through Stripe API\n        const refundResponse = await fetch('https://api.stripe.com/v1/refunds', {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${stripeSecretKey}`,\n            'Content-Type': 'application/x-www-form-urlencoded',\n          },\n          body: new URLSearchParams({\n            payment_intent: latestInvoice.stripe_invoice_id,\n            reason: 'requested_by_customer',\n            metadata: JSON.stringify({\n              user_id: payload.sub,\n              user_email: userEmail || payload.email,\n              refund_reason: description,\n              refund_date: new Date().toISOString()\n            })\n          }),\n        })\n\n        if (!refundResponse.ok) {\n          const errorData = await refundResponse.json()\n          console.error('Stripe refund error:', errorData)\n          return new Response(JSON.stringify({ \n            error: \"Failed to process refund through Stripe\" \n          }), {\n            status: 500,\n            headers: { 'Content-Type': 'application/json' }\n          })\n        }\n\n        const refund = await refundResponse.json()\n\n        // Update user subscription status to free\n        await db.prepare(`\n          UPDATE users \n          SET subscription_status = 'free', \n              subscription_expires_at = datetime('now'),\n              updated_at = datetime('now')\n          WHERE id = ?\n        `).bind(payload.sub).run()\n\n        // Create credit note for the refund\n        const { createCreditNote } = await import('../../../src/lib/invoice-generator.js')\n        const creditNote = await createCreditNote(db, latestInvoice.id, description)\n\n        // Log the successful refund\n        console.log(`Refund processed for user ${payload.sub}:`, {\n          userId: payload.sub,\n          userEmail: userEmail || payload.email,\n          stripeRefundId: refund.id,\n          amountRefunded: latestInvoice.amount_paid,\n          currency: latestInvoice.currency,\n          refundReason: description,\n          timestamp: new Date().toISOString()\n        })\n\n        // Send email notification for refund request\n        const resendApiKey = env.RESEND_API_KEY\n        if (resendApiKey) {\n          try {\n            await fetch('https://api.resend.com/emails', {\n              method: 'POST',\n              headers: {\n                'Authorization': `Bearer ${resendApiKey}`,\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify({\n                from: 'MorseXpress <noreply@morsexpress.com>',\n                to: 'info@sjoerdcopier.nl',\n                subject: 'Refund Request - MorseXpress',\n                html: `\n                  <h2>Refund Request Processed</h2>\n                  <p><strong>User:</strong> ${userEmail || payload.email}</p>\n                  <p><strong>User ID:</strong> ${payload.sub}</p>\n                  <p><strong>Stripe Refund ID:</strong> ${refund.id}</p>\n                  <p><strong>Amount Refunded:</strong> $${(latestInvoice.amount_paid / 100).toFixed(2)} ${latestInvoice.currency.toUpperCase()}</p>\n                  <p><strong>Refund Reason:</strong> ${description}</p>\n                  <p><strong>Processed:</strong> ${new Date().toISOString()}</p>\n                  <p><strong>Type:</strong> Stripe refund (production)</p>\n                `\n              }),\n            })\n            console.log('Refund notification email sent')\n          } catch (emailError) {\n            console.error('Failed to send refund notification email:', emailError)\n          }\n        }\n\n        return new Response(JSON.stringify({ \n          message: `Refund processed successfully! $${(latestInvoice.amount_paid / 100).toFixed(2)} has been refunded to your original payment method. Your subscription has been cancelled.`,\n          refundId: refund.id,\n          amountRefunded: latestInvoice.amount_paid,\n          currency: latestInvoice.currency\n        }), {\n          status: 200,\n          headers: { 'Content-Type': 'application/json' }\n        })\n\n      } catch (stripeError) {\n        console.error('Error processing Stripe refund:', stripeError)\n        return new Response(JSON.stringify({ \n          error: \"Failed to process refund. Please contact support.\" \n        }), {\n          status: 500,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n    } catch (jwtError) {\n      return new Response(JSON.stringify({ error: 'Invalid or expired token' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n  } catch (error) {\n    console.error('Error processing refund request:', error)\n    return new Response(JSON.stringify({ \n      error: \"Internal server error\" \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    })\n  }\n}\n", "// D1 Database utilities for authentication\nfunction generateToken(): string {\n  // Use Web API crypto instead of Node.js crypto for edge runtime compatibility\n  const array = new Uint8Array(32)\n  crypto.getRandomValues(array)\n  return Array.from(array, byte => byte.toString(16).padStart(2, '0')).join('')\n}\n\nasync function createUser(db: any, email: string, loginMethod: string = 'magic_link') {\n  // Use external API instead of D1\n  const bearerToken = process.env.AFFENSUS_CREDENTIALS_PASSWORD;\n  if (!bearerToken) {\n    throw new Error('AFFENSUS_CREDENTIALS_PASSWORD not configured');\n  }\n\n  console.log('Registering user via external API:', { email, loginMethod });\n\n  const response = await fetch('https://apiv2.affensus.com/api/auth/register', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `Bearer ${bearerToken}`,\n    },\n    body: JSON.stringify({\n      email: email.toLowerCase(),\n      name: null, // Magic link users don't have names initially\n      login_method: loginMethod,\n      subscription_status: 'free'\n    }),\n  });\n\n  if (!response.ok) {\n    const errorText = await response.text();\n    console.error('API registration failed:', response.status, errorText);\n    throw new Error(`Registration failed: ${response.status} ${errorText}`);\n  }\n\n  const userData = await response.json();\n  \n  // For backward compatibility, return a user object that matches the expected structure\n  const user = {\n    id: userData.id || userData.user_id || Date.now(), // Fallback ID if API doesn't return one\n    email: email.toLowerCase(),\n    preferred_login_method: loginMethod,\n    subscription_status: 'free',\n    created_at: new Date().toISOString(),\n    updated_at: new Date().toISOString()\n  };\n\n  // Check if this is a new user by looking at the API response\n  const isNewUser = response.status === 201; // 201 = Created, 200 = Updated\n  \n  return { user, isNewUser };\n}\n\nasync function createMagicLink(db: any, email: string, token: string) {\n  const expiresAt = new Date(Date.now() + 10 * 60 * 1000) // 10 minutes from now\n  const stmt = db.prepare(`\n    INSERT INTO magic_links (email, token, expires_at, created_at)\n    VALUES (?, ?, ?, datetime('now'))\n  `)\n  await stmt.bind(email, token, expiresAt.toISOString()).run()\n}\n\nasync function cleanupExpiredMagicLinks(db: any) {\n  await db.prepare('DELETE FROM magic_links WHERE expires_at < datetime(\"now\")').run()\n}\n\nasync function sendMagicLinkEmail(email: string, magicLinkUrl: string, resendApiKey: string) {\n  const response = await fetch('https://api.resend.com/emails', {\n    method: 'POST',\n    headers: {\n      'Authorization': `Bearer ${resendApiKey}`,\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      from: 'noreply@email.morsexpress.com',\n      to: email,\n      subject: 'Your Magic Link for MorseXpress',\n      html: `\n        <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;\">\n          <div style=\"text-align: center; margin-bottom: 30px;\">\n            <h1 style=\"color: #1f2937; margin-bottom: 10px;\">MorseXpress</h1>\n            <h2 style=\"color: #4b5563; font-weight: normal; margin-top: 0;\">Your Magic Link</h2>\n          </div>\n          \n          <p style=\"color: #374151; font-size: 16px; line-height: 1.5;\">\n            Click the button below to sign in to your MorseXpress account. This link will expire in 10 minutes.\n          </p>\n          \n          <div style=\"text-align: center; margin: 30px 0;\">\n            <a href=\"${magicLinkUrl}\" \n               style=\"background-color: #1f2937; color: white; padding: 12px 30px; text-decoration: none; border-radius: 6px; font-weight: 600; display: inline-block;\">\n              Sign In to MorseXpress\n            </a>\n          </div>\n          \n          <p style=\"color: #6b7280; font-size: 14px; line-height: 1.5;\">\n            If the button doesn't work, copy and paste this link into your browser:\n          </p>\n          <p style=\"color: #3b82f6; font-size: 14px; word-break: break-all;\">\n            ${magicLinkUrl}\n          </p>\n          \n          <hr style=\"border: none; border-top: 1px solid #e5e7eb; margin: 30px 0;\">\n          \n          <p style=\"color: #9ca3af; font-size: 12px; text-align: center;\">\n            If you didn't request this email, you can safely ignore it.\n          </p>\n        </div>\n      `,\n      text: `\nYour Magic Link for MorseXpress\n\nClick the following link to sign in to your MorseXpress account. This link will expire in 10 minutes.\n\n${magicLinkUrl}\n\nIf you didn't request this email, you can safely ignore it.\n      `.trim()\n    })\n  })\n\n  if (!response.ok) {\n    const errorText = await response.text()\n    console.error('Resend API error:', errorText)\n    throw new Error(`Failed to send email via Resend: ${response.status} ${errorText}`)\n  }\n\n  return await response.json()\n}\n\nexport async function onRequestPost(context: any) {\n  try {\n    const { request, env } = context\n    const { email } = await request.json()\n\n    // Validate email\n    if (!email || typeof email !== 'string') {\n      return new Response(JSON.stringify({ error: 'Valid email is required' }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n    if (!emailRegex.test(email)) {\n      return new Response(JSON.stringify({ error: 'Invalid email format' }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    // Get database from environment\n    const db = env.DB\n    if (!db) {\n      return new Response(JSON.stringify({ error: 'Database not available' }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    try {\n      // Clean up expired magic links\n      await cleanupExpiredMagicLinks(db)\n\n      // Create or update user\n      const { user, isNewUser } = await createUser(db, email.toLowerCase(), 'magic_link')\n\n      // Send email notification for new users\n      if (isNewUser) {\n        const resendApiKey = env.RESEND_API_KEY\n        if (resendApiKey) {\n          try {\n            const { sendNewUserNotification } = await import('../auth/shared/email-notifications')\n            await sendNewUserNotification(user.email, 'magic_link', resendApiKey)\n          } catch (error) {\n            console.error('Failed to send new user notification:', error)\n            // Continue with normal flow even if email fails\n          }\n        } else {\n          console.log('New user registered but RESEND_API_KEY not configured - email notification skipped')\n        }\n      }\n\n      // Generate magic link token\n      const token = generateToken()\n\n      // Store magic link in database\n      await createMagicLink(db, email.toLowerCase(), token)\n\n      // Create magic link URL\n      const magicLinkUrl = `${env.SITE_URL || 'http://localhost:3000'}/api/magic-login?token=${token}`\n\n      // For development mode, return the magic link\n      if (env.NODE_ENV === 'development') {\n        console.log(`[DEV] \uD83D\uDD17 Magic link for ${email}: ${magicLinkUrl}`)\n        return new Response(JSON.stringify({ \n          message: 'Magic link generated',\n          development_link: magicLinkUrl\n        }), {\n          status: 200,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n      // Check if Resend API key is available\n      const resendApiKey = env.RESEND_API_KEY\n      if (!resendApiKey) {\n        console.error('RESEND_API_KEY not configured')\n        return new Response(JSON.stringify({ error: 'Email service not configured' }), {\n          status: 500,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n      // Send email with magic link using Resend\n      try {\n        const emailResult = await sendMagicLinkEmail(email, magicLinkUrl, resendApiKey)\n        console.log(`Magic link email sent to ${email}:`, emailResult)\n\n        return new Response(JSON.stringify({ \n          message: 'Magic link sent to your email' \n        }), {\n          status: 200,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      } catch (emailError) {\n        console.error('Failed to send magic link email:', emailError)\n        return new Response(JSON.stringify({ error: 'Failed to send email' }), {\n          status: 500,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n    } catch (dbError) {\n      console.error('Database error:', dbError)\n      return new Response(JSON.stringify({ error: 'Database operation failed' }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n  } catch (error) {\n    console.error('Error processing magic link request:', error)\n    return new Response(JSON.stringify({ error: 'Internal server error' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    })\n  }\n} ", "import { verifyJwt } from '../../../src/lib/jwt'\n\nexport async function onRequestOptions() {\n  return new Response(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'GET, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization',\n    },\n  })\n}\n\nexport async function onRequestGet(context: { request: Request; env: any }): Promise<Response> {\n  try {\n    const { request, env } = context\n\n    // Get JWT token from cookie (since it's HttpOnly, we can only access it server-side)\n    const cookieHeader = request.headers.get('Cookie')\n    \n    let token: string | null = null\n    \n    if (cookieHeader) {\n      const cookies = cookieHeader.split('; ')\n      const authCookie = cookies.find(c => c.startsWith('auth-token='))\n      if (authCookie) {\n        const encodedToken = authCookie.split('=')[1]\n        token = decodeURIComponent(encodedToken)\n      }\n    }\n\n    if (!token) {\n      return new Response(JSON.stringify({\n        authenticated: false,\n        user: null\n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    // Verify JWT token\n    const jwtSecret = env.JWT_SECRET\n    if (!jwtSecret) {\n      return new Response(JSON.stringify({\n        error: 'JWT secret not configured'\n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    try {\n      const payload = await verifyJwt(token, jwtSecret)\n      \n      if (!payload) {\n        return new Response(JSON.stringify({\n          authenticated: false,\n          user: null\n        }), {\n          status: 200,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n      // Return user info if authenticated\n      return new Response(JSON.stringify({\n        authenticated: true,\n        user: {\n          id: payload.sub,\n          email: payload.email,\n          loginMethod: payload.login_method\n        }\n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' }\n      })\n\n    } catch (error) {\n      return new Response(JSON.stringify({\n        authenticated: false,\n        user: null,\n        error: 'Invalid token'\n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n  } catch (error) {\n    console.error('Error checking authentication:', error)\n    return new Response(JSON.stringify({\n      error: 'Internal server error'\n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    })\n  }\n} ", "async function verifyJwt(token: string, secret: string): Promise<any> {\n  try {\n    const [headerB64, payloadB64, signatureB64] = token.split('.')\n    \n    // Decode and verify\n    const encoder = new TextEncoder()\n    const key = await crypto.subtle.importKey(\n      'raw',\n      encoder.encode(secret),\n      { name: 'HMAC', hash: 'SHA-256' },\n      false,\n      ['verify']\n    )\n    \n    const dataToVerify = encoder.encode(`${headerB64}.${payloadB64}`)\n    const signature = Uint8Array.from(atob(signatureB64.replace(/-/g, '+').replace(/_/g, '/')), c => c.charCodeAt(0))\n    \n    const isValid = await crypto.subtle.verify('HMAC', key, signature, dataToVerify)\n    \n    if (!isValid) {\n      throw new Error('Invalid signature')\n    }\n    \n    const payload = JSON.parse(atob(payloadB64.replace(/-/g, '+').replace(/_/g, '/')))\n    \n    // Check expiration\n    if (payload.exp && payload.exp < Math.floor(Date.now() / 1000)) {\n      throw new Error('Token expired')\n    }\n    \n    return payload\n  } catch (error) {\n    throw new Error('Invalid token')\n  }\n}\n\nfunction parseCookies(cookieHeader: string | null): Record<string, string> {\n  const cookies: Record<string, string> = {}\n  if (!cookieHeader) return cookies\n  \n  cookieHeader.split(';').forEach(cookie => {\n    const parts = cookie.trim().split('=')\n    if (parts.length === 2) {\n      // Handle URL encoding like in /api/user\n      cookies[parts[0]] = decodeURIComponent(parts[1])\n    }\n  })\n  return cookies\n}\n\nasync function getUserByEmail(db: any, email: string) {\n  return await db.prepare('SELECT * FROM users WHERE email = ?').bind(email).first()\n}\n\nexport async function onRequestGet(context: any) {\n  try {\n    const { request, env } = context\n    const cookies = parseCookies(request.headers.get('Cookie'))\n    const token = cookies['auth-token']\n\n    if (!token) {\n      return new Response(JSON.stringify({ error: 'No authentication token' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    const jwtSecret = env.JWT_SECRET\n    if (!jwtSecret) {\n      return new Response(JSON.stringify({ error: 'JWT secret not configured' }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n    try {\n      const decoded = await verifyJwt(token, jwtSecret)\n      \n      // Get database from environment\n      const db = env.DB\n      if (!db) {\n        return new Response(JSON.stringify({ error: 'Database not available' }), {\n          status: 500,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n      // Get user from database\n      const user = await getUserByEmail(db, decoded.email)\n      if (!user) {\n        return new Response(JSON.stringify({ error: 'User not found' }), {\n          status: 404,\n          headers: { 'Content-Type': 'application/json' }\n        })\n      }\n\n      return new Response(JSON.stringify({\n        preferences: {\n          preferred_login_method: user.preferred_login_method,\n          last_login_at: user.updated_at\n        },\n        user: {\n          email: user.email,\n          created_at: user.created_at,\n          updated_at: user.updated_at\n        }\n      }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' }\n      })\n\n    } catch (jwtError) {\n      return new Response(JSON.stringify({ error: 'Invalid or expired token' }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      })\n    }\n\n  } catch (error) {\n    console.error('Error fetching user preferences:', error)\n    return new Response(JSON.stringify({ error: 'Internal server error' }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' }\n    })\n  }\n} ", "import { verifyJwt } from '../../../src/lib/jwt'\n\n// API endpoint for fetching wishlist info\nexport async function onRequestOptions() {\n  return new Response(null, {\n    status: 200,\n    headers: {\n      'Access-Control-Allow-Origin': '*',\n      'Access-Control-Allow-Methods': 'POST, OPTIONS',\n      'Access-Control-Allow-Headers': 'Content-Type, Authorization'\n    }\n  });\n}\n\n\nexport interface WishlistInfoRequest {\n  project_id: string;\n}\n\nexport interface WishlistInfoResponse {\n  project_id: string;\n  total_items: number;\n  wishlistInfo: Array<{\n    clean_name: string;\n    commission: {\n      payouts: {\n        CPS: Array<{\n          currency: string | null;\n          item: string;\n          value: string;\n        }>;\n      };\n    };\n    deeplink: string;\n    description: string | null;\n    display_url: string;\n    logo: string;\n    match_type: string;\n    merchant_id: number;\n    network_id: number;\n    network_name: string;\n    program_id: string;\n    project_unique_identifier: string;\n    status: string;\n    wishlist_name: string;\n    wishlist_url: string;\n  }>;\n}\n\n// POST /api/wishlist-info - Get wishlist info for a project\nexport async function onRequestPost(context: { request: Request; env: any }) {\n  try {\n    const { request, env } = context;\n    const body = await request.json() as WishlistInfoRequest;\n    \n    // Validate required fields\n    if (!body.project_id) {\n      return new Response(JSON.stringify({\n        success: false,\n        error: 'project_id is required'\n      }), {\n        status: 400,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    // Get JWT token from cookie\n    const cookieHeader = request.headers.get('Cookie');\n    let token: string | null = null;\n    \n    if (cookieHeader) {\n      const cookies = cookieHeader.split('; ');\n      const authCookie = cookies.find(c => c.startsWith('auth-token='));\n      if (authCookie) {\n        const encodedToken = authCookie.split('=')[1];\n        token = decodeURIComponent(encodedToken);\n      }\n    }\n\n    if (!token) {\n      return new Response(JSON.stringify({ \n        success: false,\n        error: 'No authentication token' \n      }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    const jwtSecret = env.JWT_SECRET;\n    if (!jwtSecret) {\n      return new Response(JSON.stringify({ \n        success: false,\n        error: 'JWT secret not configured' \n      }), {\n        status: 500,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n\n    try {\n      const payload = await verifyJwt(token, jwtSecret);\n      \n      if (!payload) {\n        return new Response(JSON.stringify({ \n          success: false,\n          error: 'Invalid or expired token' \n        }), {\n          status: 401,\n          headers: { 'Content-Type': 'application/json' }\n        });\n      }\n\n      // Use external API\n      const bearerToken = env.AFFENSUS_CREDENTIALS_PASSWORD;\n      if (!bearerToken) {\n        throw new Error('AFFENSUS_CREDENTIALS_PASSWORD not configured');\n      }\n\n      console.log('Making API request to:', 'https://apiv2.affensus.com/api/wishlist-info');\n      console.log('Request body:', { project_id: body.project_id });\n      console.log('Headers:', {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${bearerToken.substring(0, 8)}...`\n      });\n\n      let response;\n      try {\n        response = await fetch('https://apiv2.affensus.com/api/wishlist-info', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': `Bearer ${bearerToken}`,\n          },\n          body: JSON.stringify({\n            project_id: body.project_id\n          }),\n        });\n      } catch (fetchError) {\n        console.error('Fetch error:', fetchError);\n        const errorMessage = fetchError instanceof Error ? fetchError.message : 'Unknown fetch error';\n        throw new Error(`Network error: ${errorMessage}`);\n      }\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('API Response Error:', {\n          status: response.status,\n          statusText: response.statusText,\n          body: errorText\n        });\n        throw new Error(`External API error: ${response.status} ${response.statusText} - ${errorText}`);\n      }\n\n      const data = await response.json() as WishlistInfoResponse;\n      \n      return new Response(JSON.stringify({\n        success: true,\n        data: data\n      }), {\n        status: 200,\n        headers: {\n          'Content-Type': 'application/json',\n          'Cache-Control': 'no-store, max-age=0',\n        },\n      });\n    } catch (error) {\n      console.error('JWT verification error:', error);\n      return new Response(JSON.stringify({ \n        success: false,\n        error: error instanceof Error ? error.message : 'Invalid token' \n      }), {\n        status: 401,\n        headers: { 'Content-Type': 'application/json' }\n      });\n    }\n  } catch (error) {\n    console.error('Wishlist info error:', error);\n    return new Response(JSON.stringify({ \n      success: false, \n      error: error instanceof Error ? error.message : 'Internal server error' \n    }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' },\n    });\n  }\n}\n", "import { locales } from '../../src/locales/settings'\n\ninterface ExchangeRateResponse {\n  result: string\n  conversion_rates: { [key: string]: number }\n}\n\ninterface CurrencyRatesResponse {\n  rates: { [key: string]: number }\n  lastUpdated: string\n  baseCurrency: string\n}\n\nexport const onRequest = async (context: any) => {\n  const { request } = context\n\n  // Set CORS headers\n  const corsHeaders = {\n    'Access-Control-Allow-Origin': '*',\n    'Access-Control-Allow-Methods': 'GET, OPTIONS',\n    'Access-Control-Allow-Headers': 'Content-Type',\n  }\n\n  // Handle CORS preflight\n  if (request.method === 'OPTIONS') {\n    return new Response(null, { headers: corsHeaders })\n  }\n\n  try {\n    // Extract unique currencies from settings.ts\n    const supportedCurrencies = Array.from(\n      new Set(Object.values(locales).map((locale: any) => locale.currency))\n    )\n\n    // Check cache headers\n    const cacheControl = 'public, max-age=21600' // 6 hours\n    \n    const API_KEY = context.env.EXCHANGE_RATE_API_KEY\n    const BASE_CURRENCY = 'USD'\n    \n    if (!API_KEY) {\n      throw new Error('EXCHANGE_RATE_API_KEY environment variable is not set')\n    }\n    \n    // Fetch exchange rates from ExchangeRate-API\n    const apiUrl = `https://v6.exchangerate-api.com/v6/${API_KEY}/latest/${BASE_CURRENCY}`\n    \n    const response = await fetch(apiUrl)\n    \n    if (!response.ok) {\n      throw new Error(`Exchange rate API failed: ${response.status}`)\n    }\n\n    const data: ExchangeRateResponse = await response.json()\n    \n    if (data.result !== 'success') {\n      throw new Error('Invalid API response')\n    }\n\n    // Filter rates to only include supported currencies\n    const filteredRates: { [key: string]: number } = {}\n    supportedCurrencies.forEach(currency => {\n      if (data.conversion_rates[currency]) {\n        filteredRates[currency] = data.conversion_rates[currency]\n      }\n    })\n\n    const result: CurrencyRatesResponse = {\n      rates: filteredRates,\n      lastUpdated: new Date().toISOString(),\n      baseCurrency: BASE_CURRENCY\n    }\n\n    return new Response(JSON.stringify(result), {\n      headers: {\n        'Content-Type': 'application/json',\n        'Cache-Control': cacheControl,\n        ...corsHeaders\n      }\n    })\n\n  } catch (error) {\n    console.error('Currency rates API error:', error)\n    \n    // Return fallback rates if API fails\n    const fallbackRates: CurrencyRatesResponse = {\n      rates: {\n        'USD': 1,\n        'TRY': 32.5 // Approximate fallback rate\n      },\n      lastUpdated: new Date().toISOString(),\n      baseCurrency: 'USD'\n    }\n\n    return new Response(JSON.stringify(fallbackRates), {\n      headers: {\n        'Content-Type': 'application/json',\n        'Cache-Control': 'public, max-age=300', // 5 minutes cache for fallback\n        ...corsHeaders\n      },\n      status: 200 // Return 200 to not break frontend\n    })\n  }\n} ", "import { onRequestOptions as __api_notifications__project_id___notification_id__read_ts_onRequestOptions } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/notifications/[project_id]/[notification_id]/read.ts\"\nimport { onRequestPut as __api_notifications__project_id___notification_id__read_ts_onRequestPut } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/notifications/[project_id]/[notification_id]/read.ts\"\nimport { onRequestGet as __api_auth_facebook_callback_ts_onRequestGet } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/auth/facebook/callback.ts\"\nimport { onRequestGet as __api_auth_github_callback_ts_onRequestGet } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/auth/github/callback.ts\"\nimport { onRequestGet as __api_auth_google_callback_ts_onRequestGet } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/auth/google/callback.ts\"\nimport { onRequestGet as __api_user_progress__courseId__index_ts_onRequestGet } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/user/progress/[courseId]/index.ts\"\nimport { onRequestPost as __api_user_progress__courseId__index_ts_onRequestPost } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/user/progress/[courseId]/index.ts\"\nimport { onRequestGet as __api_job__job_id__monitor_ts_onRequestGet } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/job/[job_id]/monitor.ts\"\nimport { onRequestOptions as __api_job__job_id__monitor_ts_onRequestOptions } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/job/[job_id]/monitor.ts\"\nimport { onRequestGet as __api_job__job_id__status_ts_onRequestGet } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/job/[job_id]/status.ts\"\nimport { onRequestOptions as __api_job__job_id__status_ts_onRequestOptions } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/job/[job_id]/status.ts\"\nimport { onRequestOptions as __api_notifications__project_id__read_all_ts_onRequestOptions } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/notifications/[project_id]/read-all.ts\"\nimport { onRequestPut as __api_notifications__project_id__read_all_ts_onRequestPut } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/notifications/[project_id]/read-all.ts\"\nimport { onRequestGet as __api_projects__project_id__credentials_summary_ts_onRequestGet } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/projects/[project_id]/credentials-summary.ts\"\nimport { onRequestOptions as __api_projects__project_id__credentials_summary_ts_onRequestOptions } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/projects/[project_id]/credentials-summary.ts\"\nimport { onRequestGet as __api_projects__project_id__link_rot_ts_onRequestGet } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/projects/[project_id]/link-rot.ts\"\nimport { onRequestOptions as __api_projects__project_id__link_rot_ts_onRequestOptions } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/projects/[project_id]/link-rot.ts\"\nimport { onRequestGet as __api_projects__project_id__merchants_ts_onRequestGet } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/projects/[project_id]/merchants.ts\"\nimport { onRequestOptions as __api_projects__project_id__merchants_ts_onRequestOptions } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/projects/[project_id]/merchants.ts\"\nimport { onRequestGet as __api_projects__project_id__networks_ts_onRequestGet } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/projects/[project_id]/networks.ts\"\nimport { onRequestOptions as __api_projects__project_id__networks_ts_onRequestOptions } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/projects/[project_id]/networks.ts\"\nimport { onRequestGet as __api_projects__project_id__notifications_ts_onRequestGet } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/projects/[project_id]/notifications.ts\"\nimport { onRequestOptions as __api_projects__project_id__notifications_ts_onRequestOptions } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/projects/[project_id]/notifications.ts\"\nimport { onRequestGet as __api_projects__project_id__search_ts_onRequestGet } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/projects/[project_id]/search.ts\"\nimport { onRequestOptions as __api_projects__project_id__search_ts_onRequestOptions } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/projects/[project_id]/search.ts\"\nimport { onRequestGet as __api_notifications__project_id___notification_id__ts_onRequestGet } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/notifications/[project_id]/[notification_id].ts\"\nimport { onRequestOptions as __api_notifications__project_id___notification_id__ts_onRequestOptions } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/notifications/[project_id]/[notification_id].ts\"\nimport { onRequestGet as __api_auth_facebook_index_ts_onRequestGet } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/auth/facebook/index.ts\"\nimport { onRequestGet as __api_auth_github_index_ts_onRequestGet } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/auth/github/index.ts\"\nimport { onRequestGet as __api_auth_google_index_ts_onRequestGet } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/auth/google/index.ts\"\nimport { onRequestOptions as __api_auth_register_index_ts_onRequestOptions } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/auth/register/index.ts\"\nimport { onRequestPost as __api_auth_register_index_ts_onRequestPost } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/auth/register/index.ts\"\nimport { onRequestOptions as __api_credentials_create_ts_onRequestOptions } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/credentials/create.ts\"\nimport { onRequestPost as __api_credentials_create_ts_onRequestPost } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/credentials/create.ts\"\nimport { onRequestDelete as __api_credentials_delete_ts_onRequestDelete } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/credentials/delete.ts\"\nimport { onRequestOptions as __api_credentials_delete_ts_onRequestOptions } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/credentials/delete.ts\"\nimport { onRequestOptions as __api_credentials_update_ts_onRequestOptions } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/credentials/update.ts\"\nimport { onRequestPut as __api_credentials_update_ts_onRequestPut } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/credentials/update.ts\"\nimport { onRequestOptions as __api_merchants_hide_ts_onRequestOptions } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/merchants/hide.ts\"\nimport { onRequestPost as __api_merchants_hide_ts_onRequestPost } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/merchants/hide.ts\"\nimport { onRequestGet as __api_profile_billing_address_ts_onRequestGet } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/profile/billing-address.ts\"\nimport { onRequestPut as __api_profile_billing_address_ts_onRequestPut } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/profile/billing-address.ts\"\nimport { onRequestGet as __api_profile_completion_status_ts_onRequestGet } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/profile/completion-status.ts\"\nimport { onRequestGet as __api_profile_invoices_ts_onRequestGet } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/profile/invoices.ts\"\nimport { onRequestGet as __api_profile_preferences_ts_onRequestGet } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/profile/preferences.ts\"\nimport { onRequestOptions as __api_profile_process_pending_invoices_ts_onRequestOptions } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/profile/process-pending-invoices.ts\"\nimport { onRequestPost as __api_profile_process_pending_invoices_ts_onRequestPost } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/profile/process-pending-invoices.ts\"\nimport { onRequestGet as __api_queue_status_ts_onRequestGet } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/queue/status.ts\"\nimport { onRequestOptions as __api_queue_status_ts_onRequestOptions } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/queue/status.ts\"\nimport { onRequestGet as __api_tools_affiliate_link_checker_ts_onRequestGet } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/tools/affiliate-link-checker.ts\"\nimport { onRequestOptions as __api_tools_affiliate_link_checker_ts_onRequestOptions } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/tools/affiliate-link-checker.ts\"\nimport { onRequestPost as __api_tools_affiliate_link_checker_ts_onRequestPost } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/tools/affiliate-link-checker.ts\"\nimport { onRequestGet as __api_tools_affiliate_network_uptime_ts_onRequestGet } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/tools/affiliate-network-uptime.ts\"\nimport { onRequestOptions as __api_tools_affiliate_network_uptime_ts_onRequestOptions } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/tools/affiliate-network-uptime.ts\"\nimport { onRequest as __api_stripe_create_checkout_session_ts_onRequest } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/stripe/create-checkout-session.ts\"\nimport { onRequest as __api_stripe_create_portal_session_ts_onRequest } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/stripe/create-portal-session.ts\"\nimport { onRequest as __api_stripe_create_user_account_ts_onRequest } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/stripe/create-user-account.ts\"\nimport { onRequest as __api_stripe_webhook_ts_onRequest } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/stripe/webhook.ts\"\nimport { onRequestGet as __api_invoice__invoiceNumber__ts_onRequestGet } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/invoice/[invoiceNumber].ts\"\nimport { onRequestOptions as __api_invoice__invoiceNumber__ts_onRequestOptions } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/invoice/[invoiceNumber].ts\"\nimport { onRequestGet as __api_users__userId__index_ts_onRequestGet } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/users/[userId]/index.ts\"\nimport { onRequestOptions as __api_users__userId__index_ts_onRequestOptions } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/users/[userId]/index.ts\"\nimport { onRequestPost as __api_contact_index_ts_onRequestPost } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/contact/index.ts\"\nimport { onRequestGet as __api_credential_schemas_ts_onRequestGet } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/credential-schemas.ts\"\nimport { onRequestOptions as __api_credential_schemas_ts_onRequestOptions } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/credential-schemas.ts\"\nimport { onRequestOptions as __api_decrypt_credentials_ts_onRequestOptions } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/decrypt-credentials.ts\"\nimport { onRequestPost as __api_decrypt_credentials_ts_onRequestPost } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/decrypt-credentials.ts\"\nimport { onRequestOptions as __api_import_network_ts_onRequestOptions } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/import-network.ts\"\nimport { onRequestPost as __api_import_network_ts_onRequestPost } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/import-network.ts\"\nimport { onRequestOptions as __api_logo_index_ts_onRequestOptions } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/logo/index.ts\"\nimport { onRequestPost as __api_logo_index_ts_onRequestPost } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/logo/index.ts\"\nimport { onRequestPost as __api_logout_index_ts_onRequestPost } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/logout/index.ts\"\nimport { onRequestGet as __api_magic_login_index_ts_onRequestGet } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/magic-login/index.ts\"\nimport { onRequestPost as __api_mistake_report_index_ts_onRequestPost } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/mistake-report/index.ts\"\nimport { onRequestDelete as __api_network_monitors_index_ts_onRequestDelete } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/network-monitors/index.ts\"\nimport { onRequestGet as __api_network_monitors_index_ts_onRequestGet } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/network-monitors/index.ts\"\nimport { onRequestOptions as __api_network_monitors_index_ts_onRequestOptions } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/network-monitors/index.ts\"\nimport { onRequestPost as __api_network_monitors_index_ts_onRequestPost } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/network-monitors/index.ts\"\nimport { onRequestPut as __api_network_monitors_index_ts_onRequestPut } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/network-monitors/index.ts\"\nimport { onRequestGet as __api_profile_index_ts_onRequestGet } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/profile/index.ts\"\nimport { onRequestPut as __api_profile_index_ts_onRequestPut } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/profile/index.ts\"\nimport { onRequestOptions as __api_refresh_published_index_ts_onRequestOptions } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/refresh-published/index.ts\"\nimport { onRequestPost as __api_refresh_published_index_ts_onRequestPost } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/refresh-published/index.ts\"\nimport { onRequestOptions as __api_refresh_wishlist_index_ts_onRequestOptions } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/refresh-wishlist/index.ts\"\nimport { onRequestPost as __api_refresh_wishlist_index_ts_onRequestPost } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/refresh-wishlist/index.ts\"\nimport { onRequestOptions as __api_refund_request_index_ts_onRequestOptions } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/refund-request/index.ts\"\nimport { onRequestPost as __api_refund_request_index_ts_onRequestPost } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/refund-request/index.ts\"\nimport { onRequestPost as __api_request_magic_link_index_ts_onRequestPost } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/request-magic-link/index.ts\"\nimport { onRequestGet as __api_user_index_ts_onRequestGet } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/user/index.ts\"\nimport { onRequestOptions as __api_user_index_ts_onRequestOptions } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/user/index.ts\"\nimport { onRequestGet as __api_user_preferences_ts_onRequestGet } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/user-preferences.ts\"\nimport { onRequestOptions as __api_wishlist_info_index_ts_onRequestOptions } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/wishlist-info/index.ts\"\nimport { onRequestPost as __api_wishlist_info_index_ts_onRequestPost } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/wishlist-info/index.ts\"\nimport { onRequest as __api_currency_rates_ts_onRequest } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/functions/api/currency-rates.ts\"\n\nexport const routes = [\n    {\n      routePath: \"/api/notifications/:project_id/:notification_id/read\",\n      mountPath: \"/api/notifications/:project_id/:notification_id\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_notifications__project_id___notification_id__read_ts_onRequestOptions],\n    },\n  {\n      routePath: \"/api/notifications/:project_id/:notification_id/read\",\n      mountPath: \"/api/notifications/:project_id/:notification_id\",\n      method: \"PUT\",\n      middlewares: [],\n      modules: [__api_notifications__project_id___notification_id__read_ts_onRequestPut],\n    },\n  {\n      routePath: \"/api/auth/facebook/callback\",\n      mountPath: \"/api/auth/facebook\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_auth_facebook_callback_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/auth/github/callback\",\n      mountPath: \"/api/auth/github\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_auth_github_callback_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/auth/google/callback\",\n      mountPath: \"/api/auth/google\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_auth_google_callback_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/user/progress/:courseId\",\n      mountPath: \"/api/user/progress/:courseId\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_user_progress__courseId__index_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/user/progress/:courseId\",\n      mountPath: \"/api/user/progress/:courseId\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_user_progress__courseId__index_ts_onRequestPost],\n    },\n  {\n      routePath: \"/api/job/:job_id/monitor\",\n      mountPath: \"/api/job/:job_id\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_job__job_id__monitor_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/job/:job_id/monitor\",\n      mountPath: \"/api/job/:job_id\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_job__job_id__monitor_ts_onRequestOptions],\n    },\n  {\n      routePath: \"/api/job/:job_id/status\",\n      mountPath: \"/api/job/:job_id\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_job__job_id__status_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/job/:job_id/status\",\n      mountPath: \"/api/job/:job_id\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_job__job_id__status_ts_onRequestOptions],\n    },\n  {\n      routePath: \"/api/notifications/:project_id/read-all\",\n      mountPath: \"/api/notifications/:project_id\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_notifications__project_id__read_all_ts_onRequestOptions],\n    },\n  {\n      routePath: \"/api/notifications/:project_id/read-all\",\n      mountPath: \"/api/notifications/:project_id\",\n      method: \"PUT\",\n      middlewares: [],\n      modules: [__api_notifications__project_id__read_all_ts_onRequestPut],\n    },\n  {\n      routePath: \"/api/projects/:project_id/credentials-summary\",\n      mountPath: \"/api/projects/:project_id\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_projects__project_id__credentials_summary_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/projects/:project_id/credentials-summary\",\n      mountPath: \"/api/projects/:project_id\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_projects__project_id__credentials_summary_ts_onRequestOptions],\n    },\n  {\n      routePath: \"/api/projects/:project_id/link-rot\",\n      mountPath: \"/api/projects/:project_id\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_projects__project_id__link_rot_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/projects/:project_id/link-rot\",\n      mountPath: \"/api/projects/:project_id\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_projects__project_id__link_rot_ts_onRequestOptions],\n    },\n  {\n      routePath: \"/api/projects/:project_id/merchants\",\n      mountPath: \"/api/projects/:project_id\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_projects__project_id__merchants_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/projects/:project_id/merchants\",\n      mountPath: \"/api/projects/:project_id\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_projects__project_id__merchants_ts_onRequestOptions],\n    },\n  {\n      routePath: \"/api/projects/:project_id/networks\",\n      mountPath: \"/api/projects/:project_id\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_projects__project_id__networks_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/projects/:project_id/networks\",\n      mountPath: \"/api/projects/:project_id\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_projects__project_id__networks_ts_onRequestOptions],\n    },\n  {\n      routePath: \"/api/projects/:project_id/notifications\",\n      mountPath: \"/api/projects/:project_id\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_projects__project_id__notifications_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/projects/:project_id/notifications\",\n      mountPath: \"/api/projects/:project_id\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_projects__project_id__notifications_ts_onRequestOptions],\n    },\n  {\n      routePath: \"/api/projects/:project_id/search\",\n      mountPath: \"/api/projects/:project_id\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_projects__project_id__search_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/projects/:project_id/search\",\n      mountPath: \"/api/projects/:project_id\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_projects__project_id__search_ts_onRequestOptions],\n    },\n  {\n      routePath: \"/api/notifications/:project_id/:notification_id\",\n      mountPath: \"/api/notifications/:project_id\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_notifications__project_id___notification_id__ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/notifications/:project_id/:notification_id\",\n      mountPath: \"/api/notifications/:project_id\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_notifications__project_id___notification_id__ts_onRequestOptions],\n    },\n  {\n      routePath: \"/api/auth/facebook\",\n      mountPath: \"/api/auth/facebook\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_auth_facebook_index_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/auth/github\",\n      mountPath: \"/api/auth/github\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_auth_github_index_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/auth/google\",\n      mountPath: \"/api/auth/google\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_auth_google_index_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/auth/register\",\n      mountPath: \"/api/auth/register\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_auth_register_index_ts_onRequestOptions],\n    },\n  {\n      routePath: \"/api/auth/register\",\n      mountPath: \"/api/auth/register\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_auth_register_index_ts_onRequestPost],\n    },\n  {\n      routePath: \"/api/credentials/create\",\n      mountPath: \"/api/credentials\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_credentials_create_ts_onRequestOptions],\n    },\n  {\n      routePath: \"/api/credentials/create\",\n      mountPath: \"/api/credentials\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_credentials_create_ts_onRequestPost],\n    },\n  {\n      routePath: \"/api/credentials/delete\",\n      mountPath: \"/api/credentials\",\n      method: \"DELETE\",\n      middlewares: [],\n      modules: [__api_credentials_delete_ts_onRequestDelete],\n    },\n  {\n      routePath: \"/api/credentials/delete\",\n      mountPath: \"/api/credentials\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_credentials_delete_ts_onRequestOptions],\n    },\n  {\n      routePath: \"/api/credentials/update\",\n      mountPath: \"/api/credentials\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_credentials_update_ts_onRequestOptions],\n    },\n  {\n      routePath: \"/api/credentials/update\",\n      mountPath: \"/api/credentials\",\n      method: \"PUT\",\n      middlewares: [],\n      modules: [__api_credentials_update_ts_onRequestPut],\n    },\n  {\n      routePath: \"/api/merchants/hide\",\n      mountPath: \"/api/merchants\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_merchants_hide_ts_onRequestOptions],\n    },\n  {\n      routePath: \"/api/merchants/hide\",\n      mountPath: \"/api/merchants\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_merchants_hide_ts_onRequestPost],\n    },\n  {\n      routePath: \"/api/profile/billing-address\",\n      mountPath: \"/api/profile\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_profile_billing_address_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/profile/billing-address\",\n      mountPath: \"/api/profile\",\n      method: \"PUT\",\n      middlewares: [],\n      modules: [__api_profile_billing_address_ts_onRequestPut],\n    },\n  {\n      routePath: \"/api/profile/completion-status\",\n      mountPath: \"/api/profile\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_profile_completion_status_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/profile/invoices\",\n      mountPath: \"/api/profile\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_profile_invoices_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/profile/preferences\",\n      mountPath: \"/api/profile\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_profile_preferences_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/profile/process-pending-invoices\",\n      mountPath: \"/api/profile\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_profile_process_pending_invoices_ts_onRequestOptions],\n    },\n  {\n      routePath: \"/api/profile/process-pending-invoices\",\n      mountPath: \"/api/profile\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_profile_process_pending_invoices_ts_onRequestPost],\n    },\n  {\n      routePath: \"/api/queue/status\",\n      mountPath: \"/api/queue\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_queue_status_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/queue/status\",\n      mountPath: \"/api/queue\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_queue_status_ts_onRequestOptions],\n    },\n  {\n      routePath: \"/api/tools/affiliate-link-checker\",\n      mountPath: \"/api/tools\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_tools_affiliate_link_checker_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/tools/affiliate-link-checker\",\n      mountPath: \"/api/tools\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_tools_affiliate_link_checker_ts_onRequestOptions],\n    },\n  {\n      routePath: \"/api/tools/affiliate-link-checker\",\n      mountPath: \"/api/tools\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_tools_affiliate_link_checker_ts_onRequestPost],\n    },\n  {\n      routePath: \"/api/tools/affiliate-network-uptime\",\n      mountPath: \"/api/tools\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_tools_affiliate_network_uptime_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/tools/affiliate-network-uptime\",\n      mountPath: \"/api/tools\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_tools_affiliate_network_uptime_ts_onRequestOptions],\n    },\n  {\n      routePath: \"/api/stripe/create-checkout-session\",\n      mountPath: \"/api/stripe\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api_stripe_create_checkout_session_ts_onRequest],\n    },\n  {\n      routePath: \"/api/stripe/create-portal-session\",\n      mountPath: \"/api/stripe\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api_stripe_create_portal_session_ts_onRequest],\n    },\n  {\n      routePath: \"/api/stripe/create-user-account\",\n      mountPath: \"/api/stripe\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api_stripe_create_user_account_ts_onRequest],\n    },\n  {\n      routePath: \"/api/stripe/webhook\",\n      mountPath: \"/api/stripe\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api_stripe_webhook_ts_onRequest],\n    },\n  {\n      routePath: \"/api/invoice/:invoiceNumber\",\n      mountPath: \"/api/invoice\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_invoice__invoiceNumber__ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/invoice/:invoiceNumber\",\n      mountPath: \"/api/invoice\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_invoice__invoiceNumber__ts_onRequestOptions],\n    },\n  {\n      routePath: \"/api/users/:userId\",\n      mountPath: \"/api/users/:userId\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_users__userId__index_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/users/:userId\",\n      mountPath: \"/api/users/:userId\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_users__userId__index_ts_onRequestOptions],\n    },\n  {\n      routePath: \"/api/contact\",\n      mountPath: \"/api/contact\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_contact_index_ts_onRequestPost],\n    },\n  {\n      routePath: \"/api/credential-schemas\",\n      mountPath: \"/api\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_credential_schemas_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/credential-schemas\",\n      mountPath: \"/api\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_credential_schemas_ts_onRequestOptions],\n    },\n  {\n      routePath: \"/api/decrypt-credentials\",\n      mountPath: \"/api\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_decrypt_credentials_ts_onRequestOptions],\n    },\n  {\n      routePath: \"/api/decrypt-credentials\",\n      mountPath: \"/api\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_decrypt_credentials_ts_onRequestPost],\n    },\n  {\n      routePath: \"/api/import-network\",\n      mountPath: \"/api\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_import_network_ts_onRequestOptions],\n    },\n  {\n      routePath: \"/api/import-network\",\n      mountPath: \"/api\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_import_network_ts_onRequestPost],\n    },\n  {\n      routePath: \"/api/logo\",\n      mountPath: \"/api/logo\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_logo_index_ts_onRequestOptions],\n    },\n  {\n      routePath: \"/api/logo\",\n      mountPath: \"/api/logo\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_logo_index_ts_onRequestPost],\n    },\n  {\n      routePath: \"/api/logout\",\n      mountPath: \"/api/logout\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_logout_index_ts_onRequestPost],\n    },\n  {\n      routePath: \"/api/magic-login\",\n      mountPath: \"/api/magic-login\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_magic_login_index_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/mistake-report\",\n      mountPath: \"/api/mistake-report\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_mistake_report_index_ts_onRequestPost],\n    },\n  {\n      routePath: \"/api/network-monitors\",\n      mountPath: \"/api/network-monitors\",\n      method: \"DELETE\",\n      middlewares: [],\n      modules: [__api_network_monitors_index_ts_onRequestDelete],\n    },\n  {\n      routePath: \"/api/network-monitors\",\n      mountPath: \"/api/network-monitors\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_network_monitors_index_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/network-monitors\",\n      mountPath: \"/api/network-monitors\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_network_monitors_index_ts_onRequestOptions],\n    },\n  {\n      routePath: \"/api/network-monitors\",\n      mountPath: \"/api/network-monitors\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_network_monitors_index_ts_onRequestPost],\n    },\n  {\n      routePath: \"/api/network-monitors\",\n      mountPath: \"/api/network-monitors\",\n      method: \"PUT\",\n      middlewares: [],\n      modules: [__api_network_monitors_index_ts_onRequestPut],\n    },\n  {\n      routePath: \"/api/profile\",\n      mountPath: \"/api/profile\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_profile_index_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/profile\",\n      mountPath: \"/api/profile\",\n      method: \"PUT\",\n      middlewares: [],\n      modules: [__api_profile_index_ts_onRequestPut],\n    },\n  {\n      routePath: \"/api/refresh-published\",\n      mountPath: \"/api/refresh-published\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_refresh_published_index_ts_onRequestOptions],\n    },\n  {\n      routePath: \"/api/refresh-published\",\n      mountPath: \"/api/refresh-published\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_refresh_published_index_ts_onRequestPost],\n    },\n  {\n      routePath: \"/api/refresh-wishlist\",\n      mountPath: \"/api/refresh-wishlist\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_refresh_wishlist_index_ts_onRequestOptions],\n    },\n  {\n      routePath: \"/api/refresh-wishlist\",\n      mountPath: \"/api/refresh-wishlist\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_refresh_wishlist_index_ts_onRequestPost],\n    },\n  {\n      routePath: \"/api/refund-request\",\n      mountPath: \"/api/refund-request\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_refund_request_index_ts_onRequestOptions],\n    },\n  {\n      routePath: \"/api/refund-request\",\n      mountPath: \"/api/refund-request\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_refund_request_index_ts_onRequestPost],\n    },\n  {\n      routePath: \"/api/request-magic-link\",\n      mountPath: \"/api/request-magic-link\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_request_magic_link_index_ts_onRequestPost],\n    },\n  {\n      routePath: \"/api/user\",\n      mountPath: \"/api/user\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_user_index_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/user\",\n      mountPath: \"/api/user\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_user_index_ts_onRequestOptions],\n    },\n  {\n      routePath: \"/api/user-preferences\",\n      mountPath: \"/api\",\n      method: \"GET\",\n      middlewares: [],\n      modules: [__api_user_preferences_ts_onRequestGet],\n    },\n  {\n      routePath: \"/api/wishlist-info\",\n      mountPath: \"/api/wishlist-info\",\n      method: \"OPTIONS\",\n      middlewares: [],\n      modules: [__api_wishlist_info_index_ts_onRequestOptions],\n    },\n  {\n      routePath: \"/api/wishlist-info\",\n      mountPath: \"/api/wishlist-info\",\n      method: \"POST\",\n      middlewares: [],\n      modules: [__api_wishlist_info_index_ts_onRequestPost],\n    },\n  {\n      routePath: \"/api/currency-rates\",\n      mountPath: \"/api\",\n      method: \"\",\n      middlewares: [],\n      modules: [__api_currency_rates_ts_onRequest],\n    },\n  ]", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/.wrangler/tmp/bundle-ulc5eL/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/.wrangler/tmp/bundle-ulc5eL/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/.wrangler/tmp/bundle-ulc5eL/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/node_modules/wrangler/templates/pages-template-worker.ts\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/node_modules/wrangler/templates/pages-template-worker.ts\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "import { match } from \"path-to-regexp\";\n\n//note: this explicitly does not include the * character, as pages requires this\nconst escapeRegex = /[.+?^${}()|[\\]\\\\]/g;\n\ntype HTTPMethod =\n\t| \"HEAD\"\n\t| \"OPTIONS\"\n\t| \"GET\"\n\t| \"POST\"\n\t| \"PUT\"\n\t| \"PATCH\"\n\t| \"DELETE\";\n\n/* TODO: Grab these from @cloudflare/workers-types instead */\ntype Params<P extends string = string> = Record<P, string | string[]>;\n\ntype EventContext<Env, P extends string, Data> = {\n\trequest: Request;\n\tfunctionPath: string;\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n\tnext: (input?: Request | string, init?: RequestInit) => Promise<Response>;\n\tenv: Env & { ASSETS: { fetch: typeof fetch } };\n\tparams: Params<P>;\n\tdata: Data;\n};\n\ndeclare type PagesFunction<\n\tEnv = unknown,\n\tP extends string = string,\n\tData extends Record<string, unknown> = Record<string, unknown>,\n> = (context: EventContext<Env, P, Data>) => Response | Promise<Response>;\n/* end @cloudflare/workers-types */\n\ntype RouteHandler = {\n\troutePath: string;\n\tmountPath: string;\n\tmethod?: HTTPMethod;\n\tmodules: PagesFunction[];\n\tmiddlewares: PagesFunction[];\n};\n\n// inject `routes` via ESBuild\ndeclare const routes: RouteHandler[];\n// define `__FALLBACK_SERVICE__` via ESBuild\ndeclare const __FALLBACK_SERVICE__: string;\n\n// expect an ASSETS fetcher binding pointing to the asset-server stage\ntype FetchEnv = {\n\t[name: string]: { fetch: typeof fetch };\n\tASSETS: { fetch: typeof fetch };\n};\n\ntype WorkerContext = {\n\twaitUntil: (promise: Promise<unknown>) => void;\n\tpassThroughOnException: () => void;\n};\n\nfunction* executeRequest(request: Request) {\n\tconst requestPath = new URL(request.url).pathname;\n\n\t// First, iterate through the routes (backwards) and execute \"middlewares\" on partial route matches\n\tfor (const route of [...routes].reverse()) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// replaces with \"\\\\$&\", this prepends a backslash to the matched string, e.g. \"[\" becomes \"\\[\"\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult) {\n\t\t\tfor (const handler of route.middlewares.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: mountMatchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t// Then look for the first exact route match and execute its \"modules\"\n\tfor (const route of routes) {\n\t\tif (route.method && route.method !== request.method) {\n\t\t\tcontinue;\n\t\t}\n\t\tconst routeMatcher = match(route.routePath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: true,\n\t\t});\n\t\tconst mountMatcher = match(route.mountPath.replace(escapeRegex, \"\\\\$&\"), {\n\t\t\tend: false,\n\t\t});\n\t\tconst matchResult = routeMatcher(requestPath);\n\t\tconst mountMatchResult = mountMatcher(requestPath);\n\t\tif (matchResult && mountMatchResult && route.modules.length) {\n\t\t\tfor (const handler of route.modules.flat()) {\n\t\t\t\tyield {\n\t\t\t\t\thandler,\n\t\t\t\t\tparams: matchResult.params as Params,\n\t\t\t\t\tpath: matchResult.path,\n\t\t\t\t};\n\t\t\t}\n\t\t\tbreak;\n\t\t}\n\t}\n}\n\nexport default {\n\tasync fetch(\n\t\toriginalRequest: Request,\n\t\tenv: FetchEnv,\n\t\tworkerContext: WorkerContext\n\t) {\n\t\tlet request = originalRequest;\n\t\tconst handlerIterator = executeRequest(request);\n\t\tlet data = {}; // arbitrary data the user can set between functions\n\t\tlet isFailOpen = false;\n\n\t\tconst next = async (input?: RequestInfo, init?: RequestInit) => {\n\t\t\tif (input !== undefined) {\n\t\t\t\tlet url = input;\n\t\t\t\tif (typeof input === \"string\") {\n\t\t\t\t\turl = new URL(input, request.url).toString();\n\t\t\t\t}\n\t\t\t\trequest = new Request(url, init);\n\t\t\t}\n\n\t\t\tconst result = handlerIterator.next();\n\t\t\t// Note we can't use `!result.done` because this doesn't narrow to the correct type\n\t\t\tif (result.done === false) {\n\t\t\t\tconst { handler, params, path } = result.value;\n\t\t\t\tconst context = {\n\t\t\t\t\trequest: new Request(request.clone()),\n\t\t\t\t\tfunctionPath: path,\n\t\t\t\t\tnext,\n\t\t\t\t\tparams,\n\t\t\t\t\tget data() {\n\t\t\t\t\t\treturn data;\n\t\t\t\t\t},\n\t\t\t\t\tset data(value) {\n\t\t\t\t\t\tif (typeof value !== \"object\" || value === null) {\n\t\t\t\t\t\t\tthrow new Error(\"context.data must be an object\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// user has overriden context.data, so we need to merge it with the existing data\n\t\t\t\t\t\tdata = value;\n\t\t\t\t\t},\n\t\t\t\t\tenv,\n\t\t\t\t\twaitUntil: workerContext.waitUntil.bind(workerContext),\n\t\t\t\t\tpassThroughOnException: () => {\n\t\t\t\t\t\tisFailOpen = true;\n\t\t\t\t\t},\n\t\t\t\t};\n\n\t\t\t\tconst response = await handler(context);\n\n\t\t\t\tif (!(response instanceof Response)) {\n\t\t\t\t\tthrow new Error(\"Your Pages function should return a Response\");\n\t\t\t\t}\n\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else if (__FALLBACK_SERVICE__) {\n\t\t\t\t// There are no more handlers so finish with the fallback service (`env.ASSETS.fetch` in Pages' case)\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t} else {\n\t\t\t\t// There was not fallback service so actually make the request to the origin.\n\t\t\t\tconst response = await fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\t\t};\n\n\t\ttry {\n\t\t\treturn await next();\n\t\t} catch (error) {\n\t\t\tif (isFailOpen) {\n\t\t\t\tconst response = await env[__FALLBACK_SERVICE__].fetch(request);\n\t\t\t\treturn cloneResponse(response);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t}\n\t},\n};\n\n// This makes a Response mutable\nconst cloneResponse = (response: Response) =>\n\t// https://fetch.spec.whatwg.org/#null-body-status\n\tnew Response(\n\t\t[101, 204, 205, 304].includes(response.status) ? null : response.body,\n\t\tresponse\n\t);\n", "/**\n * Tokenizer results.\n */\ninterface LexToken {\n  type:\n    | \"OPEN\"\n    | \"CLOSE\"\n    | \"PATTERN\"\n    | \"NAME\"\n    | \"CHAR\"\n    | \"ESCAPED_CHAR\"\n    | \"MODIFIER\"\n    | \"END\";\n  index: number;\n  value: string;\n}\n\n/**\n * Tokenize input string.\n */\nfunction lexer(str: string): LexToken[] {\n  const tokens: LexToken[] = [];\n  let i = 0;\n\n  while (i < str.length) {\n    const char = str[i];\n\n    if (char === \"*\" || char === \"+\" || char === \"?\") {\n      tokens.push({ type: \"MODIFIER\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"\\\\\") {\n      tokens.push({ type: \"ESCAPED_CHAR\", index: i++, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"{\") {\n      tokens.push({ type: \"OPEN\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \"}\") {\n      tokens.push({ type: \"CLOSE\", index: i, value: str[i++] });\n      continue;\n    }\n\n    if (char === \":\") {\n      let name = \"\";\n      let j = i + 1;\n\n      while (j < str.length) {\n        const code = str.charCodeAt(j);\n\n        if (\n          // `0-9`\n          (code >= 48 && code <= 57) ||\n          // `A-Z`\n          (code >= 65 && code <= 90) ||\n          // `a-z`\n          (code >= 97 && code <= 122) ||\n          // `_`\n          code === 95\n        ) {\n          name += str[j++];\n          continue;\n        }\n\n        break;\n      }\n\n      if (!name) throw new TypeError(`Missing parameter name at ${i}`);\n\n      tokens.push({ type: \"NAME\", index: i, value: name });\n      i = j;\n      continue;\n    }\n\n    if (char === \"(\") {\n      let count = 1;\n      let pattern = \"\";\n      let j = i + 1;\n\n      if (str[j] === \"?\") {\n        throw new TypeError(`Pattern cannot start with \"?\" at ${j}`);\n      }\n\n      while (j < str.length) {\n        if (str[j] === \"\\\\\") {\n          pattern += str[j++] + str[j++];\n          continue;\n        }\n\n        if (str[j] === \")\") {\n          count--;\n          if (count === 0) {\n            j++;\n            break;\n          }\n        } else if (str[j] === \"(\") {\n          count++;\n          if (str[j + 1] !== \"?\") {\n            throw new TypeError(`Capturing groups are not allowed at ${j}`);\n          }\n        }\n\n        pattern += str[j++];\n      }\n\n      if (count) throw new TypeError(`Unbalanced pattern at ${i}`);\n      if (!pattern) throw new TypeError(`Missing pattern at ${i}`);\n\n      tokens.push({ type: \"PATTERN\", index: i, value: pattern });\n      i = j;\n      continue;\n    }\n\n    tokens.push({ type: \"CHAR\", index: i, value: str[i++] });\n  }\n\n  tokens.push({ type: \"END\", index: i, value: \"\" });\n\n  return tokens;\n}\n\nexport interface ParseOptions {\n  /**\n   * Set the default delimiter for repeat parameters. (default: `'/'`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters to automatically consider prefixes when parsing.\n   */\n  prefixes?: string;\n}\n\n/**\n * Parse a string for the raw tokens.\n */\nexport function parse(str: string, options: ParseOptions = {}): Token[] {\n  const tokens = lexer(str);\n  const { prefixes = \"./\", delimiter = \"/#?\" } = options;\n  const result: Token[] = [];\n  let key = 0;\n  let i = 0;\n  let path = \"\";\n\n  const tryConsume = (type: LexToken[\"type\"]): string | undefined => {\n    if (i < tokens.length && tokens[i].type === type) return tokens[i++].value;\n  };\n\n  const mustConsume = (type: LexToken[\"type\"]): string => {\n    const value = tryConsume(type);\n    if (value !== undefined) return value;\n    const { type: nextType, index } = tokens[i];\n    throw new TypeError(`Unexpected ${nextType} at ${index}, expected ${type}`);\n  };\n\n  const consumeText = (): string => {\n    let result = \"\";\n    let value: string | undefined;\n    while ((value = tryConsume(\"CHAR\") || tryConsume(\"ESCAPED_CHAR\"))) {\n      result += value;\n    }\n    return result;\n  };\n\n  const isSafe = (value: string): boolean => {\n    for (const char of delimiter) if (value.indexOf(char) > -1) return true;\n    return false;\n  };\n\n  const safePattern = (prefix: string) => {\n    const prev = result[result.length - 1];\n    const prevText = prefix || (prev && typeof prev === \"string\" ? prev : \"\");\n\n    if (prev && !prevText) {\n      throw new TypeError(\n        `Must have text between two parameters, missing text after \"${(prev as Key).name}\"`,\n      );\n    }\n\n    if (!prevText || isSafe(prevText)) return `[^${escapeString(delimiter)}]+?`;\n    return `(?:(?!${escapeString(prevText)})[^${escapeString(delimiter)}])+?`;\n  };\n\n  while (i < tokens.length) {\n    const char = tryConsume(\"CHAR\");\n    const name = tryConsume(\"NAME\");\n    const pattern = tryConsume(\"PATTERN\");\n\n    if (name || pattern) {\n      let prefix = char || \"\";\n\n      if (prefixes.indexOf(prefix) === -1) {\n        path += prefix;\n        prefix = \"\";\n      }\n\n      if (path) {\n        result.push(path);\n        path = \"\";\n      }\n\n      result.push({\n        name: name || key++,\n        prefix,\n        suffix: \"\",\n        pattern: pattern || safePattern(prefix),\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    const value = char || tryConsume(\"ESCAPED_CHAR\");\n    if (value) {\n      path += value;\n      continue;\n    }\n\n    if (path) {\n      result.push(path);\n      path = \"\";\n    }\n\n    const open = tryConsume(\"OPEN\");\n    if (open) {\n      const prefix = consumeText();\n      const name = tryConsume(\"NAME\") || \"\";\n      const pattern = tryConsume(\"PATTERN\") || \"\";\n      const suffix = consumeText();\n\n      mustConsume(\"CLOSE\");\n\n      result.push({\n        name: name || (pattern ? key++ : \"\"),\n        pattern: name && !pattern ? safePattern(prefix) : pattern,\n        prefix,\n        suffix,\n        modifier: tryConsume(\"MODIFIER\") || \"\",\n      });\n      continue;\n    }\n\n    mustConsume(\"END\");\n  }\n\n  return result;\n}\n\nexport interface TokensToFunctionOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * Function for encoding input strings for output.\n   */\n  encode?: (value: string, token: Key) => string;\n  /**\n   * When `false` the function can produce an invalid (unmatched) path. (default: `true`)\n   */\n  validate?: boolean;\n}\n\n/**\n * Compile a string to a template function for the path.\n */\nexport function compile<P extends object = object>(\n  str: string,\n  options?: ParseOptions & TokensToFunctionOptions,\n) {\n  return tokensToFunction<P>(parse(str, options), options);\n}\n\nexport type PathFunction<P extends object = object> = (data?: P) => string;\n\n/**\n * Expose a method for transforming tokens into the path function.\n */\nexport function tokensToFunction<P extends object = object>(\n  tokens: Token[],\n  options: TokensToFunctionOptions = {},\n): PathFunction<P> {\n  const reFlags = flags(options);\n  const { encode = (x: string) => x, validate = true } = options;\n\n  // Compile all the tokens into regexps.\n  const matches = tokens.map((token) => {\n    if (typeof token === \"object\") {\n      return new RegExp(`^(?:${token.pattern})$`, reFlags);\n    }\n  });\n\n  return (data: Record<string, any> | null | undefined) => {\n    let path = \"\";\n\n    for (let i = 0; i < tokens.length; i++) {\n      const token = tokens[i];\n\n      if (typeof token === \"string\") {\n        path += token;\n        continue;\n      }\n\n      const value = data ? data[token.name] : undefined;\n      const optional = token.modifier === \"?\" || token.modifier === \"*\";\n      const repeat = token.modifier === \"*\" || token.modifier === \"+\";\n\n      if (Array.isArray(value)) {\n        if (!repeat) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to not repeat, but got an array`,\n          );\n        }\n\n        if (value.length === 0) {\n          if (optional) continue;\n\n          throw new TypeError(`Expected \"${token.name}\" to not be empty`);\n        }\n\n        for (let j = 0; j < value.length; j++) {\n          const segment = encode(value[j], token);\n\n          if (validate && !(matches[i] as RegExp).test(segment)) {\n            throw new TypeError(\n              `Expected all \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n            );\n          }\n\n          path += token.prefix + segment + token.suffix;\n        }\n\n        continue;\n      }\n\n      if (typeof value === \"string\" || typeof value === \"number\") {\n        const segment = encode(String(value), token);\n\n        if (validate && !(matches[i] as RegExp).test(segment)) {\n          throw new TypeError(\n            `Expected \"${token.name}\" to match \"${token.pattern}\", but got \"${segment}\"`,\n          );\n        }\n\n        path += token.prefix + segment + token.suffix;\n        continue;\n      }\n\n      if (optional) continue;\n\n      const typeOfMessage = repeat ? \"an array\" : \"a string\";\n      throw new TypeError(`Expected \"${token.name}\" to be ${typeOfMessage}`);\n    }\n\n    return path;\n  };\n}\n\nexport interface RegexpToFunctionOptions {\n  /**\n   * Function for decoding strings for params.\n   */\n  decode?: (value: string, token: Key) => string;\n}\n\n/**\n * A match result contains data about the path match.\n */\nexport interface MatchResult<P extends object = object> {\n  path: string;\n  index: number;\n  params: P;\n}\n\n/**\n * A match is either `false` (no match) or a match result.\n */\nexport type Match<P extends object = object> = false | MatchResult<P>;\n\n/**\n * The match function takes a string and returns whether it matched the path.\n */\nexport type MatchFunction<P extends object = object> = (\n  path: string,\n) => Match<P>;\n\n/**\n * Create path match function from `path-to-regexp` spec.\n */\nexport function match<P extends object = object>(\n  str: Path,\n  options?: ParseOptions & TokensToRegexpOptions & RegexpToFunctionOptions,\n) {\n  const keys: Key[] = [];\n  const re = pathToRegexp(str, keys, options);\n  return regexpToFunction<P>(re, keys, options);\n}\n\n/**\n * Create a path match function from `path-to-regexp` output.\n */\nexport function regexpToFunction<P extends object = object>(\n  re: RegExp,\n  keys: Key[],\n  options: RegexpToFunctionOptions = {},\n): MatchFunction<P> {\n  const { decode = (x: string) => x } = options;\n\n  return function (pathname: string) {\n    const m = re.exec(pathname);\n    if (!m) return false;\n\n    const { 0: path, index } = m;\n    const params = Object.create(null);\n\n    for (let i = 1; i < m.length; i++) {\n      if (m[i] === undefined) continue;\n\n      const key = keys[i - 1];\n\n      if (key.modifier === \"*\" || key.modifier === \"+\") {\n        params[key.name] = m[i].split(key.prefix + key.suffix).map((value) => {\n          return decode(value, key);\n        });\n      } else {\n        params[key.name] = decode(m[i], key);\n      }\n    }\n\n    return { path, index, params };\n  };\n}\n\n/**\n * Escape a regular expression string.\n */\nfunction escapeString(str: string) {\n  return str.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g, \"\\\\$1\");\n}\n\n/**\n * Get the flags for a regexp from the options.\n */\nfunction flags(options?: { sensitive?: boolean }) {\n  return options && options.sensitive ? \"\" : \"i\";\n}\n\n/**\n * Metadata about a key.\n */\nexport interface Key {\n  name: string | number;\n  prefix: string;\n  suffix: string;\n  pattern: string;\n  modifier: string;\n}\n\n/**\n * A token is a string (nothing special) or key metadata (capture group).\n */\nexport type Token = string | Key;\n\n/**\n * Pull out keys from a regexp.\n */\nfunction regexpToRegexp(path: RegExp, keys?: Key[]): RegExp {\n  if (!keys) return path;\n\n  const groupsRegex = /\\((?:\\?<(.*?)>)?(?!\\?)/g;\n\n  let index = 0;\n  let execResult = groupsRegex.exec(path.source);\n  while (execResult) {\n    keys.push({\n      // Use parenthesized substring match if available, index otherwise\n      name: execResult[1] || index++,\n      prefix: \"\",\n      suffix: \"\",\n      modifier: \"\",\n      pattern: \"\",\n    });\n    execResult = groupsRegex.exec(path.source);\n  }\n\n  return path;\n}\n\n/**\n * Transform an array into a regexp.\n */\nfunction arrayToRegexp(\n  paths: Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n): RegExp {\n  const parts = paths.map((path) => pathToRegexp(path, keys, options).source);\n  return new RegExp(`(?:${parts.join(\"|\")})`, flags(options));\n}\n\n/**\n * Create a path regexp from string input.\n */\nfunction stringToRegexp(\n  path: string,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  return tokensToRegexp(parse(path, options), keys, options);\n}\n\nexport interface TokensToRegexpOptions {\n  /**\n   * When `true` the regexp will be case sensitive. (default: `false`)\n   */\n  sensitive?: boolean;\n  /**\n   * When `true` the regexp won't allow an optional trailing delimiter to match. (default: `false`)\n   */\n  strict?: boolean;\n  /**\n   * When `true` the regexp will match to the end of the string. (default: `true`)\n   */\n  end?: boolean;\n  /**\n   * When `true` the regexp will match from the beginning of the string. (default: `true`)\n   */\n  start?: boolean;\n  /**\n   * Sets the final character for non-ending optimistic matches. (default: `/`)\n   */\n  delimiter?: string;\n  /**\n   * List of characters that can also be \"end\" characters.\n   */\n  endsWith?: string;\n  /**\n   * Encode path tokens for use in the `RegExp`.\n   */\n  encode?: (value: string) => string;\n}\n\n/**\n * Expose a function for taking tokens and returning a RegExp.\n */\nexport function tokensToRegexp(\n  tokens: Token[],\n  keys?: Key[],\n  options: TokensToRegexpOptions = {},\n) {\n  const {\n    strict = false,\n    start = true,\n    end = true,\n    encode = (x: string) => x,\n    delimiter = \"/#?\",\n    endsWith = \"\",\n  } = options;\n  const endsWithRe = `[${escapeString(endsWith)}]|$`;\n  const delimiterRe = `[${escapeString(delimiter)}]`;\n  let route = start ? \"^\" : \"\";\n\n  // Iterate over the tokens and create our regexp string.\n  for (const token of tokens) {\n    if (typeof token === \"string\") {\n      route += escapeString(encode(token));\n    } else {\n      const prefix = escapeString(encode(token.prefix));\n      const suffix = escapeString(encode(token.suffix));\n\n      if (token.pattern) {\n        if (keys) keys.push(token);\n\n        if (prefix || suffix) {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            const mod = token.modifier === \"*\" ? \"?\" : \"\";\n            route += `(?:${prefix}((?:${token.pattern})(?:${suffix}${prefix}(?:${token.pattern}))*)${suffix})${mod}`;\n          } else {\n            route += `(?:${prefix}(${token.pattern})${suffix})${token.modifier}`;\n          }\n        } else {\n          if (token.modifier === \"+\" || token.modifier === \"*\") {\n            throw new TypeError(\n              `Can not repeat \"${token.name}\" without a prefix and suffix`,\n            );\n          }\n\n          route += `(${token.pattern})${token.modifier}`;\n        }\n      } else {\n        route += `(?:${prefix}${suffix})${token.modifier}`;\n      }\n    }\n  }\n\n  if (end) {\n    if (!strict) route += `${delimiterRe}?`;\n\n    route += !options.endsWith ? \"$\" : `(?=${endsWithRe})`;\n  } else {\n    const endToken = tokens[tokens.length - 1];\n    const isEndDelimited =\n      typeof endToken === \"string\"\n        ? delimiterRe.indexOf(endToken[endToken.length - 1]) > -1\n        : endToken === undefined;\n\n    if (!strict) {\n      route += `(?:${delimiterRe}(?=${endsWithRe}))?`;\n    }\n\n    if (!isEndDelimited) {\n      route += `(?=${delimiterRe}|${endsWithRe})`;\n    }\n  }\n\n  return new RegExp(route, flags(options));\n}\n\n/**\n * Supported `path-to-regexp` input types.\n */\nexport type Path = string | RegExp | Array<string | RegExp>;\n\n/**\n * Normalize the given path string, returning a regular expression.\n *\n * An empty array can be passed in for the keys, which will hold the\n * placeholder key descriptions. For example, using `/user/:id`, `keys` will\n * contain `[{ name: 'id', delimiter: '/', optional: false, repeat: false }]`.\n */\nexport function pathToRegexp(\n  path: Path,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions,\n) {\n  if (path instanceof RegExp) return regexpToRegexp(path, keys);\n  if (Array.isArray(path)) return arrayToRegexp(path, keys, options);\n  return stringToRegexp(path, keys, options);\n}\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "import type { Middleware } from \"./common\";\n\nconst drainBody: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} finally {\n\t\ttry {\n\t\t\tif (request.body !== null && !request.bodyUsed) {\n\t\t\t\tconst reader = request.body.getReader();\n\t\t\t\twhile (!(await reader.read()).done) {}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to drain the unused request body.\", e);\n\t\t}\n\t}\n};\n\nexport default drainBody;\n", "import type { Middleware } from \"./common\";\n\ninterface JsonError {\n\tmessage?: string;\n\tname?: string;\n\tstack?: string;\n\tcause?: JsonError;\n}\n\nfunction reduceError(e: any): JsonError {\n\treturn {\n\t\tname: e?.name,\n\t\tmessage: e?.message ?? String(e),\n\t\tstack: e?.stack,\n\t\tcause: e?.cause === undefined ? undefined : reduceError(e.cause),\n\t};\n}\n\n// See comment in `bundle.ts` for details on why this is needed\nconst jsonError: Middleware = async (request, env, _ctx, middlewareCtx) => {\n\ttry {\n\t\treturn await middlewareCtx.next(request, env);\n\t} catch (e: any) {\n\t\tconst error = reduceError(e);\n\t\treturn Response.json(error, {\n\t\t\tstatus: 500,\n\t\t\theaders: { \"MF-Experimental-Error-Stack\": \"true\" },\n\t\t});\n\t}\n};\n\nexport default jsonError;\n", "\t\t\t\timport worker, * as OTHER_EXPORTS from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/.wrangler/tmp/pages-OkNYjb/functionsWorker-0.8634646317432765.mjs\";\n\t\t\t\timport * as __MIDDLEWARE_0__ from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/node_modules/wrangler/templates/middleware/middleware-ensure-req-body-drained.ts\";\nimport * as __MIDDLEWARE_1__ from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/node_modules/wrangler/templates/middleware/middleware-miniflare3-json-error.ts\";\n\n\t\t\t\texport * from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/.wrangler/tmp/pages-OkNYjb/functionsWorker-0.8634646317432765.mjs\";\n\t\t\t\tconst MIDDLEWARE_TEST_INJECT = \"__INJECT_FOR_TESTING_WRANGLER_MIDDLEWARE__\";\n\t\t\t\texport const __INTERNAL_WRANGLER_MIDDLEWARE__ = [\n\t\t\t\t\t\n\t\t\t\t\t__MIDDLEWARE_0__.default,__MIDDLEWARE_1__.default\n\t\t\t\t]\n\t\t\t\texport default worker;", "export type Awaitable<T> = T | Promise<T>;\n// TODO: allow dispatching more events?\nexport type Dispatcher = (\n\ttype: \"scheduled\",\n\tinit: { cron?: string }\n) => Awaitable<void>;\n\nexport type IncomingRequest = Request<\n\tunknown,\n\tIncomingRequestCfProperties<unknown>\n>;\n\nexport interface MiddlewareContext {\n\tdispatch: Dispatcher;\n\tnext(request: IncomingRequest, env: any): Awaitable<Response>;\n}\n\nexport type Middleware = (\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tmiddlewareCtx: MiddlewareContext\n) => Awaitable<Response>;\n\nconst __facade_middleware__: Middleware[] = [];\n\n// The register functions allow for the insertion of one or many middleware,\n// We register internal middleware first in the stack, but have no way of controlling\n// the order that addMiddleware is run in service workers so need an internal function.\nexport function __facade_register__(...args: (Middleware | Middleware[])[]) {\n\t__facade_middleware__.push(...args.flat());\n}\nexport function __facade_registerInternal__(\n\t...args: (Middleware | Middleware[])[]\n) {\n\t__facade_middleware__.unshift(...args.flat());\n}\n\nfunction __facade_invokeChain__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tmiddlewareChain: Middleware[]\n): Awaitable<Response> {\n\tconst [head, ...tail] = middlewareChain;\n\tconst middlewareCtx: MiddlewareContext = {\n\t\tdispatch,\n\t\tnext(newRequest, newEnv) {\n\t\t\treturn __facade_invokeChain__(newRequest, newEnv, ctx, dispatch, tail);\n\t\t},\n\t};\n\treturn head(request, env, ctx, middlewareCtx);\n}\n\nexport function __facade_invoke__(\n\trequest: IncomingRequest,\n\tenv: any,\n\tctx: ExecutionContext,\n\tdispatch: Dispatcher,\n\tfinalMiddleware: Middleware\n): Awaitable<Response> {\n\treturn __facade_invokeChain__(request, env, ctx, dispatch, [\n\t\t...__facade_middleware__,\n\t\tfinalMiddleware,\n\t]);\n}\n", "// This loads all middlewares exposed on the middleware object and then starts\n// the invocation chain. The big idea is that we can add these to the middleware\n// export dynamically through wrangler, or we can potentially let users directly\n// add them as a sort of \"plugin\" system.\n\nimport ENTRY, { __INTERNAL_WRANGLER_MIDDLEWARE__ } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/.wrangler/tmp/bundle-FWfNe3/middleware-insertion-facade.js\";\nimport { __facade_invoke__, __facade_register__, Dispatcher } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/node_modules/wrangler/templates/middleware/common.ts\";\nimport type { WorkerEntrypointConstructor } from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/.wrangler/tmp/bundle-FWfNe3/middleware-insertion-facade.js\";\n\n// Preserve all the exports from the worker\nexport * from \"/Users/sjoerdcopier/PhpstormProjects/affensus_web/.wrangler/tmp/bundle-FWfNe3/middleware-insertion-facade.js\";\n\nclass __Facade_ScheduledController__ implements ScheduledController {\n\treadonly #noRetry: ScheduledController[\"noRetry\"];\n\n\tconstructor(\n\t\treadonly scheduledTime: number,\n\t\treadonly cron: string,\n\t\tnoRetry: ScheduledController[\"noRetry\"]\n\t) {\n\t\tthis.#noRetry = noRetry;\n\t}\n\n\tnoRetry() {\n\t\tif (!(this instanceof __Facade_ScheduledController__)) {\n\t\t\tthrow new TypeError(\"Illegal invocation\");\n\t\t}\n\t\t// Need to call native method immediately in case uncaught error thrown\n\t\tthis.#noRetry();\n\t}\n}\n\nfunction wrapExportedHandler(worker: ExportedHandler): ExportedHandler {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn worker;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\tconst fetchDispatcher: ExportedHandlerFetchHandler = function (\n\t\trequest,\n\t\tenv,\n\t\tctx\n\t) {\n\t\tif (worker.fetch === undefined) {\n\t\t\tthrow new Error(\"Handler does not export a fetch() function.\");\n\t\t}\n\t\treturn worker.fetch(request, env, ctx);\n\t};\n\n\treturn {\n\t\t...worker,\n\t\tfetch(request, env, ctx) {\n\t\t\tconst dispatcher: Dispatcher = function (type, init) {\n\t\t\t\tif (type === \"scheduled\" && worker.scheduled !== undefined) {\n\t\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\t\tDate.now(),\n\t\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t\t() => {}\n\t\t\t\t\t);\n\t\t\t\t\treturn worker.scheduled(controller, env, ctx);\n\t\t\t\t}\n\t\t\t};\n\t\t\treturn __facade_invoke__(request, env, ctx, dispatcher, fetchDispatcher);\n\t\t},\n\t};\n}\n\nfunction wrapWorkerEntrypoint(\n\tklass: WorkerEntrypointConstructor\n): WorkerEntrypointConstructor {\n\t// If we don't have any middleware defined, just return the handler as is\n\tif (\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__ === undefined ||\n\t\t__INTERNAL_WRANGLER_MIDDLEWARE__.length === 0\n\t) {\n\t\treturn klass;\n\t}\n\t// Otherwise, register all middleware once\n\tfor (const middleware of __INTERNAL_WRANGLER_MIDDLEWARE__) {\n\t\t__facade_register__(middleware);\n\t}\n\n\t// `extend`ing `klass` here so other RPC methods remain callable\n\treturn class extends klass {\n\t\t#fetchDispatcher: ExportedHandlerFetchHandler<Record<string, unknown>> = (\n\t\t\trequest,\n\t\t\tenv,\n\t\t\tctx\n\t\t) => {\n\t\t\tthis.env = env;\n\t\t\tthis.ctx = ctx;\n\t\t\tif (super.fetch === undefined) {\n\t\t\t\tthrow new Error(\"Entrypoint class does not define a fetch() function.\");\n\t\t\t}\n\t\t\treturn super.fetch(request);\n\t\t};\n\n\t\t#dispatcher: Dispatcher = (type, init) => {\n\t\t\tif (type === \"scheduled\" && super.scheduled !== undefined) {\n\t\t\t\tconst controller = new __Facade_ScheduledController__(\n\t\t\t\t\tDate.now(),\n\t\t\t\t\tinit.cron ?? \"\",\n\t\t\t\t\t() => {}\n\t\t\t\t);\n\t\t\t\treturn super.scheduled(controller);\n\t\t\t}\n\t\t};\n\n\t\tfetch(request: Request<unknown, IncomingRequestCfProperties>) {\n\t\t\treturn __facade_invoke__(\n\t\t\t\trequest,\n\t\t\t\tthis.env,\n\t\t\t\tthis.ctx,\n\t\t\t\tthis.#dispatcher,\n\t\t\t\tthis.#fetchDispatcher\n\t\t\t);\n\t\t}\n\t};\n}\n\nlet WRAPPED_ENTRY: ExportedHandler | WorkerEntrypointConstructor | undefined;\nif (typeof ENTRY === \"object\") {\n\tWRAPPED_ENTRY = wrapExportedHandler(ENTRY);\n} else if (typeof ENTRY === \"function\") {\n\tWRAPPED_ENTRY = wrapWorkerEntrypoint(ENTRY);\n}\nexport default WRAPPED_ENTRY;\n"],
  "mappings": ";;;;;;;;;;AAAA,IAAM,OAAO,oBAAI,IAAI;AAErB,SAAS,SAAS,SAAS,MAAM;AAChC,QAAM,MACL,mBAAmB,MAChB,UACA,IAAI;AAAA,KACH,OAAO,YAAY,WACjB,IAAI,QAAQ,SAAS,IAAI,IACzB,SACD;AAAA,EACH;AACH,MAAI,IAAI,QAAQ,IAAI,SAAS,SAAS,IAAI,aAAa,UAAU;AAChE,QAAI,CAAC,KAAK,IAAI,IAAI,SAAS,CAAC,GAAG;AAC9B,WAAK,IAAI,IAAI,SAAS,CAAC;AACvB,cAAQ;AAAA,QACP;AAAA,KACO,IAAI,SAAS,CAAC;AAAA;AAAA,MACtB;AAAA,IACD;AAAA,EACD;AACD;AAnBS;AAqBT,WAAW,QAAQ,IAAI,MAAM,WAAW,OAAO;AAAA,EAC9C,MAAM,QAAQ,SAAS,UAAU;AAChC,UAAM,CAAC,SAAS,IAAI,IAAI;AACxB,aAAS,SAAS,IAAI;AACtB,WAAO,QAAQ,MAAM,QAAQ,SAAS,QAAQ;AAAA,EAC/C;AACD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BD,SAASA,UAAS,SAAS,MAAM;AAChC,QAAM,MACL,mBAAmB,MAChB,UACA,IAAI;KACH,OAAO,YAAY,WACjB,IAAI,QAAQ,SAAS,IAAI,IACzB,SACD;EACH;AACH,MAAI,IAAI,QAAQ,IAAI,SAAS,SAAS,IAAI,aAAa,UAAU;AAChE,QAAI,CAACC,MAAK,IAAI,IAAI,SAAS,CAAC,GAAG;AAC9B,MAAAA,MAAK,IAAI,IAAI,SAAS,CAAC;AACvB,cAAQ;QACP;KACO,IAAI,SAAS,CAAC;;MACtB;IACD;EACD;AACD;AAnBS,OAAAD,WAAA;AAFT,IAAMC;AAAN,IAAA,qBAAA,MAAA;EAAA,oDAAA;AAAA;AAAM,IAAAA,QAAO,oBAAI,IAAI;AAEZ,IAAAC,QAAAF,WAAA,UAAA;AAqBT,eAAW,QAAQ,IAAI,MAAM,WAAW,OAAO;MAC9C,MAAM,QAAQ,SAAS,UAAU;AAChC,cAAM,CAAC,SAAS,IAAI,IAAI;AACxB,QAAAA,UAAS,SAAS,IAAI;AACtB,eAAO,QAAQ,MAAM,QAAQ,SAAS,QAAQ;MAC/C;IACD,CAAC;EAAA;AAAA,CAAA;AC7BD,eAAsB,mBAAmB;AACvC,SAAO,IAAI,SAAS,MAAM;IACxB,QAAQ;IACR,SAAS;MACP,+BAA+B;MAC/B,gCAAgC;MAChC,gCAAgC;IAClC;EACF,CAAC;AACH;AATsB;AAWtB,eAAsB,aAAa,SAAsD;AACvF,MAAI;AACF,UAAM,EAAE,KAAK,OAAO,IAAI;AACxB,UAAM,YAAY,OAAO;AACzB,UAAM,iBAAiB,OAAO;AAE9B,QAAI,CAAC,aAAa,CAAC,gBAAgB;AACjC,aAAO,IAAI,SAAS,KAAK,UAAU;QACjC,SAAS;QACT,OAAO;MACT,CAAC,GAAG;QACF,QAAQ;QACR,SAAS,EAAE,gBAAgB,mBAAmB;MAChD,CAAC;IACH;AAEA,UAAM,cAAc,IAAI;AACxB,QAAI,CAAC,aAAa;AAChB,YAAM,IAAI,MAAM,8CAA8C;IAChE;AAEA,UAAM,SAAS,gDAAgD,SAAS,IAAI,cAAc;AAE1F,UAAM,WAAW,MAAM,MAAM,QAAQ;MACnC,QAAQ;MACR,SAAS;QACP,gBAAgB;QAChB,iBAAiB,UAAU,WAAW;MACxC;IACF,CAAC;AAED,QAAI,CAAC,SAAS,IAAI;AAChB,YAAM,YAAY,MAAM,SAAS,KAAK;AACtC,YAAM,IAAI,MAAM,uBAAuB,SAAS,MAAM,IAAI,SAAS,UAAU,MAAM,SAAS,EAAE;IAChG;AAEA,UAAM,OAAO,MAAM,SAAS,KAAK;AAEjC,WAAO,IAAI,SAAS,KAAK,UAAU;MACjC,SAAS;MACT;IACF,CAAC,GAAG;MACF,QAAQ;MACR,SAAS;QACP,gBAAgB;QAChB,iBAAiB;MACnB;IACF,CAAC;EACH,SAAS,OAAO;AACd,YAAQ,MAAM,uCAAuC,KAAK;AAC1D,WAAO,IAAI,SAAS,KAAK,UAAU;MACjC,SAAS;MACT,OAAO;IACT,CAAC,GAAG;MACF,QAAQ;MACR,SAAS,EAAE,gBAAgB,mBAAmB;IAChD,CAAC;EACH;AACF;AA1DsB;AAXtB,IAAA,YAAA,MAAA;EAAA,6DAAA;AAAA;AAAA,4CAAA;AAAA,uBAAA;AAAsB,IAAAE,QAAA,kBAAA,kBAAA;AAWA,IAAAA,QAAA,cAAA,cAAA;EAAA;AAAA,CAAA;ACXtB,IAAA,8BAAA,CAAA;AAAA,SAAA,6BAAA;EAAA,yBAAA,6BAAA,yBAAA;AAAA,CAAA;AAAA,eAAe,wBAAwB,WAAmB,aAAqB,cAAsB;AACnG,QAAM,WAAW,MAAM,MAAM,iCAAiC;IAC5D,QAAQ;IACR,SAAS;MACP,iBAAiB,UAAU,YAAY;MACvC,gBAAgB;IAClB;IACA,MAAM,KAAK,UAAU;MACnB,MAAM;MACN,IAAI;MACJ,SAAS;MACT,MAAM;;;;;;;;;gFASoE,SAAS;uFACF,WAAW;6FACN,oBAAI,KAAK,GAAE,YAAY,CAAC;;;;;;;;;;;;;;MAc9G,MAAM;;;;WAID,SAAS;kBACF,WAAW;wBACN,oBAAI,KAAK,GAAE,YAAY,CAAC;;;;;QAKvC,KAAK;IACT,CAAC;EACH,CAAC;AAED,MAAI,CAAC,SAAS,IAAI;AAChB,UAAM,YAAY,MAAM,SAAS,KAAK;AACtC,YAAQ,MAAM,yCAAyC,SAAS;AAEhE,WAAO;EACT;AAEA,QAAM,SAAS,MAAM,SAAS,KAAK;AACnC,UAAQ,IAAI,4CAA4C,MAAM;AAC9D,SAAO;AACT;AA7De;AAAf,IAAA,2BAAA,MAAA;EAAA,2CAAA;AAAA;AAAA,4CAAA;AAAA,uBAAA;AAAe,IAAAA,QAAA,yBAAA,yBAAA;EAAA;AAAA,CAAA;ACMf,SAAS,aAAa,cAAqD;AACzE,QAAM,UAAkC,CAAC;AACzC,MAAI,CAAC,aAAc,QAAO;AAE1B,eAAa,MAAM,GAAG,EAAE,QAAQ,CAAA,WAAU;AACxC,UAAM,QAAQ,OAAO,KAAK,EAAE,MAAM,GAAG;AACrC,QAAI,MAAM,WAAW,GAAG;AAEtB,cAAQ,MAAM,CAAC,CAAC,IAAI,mBAAmB,MAAM,CAAC,CAAC;IACjD;EACF,CAAC;AACD,SAAO;AACT;AAZS;AAcT,eAAe,QAAQ,SAAc,QAAgB,WAAoC;AACvF,QAAM,SAAS,EAAE,KAAK,SAAS,KAAK,MAAM;AAC1C,QAAM,MAAM,KAAK,MAAM,KAAK,IAAI,IAAI,GAAI;AACxC,QAAM,MAAM,MAAM;AAElB,QAAM,aAAa,EAAE,GAAG,SAAS,KAAK,KAAK,IAAI;AAE/C,QAAM,UAAU,IAAI,YAAY;AAChC,QAAM,MAAM,MAAM,OAAO,OAAO;IAC9B;IACA,QAAQ,OAAO,MAAM;IACrB,EAAE,MAAM,QAAQ,MAAM,UAAU;IAChC;IACA,CAAC,MAAM;EACT;AAEA,QAAM,YAAY,KAAK,KAAK,UAAU,MAAM,CAAC,EAAE,QAAQ,MAAM,EAAE,EAAE,QAAQ,OAAO,GAAG,EAAE,QAAQ,OAAO,GAAG;AACvG,QAAM,aAAa,KAAK,KAAK,UAAU,UAAU,CAAC,EAAE,QAAQ,MAAM,EAAE,EAAE,QAAQ,OAAO,GAAG,EAAE,QAAQ,OAAO,GAAG;AAE5G,QAAM,uBAAuB,MAAM,OAAO,OAAO;IAC/C;IACA;IACA,QAAQ,OAAO,GAAG,SAAS,IAAI,UAAU,EAAE;EAC7C;AAEA,QAAM,eAAe,KAAK,OAAO,aAAa,GAAG,IAAI,WAAW,oBAAoB,CAAC,CAAC,EACnF,QAAQ,MAAM,EAAE,EAAE,QAAQ,OAAO,GAAG,EAAE,QAAQ,OAAO,GAAG;AAE3D,SAAO,GAAG,SAAS,IAAI,UAAU,IAAI,YAAY;AACnD;AA7Be;AA+Bf,eAAsB,aAAa,SAAc;AAC/C,MAAI;AACF,UAAM,EAAE,SAAS,IAAI,IAAI;AACzB,UAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,UAAM,OAAO,IAAI,aAAa,IAAI,MAAM;AACxC,UAAM,QAAQ,IAAI,aAAa,IAAI,OAAO;AAC1C,UAAM,QAAQ,IAAI,aAAa,IAAI,OAAO;AAE1C,UAAM,kBAAkB,IAAI;AAC5B,UAAM,sBAAsB,IAAI;AAChC,UAAM,wBAAwB,GAAG,IAAI,YAAY,uBAAuB;AAGxE,QAAI,OAAO;AACT,cAAQ,MAAM,yBAAyB,KAAK;AAC5C,aAAO,IAAI,SAAS,MAAM;QACxB,QAAQ;QACR,SAAS,EAAE,YAAY,GAAG,IAAI,YAAY,uBAAuB,2BAA2B;MAC9F,CAAC;IACH;AAGA,QAAI,CAAC,QAAQ,CAAC,OAAO;AACnB,cAAQ,MAAM,iCAAiC;AAC/C,aAAO,IAAI,SAAS,MAAM;QACxB,QAAQ;QACR,SAAS,EAAE,YAAY,GAAG,IAAI,YAAY,uBAAuB,8BAA8B;MACjG,CAAC;IACH;AAGA,UAAM,UAAU,aAAa,QAAQ,QAAQ,IAAI,QAAQ,CAAC;AAC1D,UAAM,cAAc,QAAQ,aAAa;AACzC,QAAI,CAAC,eAAe,UAAU,aAAa;AACzC,cAAQ,MAAM,yBAAyB;AACvC,aAAO,IAAI,SAAS,MAAM;QACxB,QAAQ;QACR,SAAS,EAAE,YAAY,GAAG,IAAI,YAAY,uBAAuB,4BAA4B;MAC/F,CAAC;IACH;AAGA,QAAI,CAAC,mBAAmB,CAAC,qBAAqB;AAC5C,cAAQ,MAAM,+BAA+B;AAC7C,aAAO,IAAI,SAAS,MAAM;QACxB,QAAQ;QACR,SAAS,EAAE,YAAY,GAAG,IAAI,YAAY,uBAAuB,mCAAmC;MACtG,CAAC;IACH;AAGA,UAAM,gBAAgB,MAAM,MAAM,iEACnB,eAAe,kBACX,mBAAmB,SAC5B,IAAI,iBACI,mBAAmB,qBAAqB,CAAC,EAAE;AAE7D,QAAI,CAAC,cAAc,IAAI;AACrB,cAAQ,MAAM,sCAAsC,MAAM,cAAc,KAAK,CAAC;AAC9E,aAAO,IAAI,SAAS,MAAM;QACxB,QAAQ;QACR,SAAS,EAAE,YAAY,GAAG,IAAI,YAAY,uBAAuB,oCAAoC;MACvG,CAAC;IACH;AAEA,UAAM,YAAY,MAAM,cAAc,KAAK;AAC3C,UAAM,cAAc,UAAU;AAG9B,UAAM,mBAAmB,MAAM;MAC7B,yEAAyE,WAAW;IACtF;AAEA,QAAI,CAAC,iBAAiB,IAAI;AACxB,cAAQ,MAAM,uCAAuC;AACrD,aAAO,IAAI,SAAS,MAAM;QACxB,QAAQ;QACR,SAAS,EAAE,YAAY,GAAG,IAAI,YAAY,uBAAuB,+BAA+B;MAClG,CAAC;IACH;AAEA,UAAM,WAA6B,MAAM,iBAAiB,KAAK;AAG/D,QAAI,CAAC,SAAS,OAAO;AACnB,cAAQ,MAAM,qCAAqC;AACnD,aAAO,IAAI,SAAS,MAAM;QACxB,QAAQ;QACR,SAAS,EAAE,YAAY,GAAG,IAAI,YAAY,uBAAuB,iCAAiC;MACpG,CAAC;IACH;AAGA,UAAM,KAAK,IAAI;AACf,QAAI,CAAC,IAAI;AACP,aAAO,IAAI,SAAS,MAAM;QACxB,QAAQ;QACR,SAAS,EAAE,YAAY,GAAG,IAAI,YAAY,uBAAuB,qCAAqC;MACxG,CAAC;IACH;AAGA,UAAMC,cAAa,gBAAAD,QAAA,OAAOE,KAAS,OAAe,cAAsB,eAAe;AAErF,YAAM,cAAc,IAAI;AACxB,UAAI,CAAC,aAAa;AAChB,cAAM,IAAI,MAAM,8CAA8C;MAChE;AAGA,YAAM,OAAO,SAAS,QAAQ;AAE9B,cAAQ,IAAI,sCAAsC,EAAE,OAAO,MAAM,YAAY,CAAC;AAE9E,YAAM,WAAW,MAAM,MAAM,gDAAgD;QAC3E,QAAQ;QACR,SAAS;UACP,gBAAgB;UAChB,iBAAiB,UAAU,WAAW;QACxC;QACA,MAAM,KAAK,UAAU;UACnB,OAAO,MAAM,YAAY;UACzB;UACA,cAAc;UACd,qBAAqB;QACvB,CAAC;MACH,CAAC;AAED,UAAI,CAAC,SAAS,IAAI;AAChB,cAAM,YAAY,MAAM,SAAS,KAAK;AACtC,gBAAQ,MAAM,4BAA4B,SAAS,QAAQ,SAAS;AACpE,cAAM,IAAI,MAAM,wBAAwB,SAAS,MAAM,IAAI,SAAS,EAAE;MACxE;AAEA,YAAM,WAAW,MAAM,SAAS,KAAK;AAGrC,YAAMC,QAAO;QACX,IAAI,SAAS,MAAM,SAAS,WAAW,KAAK,IAAI;;QAChD,OAAO,MAAM,YAAY;QACzB,wBAAwB;QACxB,qBAAqB;QACrB,aAAY,oBAAI,KAAK,GAAE,YAAY;QACnC,aAAY,oBAAI,KAAK,GAAE,YAAY;MACrC;AAGA,YAAMC,aAAY,SAAS,WAAW;AAEtC,aAAO,EAAE,MAAAD,OAAM,WAAAC,WAAU;IAC3B,GAhDmB,YAAA;AAkDnB,UAAMC,8BAA6B,gBAAAL,QAAA,OAAOE,KAAS,OAAe,WAAmB;AACnF,YAAMA,IAAG,QAAQ;;;;OAIhB,EAAE,KAAK,QAAQ,KAAK,EAAE,IAAI;IAC7B,GANmC,4BAAA;AASnC,UAAM,EAAE,MAAM,UAAU,IAAI,MAAMD,YAAW,IAAI,SAAS,MAAM,YAAY,GAAG,UAAU;AAGzF,UAAMI,4BAA2B,IAAI,SAAS,MAAM,YAAY,GAAG,UAAU;AAG7E,QAAI,WAAW;AACb,YAAM,eAAe,IAAI;AACzB,UAAI,cAAc;AAChB,YAAI;AACF,gBAAM,EAAE,yBAAAC,yBAAwB,IAAI,MAAM,QAAA,QAAA,EAAA,KAAA,OAAA,yBAAA,GAAA,4BAAA;AAC1C,gBAAMA,yBAAwB,KAAK,OAAO,YAAY,YAAY;QACpE,SAASC,QAAO;AACd,kBAAQ,MAAM,yCAAyCA,MAAK;QAE9D;MACF,OAAO;AACL,gBAAQ,IAAI,oFAAoF;MAClG;IACF;AAGA,UAAM,YAAY,IAAI;AACtB,QAAI,CAAC,WAAW;AACd,aAAO,IAAI,SAAS,MAAM;QACxB,QAAQ;QACR,SAAS,EAAE,YAAY,GAAG,IAAI,YAAY,uBAAuB,iCAAiC;MACpG,CAAC;IACH;AAEA,UAAM,WAAW,MAAM;MACrB;QACE,KAAK,KAAK,GAAG,SAAS;QACtB,OAAO,KAAK;QACZ,cAAc;MAChB;MACA;MACA,IAAI,KAAK,KAAK;;IAChB;AAGA,UAAM,OAAO;;;;;;;;;;oCAUmB,IAAI,YAAY,uBAAuB;;;;;;AAQvE,UAAM,eAAe,IAAI,UAAU,WAAW,UAAU,KAAK;AAC7D,UAAM,aAAa,eAAe,aAAa;AAG/C,UAAM,UAAU,IAAI,QAAQ;MAC1B,gBAAgB;IAClB,CAAC;AAGD,YAAQ,OAAO,cAAc,cAAc,QAAQ,eAAe,UAAU,yBAAyB,IAAI,KAAK,KAAK,EAAE,UAAU;AAG/H,YAAQ,OAAO,cAAc,2BAA2B,UAAU,iCAAiC;AAEnG,WAAO,IAAI,SAAS,MAAM;MACxB,QAAQ;MACR;IACF,CAAC;EAEH,SAAS,OAAO;AACd,YAAQ,MAAM,6CAA6C,KAAK;AAChE,WAAO,IAAI,SAAS,MAAM;MACxB,QAAQ;MACR,SAAS,EAAE,YAAY,GAAG,QAAQ,IAAI,YAAY,uBAAuB,6BAA6B;IACxG,CAAC;EACH;AACF;AAtPsB;AAnDtB,IAAA,gBAAA,MAAA;EAAA,kCAAA;AAAA;AAAA,4CAAA;AAAA,uBAAA;AAMS,IAAAP,QAAA,cAAA,cAAA;AAcM,IAAAA,QAAA,SAAA,SAAA;AA+BO,IAAAA,QAAA,cAAA,cAAA;EAAA;AAAA,CAAA;ACpCtB,SAASQ,cAAa,cAAqD;AACzE,QAAM,UAAkC,CAAC;AACzC,MAAI,CAAC,aAAc,QAAO;AAE1B,eAAa,MAAM,GAAG,EAAE,QAAQ,CAAA,WAAU;AACxC,UAAM,QAAQ,OAAO,KAAK,EAAE,MAAM,GAAG;AACrC,QAAI,MAAM,WAAW,GAAG;AAEtB,cAAQ,MAAM,CAAC,CAAC,IAAI,mBAAmB,MAAM,CAAC,CAAC;IACjD;EACF,CAAC;AACD,SAAO;AACT;AAZSA;AAcT,eAAeC,SAAQ,SAAc,QAAgB,WAAoC;AACvF,QAAM,SAAS,EAAE,KAAK,SAAS,KAAK,MAAM;AAC1C,QAAM,MAAM,KAAK,MAAM,KAAK,IAAI,IAAI,GAAI;AACxC,QAAM,MAAM,MAAM;AAElB,QAAM,aAAa,EAAE,GAAG,SAAS,KAAK,KAAK,IAAI;AAE/C,QAAM,UAAU,IAAI,YAAY;AAChC,QAAM,MAAM,MAAM,OAAO,OAAO;IAC9B;IACA,QAAQ,OAAO,MAAM;IACrB,EAAE,MAAM,QAAQ,MAAM,UAAU;IAChC;IACA,CAAC,MAAM;EACT;AAEA,QAAM,YAAY,KAAK,KAAK,UAAU,MAAM,CAAC,EAAE,QAAQ,MAAM,EAAE,EAAE,QAAQ,OAAO,GAAG,EAAE,QAAQ,OAAO,GAAG;AACvG,QAAM,aAAa,KAAK,KAAK,UAAU,UAAU,CAAC,EAAE,QAAQ,MAAM,EAAE,EAAE,QAAQ,OAAO,GAAG,EAAE,QAAQ,OAAO,GAAG;AAE5G,QAAM,uBAAuB,MAAM,OAAO,OAAO;IAC/C;IACA;IACA,QAAQ,OAAO,GAAG,SAAS,IAAI,UAAU,EAAE;EAC7C;AAEA,QAAM,eAAe,KAAK,OAAO,aAAa,GAAG,IAAI,WAAW,oBAAoB,CAAC,CAAC,EACnF,QAAQ,MAAM,EAAE,EAAE,QAAQ,OAAO,GAAG,EAAE,QAAQ,OAAO,GAAG;AAE3D,SAAO,GAAG,SAAS,IAAI,UAAU,IAAI,YAAY;AACnD;AA7BeA;AA+Bf,eAAe,uBAAuB,IAAS,OAAe,QAAgB,iBAA0B;AACtG,MAAI;AAEF,UAAM,kBAAkB,MAAM,GAAG,QAAQ;;;KAGxC,EAAE,KAAK,KAAK,EAAE,IAAI;AAEnB,QAAI,gBAAgB,WAAW,gBAAgB,QAAQ,SAAS,GAAG;AACjE,cAAQ,IAAI,SAAS,gBAAgB,QAAQ,MAAM,2BAA2B,KAAK,EAAE;AAErF,iBAAW,WAAW,gBAAgB,SAAS;AAC7C,YAAI;AACF,cAAI,iBAAiB;AAEnB,kBAAM,kBAAkB,MAAM,MAAM,+CAA+C,QAAQ,UAAU,IAAI;cACvG,SAAS;gBACP,iBAAiB,UAAU,eAAe;cAC5C;YACF,CAAC;AAED,gBAAI,gBAAgB,IAAI;AACtB,oBAAM,UAAU,MAAM,gBAAgB,KAAK;AAG3C,oBAAM,mBAAmB,MAAM,MAAM,uCAAuC;gBAC1E,QAAQ;gBACR,SAAS;kBACP,iBAAiB,UAAU,eAAe;kBAC1C,gBAAgB;gBAClB;gBACA,MAAM,IAAI,gBAAgB;kBACxB;kBACA,MAAM,QAAQ,iBAAiB;kBAC/B,qBAAqB,OAAO,SAAS;kBACrC,wBAAwB,QAAQ;gBAClC,CAAC;cACH,CAAC;AAED,kBAAI,iBAAiB,IAAI;AACvB,sBAAM,WAAW,MAAM,iBAAiB,KAAK;AAG7C,sBAAM,GAAG,QAAQ;;;;iBAIhB,EAAE,KAAK,SAAS,IAAI,MAAM,EAAE,IAAI;AAIjC,oBAAI,qBAAqB;AACzB,oBAAI,QAAQ,iBAAiB,KAAM,sBAAqB;yBAC/C,QAAQ,iBAAiB,KAAM,sBAAqB;yBACpD,QAAQ,iBAAiB,KAAM,sBAAqB;AAE7D,sBAAM,GAAG,QAAQ;;;;;;;iBAOhB,EAAE,KAAK,oBAAoB,MAAM,EAAE,IAAI;AAExC,wBAAQ,IAAI,sCAAsC,MAAM,cAAc,SAAS,EAAE,EAAE;cACrF;YACF;UACF;AAGA,gBAAM,GAAG,QAAQ;;;;WAIhB,EAAE,KAAK,QAAQ,EAAE,EAAE,IAAI;QAE1B,SAAS,OAAO;AACd,kBAAQ,MAAM,qCAAqC,KAAK;QAC1D;MACF;IACF;EACF,SAAS,OAAO;AACd,YAAQ,MAAM,wCAAwC,KAAK;EAC7D;AACF;AArFe;AAuFf,eAAsBC,cAAa,SAAc;AAC/C,MAAI;AACF,UAAM,EAAE,SAAS,IAAI,IAAI;AACzB,UAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,UAAM,OAAO,IAAI,aAAa,IAAI,MAAM;AACxC,UAAM,QAAQ,IAAI,aAAa,IAAI,OAAO;AAC1C,UAAM,QAAQ,IAAI,aAAa,IAAI,OAAO;AAG1C,QAAI,OAAO;AACT,cAAQ,MAAM,uBAAuB,KAAK;AAC1C,aAAO,IAAI,SAAS,MAAM;QACxB,QAAQ;QACR,SAAS,EAAE,YAAY,GAAG,IAAI,YAAY,uBAAuB,2BAA2B;MAC9F,CAAC;IACH;AAEA,QAAI,CAAC,QAAQ,CAAC,OAAO;AACnB,aAAO,IAAI,SAAS,MAAM;QACxB,QAAQ;QACR,SAAS,EAAE,YAAY,GAAG,IAAI,YAAY,uBAAuB,8BAA8B;MACjG,CAAC;IACH;AAGA,UAAM,UAAUF,cAAa,QAAQ,QAAQ,IAAI,QAAQ,CAAC;AAC1D,UAAM,cAAc,QAAQ,aAAa;AAEzC,QAAI,CAAC,eAAe,gBAAgB,OAAO;AACzC,cAAQ,MAAM,iCAAiC;AAC/C,aAAO,IAAI,SAAS,MAAM;QACxB,QAAQ;QACR,SAAS,EAAE,YAAY,GAAG,IAAI,YAAY,uBAAuB,4BAA4B;MAC/F,CAAC;IACH;AAEA,UAAM,mBAAmB,IAAI;AAC7B,UAAM,uBAAuB,IAAI;AAEjC,QAAI,CAAC,oBAAoB,CAAC,sBAAsB;AAC9C,aAAO,IAAI,SAAS,MAAM;QACxB,QAAQ;QACR,SAAS,EAAE,YAAY,GAAG,IAAI,YAAY,uBAAuB,mCAAmC;MACtG,CAAC;IACH;AAGA,UAAM,gBAAgB,MAAM,MAAM,+CAA+C;MAC/E,QAAQ;MACR,SAAS;QACP,UAAU;QACV,gBAAgB;MAClB;MACA,MAAM,IAAI,gBAAgB;QACxB,WAAW;QACX,eAAe;QACf;MACF,CAAC;IACH,CAAC;AAED,QAAI,CAAC,cAAc,IAAI;AACrB,cAAQ,MAAM,sCAAsC,MAAM,cAAc,KAAK,CAAC;AAC9E,aAAO,IAAI,SAAS,MAAM;QACxB,QAAQ;QACR,SAAS,EAAE,YAAY,GAAG,IAAI,YAAY,uBAAuB,oCAAoC;MACvG,CAAC;IACH;AAEA,UAAM,YAAY,MAAM,cAAc,KAAK;AAC3C,UAAM,cAAc,UAAU;AAE9B,QAAI,CAAC,aAAa;AAChB,cAAQ,MAAM,sCAAsC;AACpD,aAAO,IAAI,SAAS,MAAM;QACxB,QAAQ;QACR,SAAS,EAAE,YAAY,GAAG,IAAI,YAAY,uBAAuB,oCAAoC;MACvG,CAAC;IACH;AAGA,UAAM,mBAAmB,MAAM,MAAM,+BAA+B;MAClE,SAAS;QACP,iBAAiB,UAAU,WAAW;QACtC,UAAU;QACV,cAAc;MAChB;IACF,CAAC;AAED,QAAI,CAAC,iBAAiB,IAAI;AACxB,cAAQ,MAAM,qCAAqC;AACnD,aAAO,IAAI,SAAS,MAAM;QACxB,QAAQ;QACR,SAAS,EAAE,YAAY,GAAG,IAAI,YAAY,uBAAuB,+BAA+B;MAClG,CAAC;IACH;AAEA,UAAM,WAA2B,MAAM,iBAAiB,KAAK;AAG7D,QAAI,YAAgC,SAAS;AAC7C,QAAI,CAAC,WAAW;AACd,YAAM,iBAAiB,MAAM,MAAM,sCAAsC;QACvE,SAAS;UACP,iBAAiB,UAAU,WAAW;UACtC,UAAU;UACV,cAAc;QAChB;MACF,CAAC;AAED,UAAI,eAAe,IAAI;AACrB,cAAM,SAA4B,MAAM,eAAe,KAAK;AAC5D,cAAM,eAAe,OAAO,KAAK,CAAA,MAAK,EAAE,WAAW,EAAE,QAAQ;AAC7D,oBAAY,cAAc,SAAS,OAAO,KAAK,CAAA,MAAK,EAAE,QAAQ,GAAG;MACnE;IACF;AAGA,QAAI,CAAC,WAAW;AACd,cAAQ,MAAM,oCAAoC;AAClD,aAAO,IAAI,SAAS,MAAM;QACxB,QAAQ;QACR,SAAS,EAAE,YAAY,GAAG,IAAI,YAAY,uBAAuB,iCAAiC;MACpG,CAAC;IACH;AAGA,UAAM,KAAK,IAAI;AACf,QAAI,CAAC,IAAI;AACP,aAAO,IAAI,SAAS,MAAM;QACxB,QAAQ;QACR,SAAS,EAAE,YAAY,GAAG,IAAI,YAAY,uBAAuB,qCAAqC;MACxG,CAAC;IACH;AAGA,UAAMP,cAAa,gBAAAD,QAAA,OAAOE,KAAS,OAAe,cAAsB,aAAa;AAEnF,YAAM,cAAc,IAAI;AACxB,UAAI,CAAC,aAAa;AAChB,cAAM,IAAI,MAAM,8CAA8C;MAChE;AAGA,YAAM,OAAO,SAAS,QAAQ,SAAS,SAAS;AAEhD,cAAQ,IAAI,sCAAsC,EAAE,OAAO,MAAM,YAAY,CAAC;AAE9E,YAAM,WAAW,MAAM,MAAM,gDAAgD;QAC3E,QAAQ;QACR,SAAS;UACP,gBAAgB;UAChB,iBAAiB,UAAU,WAAW;QACxC;QACA,MAAM,KAAK,UAAU;UACnB,OAAO,MAAM,YAAY;UACzB;UACA,cAAc;UACd,qBAAqB;QACvB,CAAC;MACH,CAAC;AAED,UAAI,CAAC,SAAS,IAAI;AAChB,cAAM,YAAY,MAAM,SAAS,KAAK;AACtC,gBAAQ,MAAM,4BAA4B,SAAS,QAAQ,SAAS;AACpE,cAAM,IAAI,MAAM,wBAAwB,SAAS,MAAM,IAAI,SAAS,EAAE;MACxE;AAEA,YAAM,WAAW,MAAM,SAAS,KAAK;AAGrC,YAAMC,QAAO;QACX,IAAI,SAAS,MAAM,SAAS,WAAW,KAAK,IAAI;;QAChD,OAAO,MAAM,YAAY;QACzB,wBAAwB;QACxB,qBAAqB;QACrB,aAAY,oBAAI,KAAK,GAAE,YAAY;QACnC,aAAY,oBAAI,KAAK,GAAE,YAAY;MACrC;AAGA,YAAMC,aAAY,SAAS,WAAW;AAEtC,aAAO,EAAE,MAAAD,OAAM,WAAAC,WAAU;IAC3B,GAhDmB,YAAA;AAkDnB,UAAMC,8BAA6B,gBAAAL,QAAA,OAAOE,KAAS,OAAe,WAAmB;AACnF,YAAMA,IAAG,QAAQ;;;;OAIhB,EAAE,KAAK,QAAQ,KAAK,EAAE,IAAI;IAC7B,GANmC,4BAAA;AASnC,UAAM,EAAE,MAAM,UAAU,IAAI,MAAMD,YAAW,IAAI,UAAW,YAAY,GAAG,QAAQ;AAGnF,UAAMI,4BAA2B,IAAI,UAAW,YAAY,GAAG,QAAQ;AAGvE,UAAM,uBAAuB,IAAI,UAAW,YAAY,GAAG,KAAK,IAAI,IAAI,iBAAiB;AAGzF,QAAI,WAAW;AACb,YAAM,eAAe,IAAI;AACzB,UAAI,cAAc;AAChB,YAAI;AACF,gBAAM,EAAE,yBAAAC,yBAAwB,IAAI,MAAM,QAAA,QAAA,EAAA,KAAA,OAAA,yBAAA,GAAA,4BAAA;AAC1C,gBAAMA,yBAAwB,KAAK,OAAO,UAAU,YAAY;QAClE,SAASC,QAAO;AACd,kBAAQ,MAAM,yCAAyCA,MAAK;QAE9D;MACF,OAAO;AACL,gBAAQ,IAAI,oFAAoF;MAClG;IACF;AAGA,UAAM,YAAY,IAAI;AACtB,QAAI,CAAC,WAAW;AACd,aAAO,IAAI,SAAS,MAAM;QACxB,QAAQ;QACR,SAAS,EAAE,YAAY,GAAG,IAAI,YAAY,uBAAuB,iCAAiC;MACpG,CAAC;IACH;AAEA,UAAM,WAAW,MAAME;MACrB;QACE,KAAK,KAAK,GAAG,SAAS;QACtB,OAAO,KAAK;QACZ,cAAc;MAChB;MACA;MACA,IAAI,KAAK,KAAK;;IAChB;AAGA,UAAM,OAAO;;;;;;;;;;oCAUmB,IAAI,YAAY,uBAAuB;;;;;;AAQvE,UAAM,eAAe,IAAI,UAAU,WAAW,UAAU,KAAK;AAC7D,UAAM,aAAa,eAAe,aAAa;AAG/C,UAAM,UAAU,IAAI,QAAQ;MAC1B,gBAAgB;IAClB,CAAC;AAGD,YAAQ,OAAO,cAAc,cAAc,QAAQ,eAAe,UAAU,yBAAyB,IAAI,KAAK,KAAK,EAAE,UAAU;AAG/H,YAAQ,OAAO,cAAc,2BAA2B,UAAU,iCAAiC;AAEnG,WAAO,IAAI,SAAS,MAAM;MACxB,QAAQ;MACR;IACF,CAAC;EAEH,SAAS,OAAO;AACd,YAAQ,MAAM,2CAA2C,KAAK;AAC9D,WAAO,IAAI,SAAS,MAAM;MACxB,QAAQ;MACR,SAAS,EAAE,YAAY,GAAG,QAAQ,IAAI,YAAY,uBAAuB,6BAA6B;IACxG,CAAC;EACH;AACF;AA1RsBC;AAnJtB,IAAAC,iBAAA,MAAA;EAAA,gCAAA;AAAA;AAAA,4CAAA;AAAA,uBAAA;AAeS,IAAAX,QAAAQ,eAAA,cAAA;AAcM,IAAAR,QAAAS,UAAA,SAAA;AA+BA,IAAAT,QAAA,wBAAA,wBAAA;AAuFO,IAAAA,QAAAU,eAAA,cAAA;EAAA;AAAA,CAAA;AC3ItB,SAASF,cAAa,cAAqD;AACzE,QAAM,UAAkC,CAAC;AACzC,MAAI,CAAC,aAAc,QAAO;AAE1B,eAAa,MAAM,GAAG,EAAE,QAAQ,CAAA,WAAU;AACxC,UAAM,QAAQ,OAAO,KAAK,EAAE,MAAM,GAAG;AACrC,QAAI,MAAM,WAAW,GAAG;AAEtB,cAAQ,MAAM,CAAC,CAAC,IAAI,mBAAmB,MAAM,CAAC,CAAC;IACjD;EACF,CAAC;AACD,SAAO;AACT;AAZSA;AAeT,eAAeC,SAAQ,SAAc,QAAgB,YAAoB,IAAI,KAAK,KAAK,IAAqB;AAC1G,QAAM,MAAM,KAAK,MAAM,KAAK,IAAI,IAAI,GAAI;AACxC,QAAM,aAAa;IACjB,GAAG;IACH,KAAK;IACL,KAAK,MAAM;EACb;AAEA,QAAM,YAAY,KAAK,KAAK,UAAU,EAAE,KAAK,SAAS,KAAK,MAAM,CAAC,CAAC;AACnE,QAAM,aAAa,KAAK,KAAK,UAAU,UAAU,CAAC;AAClD,QAAM,OAAO,GAAG,SAAS,IAAI,UAAU;AAEvC,QAAM,UAAU,IAAI,YAAY;AAChC,QAAM,MAAM,MAAM,OAAO,OAAO;IAC9B;IACA,QAAQ,OAAO,MAAM;IACrB,EAAE,MAAM,QAAQ,MAAM,UAAU;IAChC;IACA,CAAC,MAAM;EACT;AAEA,QAAM,YAAY,MAAM,OAAO,OAAO,KAAK,QAAQ,KAAK,QAAQ,OAAO,IAAI,CAAC;AAC5E,QAAM,eAAe,KAAK,OAAO,aAAa,GAAG,IAAI,WAAW,SAAS,CAAC,CAAC;AAE3E,SAAO,GAAG,IAAI,IAAI,YAAY;AAChC;AAzBeA;AA2Bf,eAAeG,wBAAuB,IAAS,OAAe,QAAgB,iBAA0B;AACtG,MAAI;AAEF,UAAM,kBAAkB,MAAM,GAAG,QAAQ;;;KAGxC,EAAE,KAAK,KAAK,EAAE,IAAI;AAEnB,QAAI,gBAAgB,WAAW,gBAAgB,QAAQ,SAAS,GAAG;AACjE,cAAQ,IAAI,SAAS,gBAAgB,QAAQ,MAAM,2BAA2B,KAAK,EAAE;AAErF,iBAAW,WAAW,gBAAgB,SAAS;AAC7C,YAAI;AACF,cAAI,iBAAiB;AAEnB,kBAAM,kBAAkB,MAAM,MAAM,+CAA+C,QAAQ,UAAU,IAAI;cACvG,SAAS;gBACP,iBAAiB,UAAU,eAAe;cAC5C;YACF,CAAC;AAED,gBAAI,gBAAgB,IAAI;AACtB,oBAAM,UAAU,MAAM,gBAAgB,KAAK;AAG3C,oBAAM,mBAAmB,MAAM,MAAM,uCAAuC;gBAC1E,QAAQ;gBACR,SAAS;kBACP,iBAAiB,UAAU,eAAe;kBAC1C,gBAAgB;gBAClB;gBACA,MAAM,IAAI,gBAAgB;kBACxB;kBACA,MAAM,QAAQ,iBAAiB;kBAC/B,qBAAqB,OAAO,SAAS;kBACrC,wBAAwB,QAAQ;gBAClC,CAAC;cACH,CAAC;AAED,kBAAI,iBAAiB,IAAI;AACvB,sBAAM,WAAW,MAAM,iBAAiB,KAAK;AAG7C,sBAAM,GAAG,QAAQ;;;;iBAIhB,EAAE,KAAK,SAAS,IAAI,MAAM,EAAE,IAAI;AAIjC,oBAAI,qBAAqB;AACzB,oBAAI,QAAQ,iBAAiB,KAAM,sBAAqB;yBAC/C,QAAQ,iBAAiB,KAAM,sBAAqB;yBACpD,QAAQ,iBAAiB,KAAM,sBAAqB;AAE7D,sBAAM,GAAG,QAAQ;;;;;;;iBAOhB,EAAE,KAAK,oBAAoB,MAAM,EAAE,IAAI;AAExC,wBAAQ,IAAI,sCAAsC,MAAM,cAAc,SAAS,EAAE,EAAE;cACrF;YACF;UACF;AAGA,gBAAM,GAAG,QAAQ;;;;WAIhB,EAAE,KAAK,QAAQ,EAAE,EAAE,IAAI;QAE1B,SAAS,OAAO;AACd,kBAAQ,MAAM,qCAAqC,KAAK;QAC1D;MACF;IACF;EACF,SAAS,OAAO;AACd,YAAQ,MAAM,wCAAwC,KAAK;EAC7D;AACF;AArFeA;AAuFf,eAAsBF,cAAa,SAAc;AAC/C,MAAI;AACF,UAAM,EAAE,SAAS,IAAI,IAAI;AACzB,UAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,UAAM,OAAO,IAAI,aAAa,IAAI,MAAM;AACxC,UAAM,QAAQ,IAAI,aAAa,IAAI,OAAO;AAC1C,UAAM,YAAY,IAAI,aAAa,IAAI,MAAM;AAC7C,UAAM,YAAY,IAAI,aAAa,IAAI,YAAY;AACnD,UAAM,QAAQ,IAAI,aAAa,IAAI,OAAO;AAE1C,UAAM,mBAAmB,IAAI;AAC7B,UAAM,uBAAuB,IAAI;AACjC,UAAM,sBAAsB,GAAG,IAAI,YAAY,uBAAuB;AAGtE,QAAI,OAAO;AACT,cAAQ,MAAM,uBAAuB,KAAK;AAC1C,aAAO,IAAI,SAAS,MAAM;QACxB,QAAQ;QACR,SAAS,EAAE,YAAY,GAAG,IAAI,YAAY,uBAAuB,2BAA2B;MAC9F,CAAC;IACH;AAGA,QAAI,CAAC,QAAQ,CAAC,OAAO;AACnB,cAAQ,MAAM,iCAAiC;AAC/C,aAAO,IAAI,SAAS,MAAM;QACxB,QAAQ;QACR,SAAS,EAAE,YAAY,GAAG,IAAI,YAAY,uBAAuB,8BAA8B;MACjG,CAAC;IACH;AAGA,UAAM,UAAUF,cAAa,QAAQ,QAAQ,IAAI,QAAQ,CAAC;AAC1D,UAAM,cAAc,QAAQ,aAAa;AACzC,QAAI,CAAC,eAAe,UAAU,aAAa;AACzC,cAAQ,MAAM,yBAAyB;AACvC,aAAO,IAAI,SAAS,MAAM;QACxB,QAAQ;QACR,SAAS,EAAE,YAAY,GAAG,IAAI,YAAY,uBAAuB,4BAA4B;MAC/F,CAAC;IACH;AAGA,QAAI,CAAC,oBAAoB,CAAC,sBAAsB;AAC9C,cAAQ,MAAM,6BAA6B;AAC3C,aAAO,IAAI,SAAS,MAAM;QACxB,QAAQ;QACR,SAAS,EAAE,YAAY,GAAG,IAAI,YAAY,uBAAuB,mCAAmC;MACtG,CAAC;IACH;AAGA,UAAM,gBAAgB,MAAM,MAAM,uCAAuC;MACvE,QAAQ;MACR,SAAS,EAAE,gBAAgB,oCAAoC;MAC/D,MAAM,IAAI,gBAAgB;QACxB,WAAW;QACX,eAAe;QACf;QACA,YAAY;QACZ,cAAc;MAChB,CAAC;IACH,CAAC;AAED,QAAI,CAAC,cAAc,IAAI;AACrB,cAAQ,MAAM,sCAAsC,MAAM,cAAc,KAAK,CAAC;AAC9E,aAAO,IAAI,SAAS,MAAM;QACxB,QAAQ;QACR,SAAS,EAAE,YAAY,GAAG,IAAI,YAAY,uBAAuB,oCAAoC;MACvG,CAAC;IACH;AAEA,UAAM,YAAY,MAAM,cAAc,KAAK;AAC3C,UAAM,cAAc,UAAU;AAG9B,UAAM,mBAAmB,MAAM;MAC7B,8DAA8D,WAAW;IAC3E;AAEA,QAAI,CAAC,iBAAiB,IAAI;AACxB,cAAQ,MAAM,qCAAqC;AACnD,aAAO,IAAI,SAAS,MAAM;QACxB,QAAQ;QACR,SAAS,EAAE,YAAY,GAAG,IAAI,YAAY,uBAAuB,+BAA+B;MAClG,CAAC;IACH;AAEA,UAAM,WAA2B,MAAM,iBAAiB,KAAK;AAG7D,QAAI,CAAC,SAAS,SAAS,CAAC,SAAS,gBAAgB;AAC/C,cAAQ,MAAM,mCAAmC;AACjD,aAAO,IAAI,SAAS,MAAM;QACxB,QAAQ;QACR,SAAS,EAAE,YAAY,GAAG,IAAI,YAAY,uBAAuB,iCAAiC;MACpG,CAAC;IACH;AAGA,UAAM,KAAK,IAAI;AACf,QAAI,CAAC,IAAI;AACP,aAAO,IAAI,SAAS,MAAM;QACxB,QAAQ;QACR,SAAS,EAAE,YAAY,GAAG,IAAI,YAAY,uBAAuB,qCAAqC;MACxG,CAAC;IACH;AAGA,UAAMK,kBAAiB,gBAAAb,QAAA,OAAO,OAAe,WAAmB;AAC9D,UAAI;AACF,cAAM,WAAW,MAAM,MAAM,kDAAkD,mBAAmB,KAAK,CAAC,IAAI;UAC1G,QAAQ;UACR,SAAS;YACP,iBAAiB,UAAU,MAAM;YACjC,gBAAgB;UAClB;QACF,CAAC;AAED,YAAI,CAAC,SAAS,IAAI;AAChB,cAAI,SAAS,WAAW,KAAK;AAC3B,mBAAO;UACT;AACA,gBAAM,IAAI,MAAM,cAAc,SAAS,MAAM,EAAE;QACjD;AAEA,eAAO,MAAM,SAAS,KAAK;MAC7B,SAASO,QAAO;AACd,gBAAQ,MAAM,iCAAiCA,MAAK;AACpD,eAAO;MACT;IACF,GAtBuB,gBAAA;AAyBvB,UAAMN,cAAa,gBAAAD,QAAA,OAAOE,KAAS,OAAe,cAAsB,aAAa;AAEnF,YAAM,cAAc,IAAI;AACxB,UAAI,CAAC,aAAa;AAChB,cAAM,IAAI,MAAM,8CAA8C;MAChE;AAGA,YAAM,OAAO,SAAS,QAAQ;AAE9B,cAAQ,IAAI,sCAAsC,EAAE,OAAO,MAAM,YAAY,CAAC;AAE9E,YAAM,WAAW,MAAM,MAAM,gDAAgD;QAC3E,QAAQ;QACR,SAAS;UACP,gBAAgB;UAChB,iBAAiB,UAAU,WAAW;QACxC;QACA,MAAM,KAAK,UAAU;UACnB,OAAO,MAAM,YAAY;UACzB;UACA,cAAc;UACd,qBAAqB;QACvB,CAAC;MACH,CAAC;AAED,UAAI,CAAC,SAAS,IAAI;AAChB,cAAM,YAAY,MAAM,SAAS,KAAK;AACtC,gBAAQ,MAAM,4BAA4B,SAAS,QAAQ,SAAS;AAGpE,YAAI,SAAS,WAAW,OAAO,UAAU,SAAS,sBAAsB,GAAG;AACzE,kBAAQ,IAAI,gDAAgD;AAC5D,gBAAM,eAAe,MAAMW,gBAAe,MAAM,YAAY,GAAG,WAAW;AAE1E,cAAI,cAAc;AAEhB,kBAAMV,QAAO;cACX,IAAI,aAAa,MAAM,aAAa,WAAW,KAAK,IAAI;cACxD,OAAO,MAAM,YAAY;cACzB,wBAAwB;cACxB,qBAAqB,aAAa,uBAAuB;cACzD,YAAY,aAAa,eAAc,oBAAI,KAAK,GAAE,YAAY;cAC9D,aAAY,oBAAI,KAAK,GAAE,YAAY;YACrC;AAEA,mBAAO,EAAE,MAAAA,OAAM,WAAW,MAAM;UAClC;QACF;AAEA,cAAM,IAAI,MAAM,wBAAwB,SAAS,MAAM,IAAI,SAAS,EAAE;MACxE;AAEA,YAAM,WAAW,MAAM,SAAS,KAAK;AAGrC,YAAMA,QAAO;QACX,IAAI,SAAS,MAAM,SAAS,WAAW,KAAK,IAAI;;QAChD,OAAO,MAAM,YAAY;QACzB,wBAAwB;QACxB,qBAAqB;QACrB,aAAY,oBAAI,KAAK,GAAE,YAAY;QACnC,aAAY,oBAAI,KAAK,GAAE,YAAY;MACrC;AAGA,YAAMC,aAAY,SAAS,WAAW;AAEtC,aAAO,EAAE,MAAAD,OAAM,WAAAC,WAAU;IAC3B,GArEmB,YAAA;AAuEnB,UAAMC,8BAA6B,gBAAAL,QAAA,OAAO,OAAe,QAAgB,WAAmB;AAC1F,UAAI;AACF,cAAM,WAAW,MAAM,MAAM,kDAAkD,mBAAmB,KAAK,CAAC,iBAAiB;UACvH,QAAQ;UACR,SAAS;YACP,iBAAiB,UAAU,MAAM;YACjC,gBAAgB;UAClB;UACA,MAAM,KAAK,UAAU;YACnB,cAAc;UAChB,CAAC;QACH,CAAC;AAED,eAAO,SAAS;MAClB,SAASO,QAAO;AACd,gBAAQ,MAAM,0CAA0CA,MAAK;AAC7D,eAAO;MACT;IACF,GAlBmC,4BAAA;AAqBnC,QAAI,cAAc,UAAU,WAAW;AACrC,UAAI;AACF,cAAM,kBAAkB,IAAI;AAC5B,YAAI,iBAAiB;AACnB,gBAAM,kBAAkB,MAAM,MAAM,+CAA+C,SAAS,IAAI;YAC9F,SAAS;cACP,iBAAiB,UAAU,eAAe;YAC5C;UACF,CAAC;AAED,cAAI,gBAAgB,IAAI;AACtB,kBAAM,UAAU,MAAM,gBAAgB,KAAK;AAC3C,gBAAI,QAAQ,UAAU;AAEpB,oBAAM,GAAG,QAAQ;;;;eAIhB,EAAE,KAAK,QAAQ,UAAU,SAAS,MAAM,YAAY,CAAC,EAAE,IAAI;YAC9D;UACF;QACF;MACF,SAASA,QAAO;AACd,gBAAQ,MAAM,kCAAkCA,MAAK;MAEvD;IACF;AAGA,UAAM,EAAE,MAAM,UAAU,IAAI,MAAMN,YAAW,IAAI,SAAS,MAAM,YAAY,GAAG,QAAQ;AAGvF,UAAMI,4BAA2B,SAAS,MAAM,YAAY,GAAG,UAAU,IAAI,6BAA6B;AAG1G,UAAMO,wBAAuB,IAAI,SAAS,MAAM,YAAY,GAAG,KAAK,IAAI,IAAI,iBAAiB;AAG7F,QAAI,WAAW;AACb,YAAM,eAAe,IAAI;AACzB,UAAI,cAAc;AAChB,YAAI;AACF,gBAAM,EAAE,yBAAAN,yBAAwB,IAAI,MAAM,QAAA,QAAA,EAAA,KAAA,OAAA,yBAAA,GAAA,4BAAA;AAC1C,gBAAMA,yBAAwB,KAAK,OAAO,UAAU,YAAY;QAClE,SAASC,QAAO;AACd,kBAAQ,MAAM,yCAAyCA,MAAK;QAE9D;MACF,OAAO;AACL,gBAAQ,IAAI,oFAAoF;MAClG;IACF;AAGA,UAAM,YAAY,IAAI;AACtB,QAAI,CAAC,WAAW;AACd,aAAO,IAAI,SAAS,MAAM;QACxB,QAAQ;QACR,SAAS,EAAE,YAAY,GAAG,IAAI,YAAY,uBAAuB,iCAAiC;MACpG,CAAC;IACH;AAEA,UAAM,WAAW,MAAME;MACrB;QACE,KAAK,KAAK,GAAG,SAAS;QACtB,OAAO,KAAK;QACZ,cAAc;MAChB;MACA;MACA,IAAI,KAAK,KAAK;;IAChB;AAGA,QAAI,cAAc,GAAG,IAAI,YAAY,uBAAuB;AAC5D,QAAI,cAAc,QAAQ;AACxB,oBAAc,GAAG,IAAI,YAAY,uBAAuB,0BAA0B,SAAS;IAC7F;AAGA,UAAM,OAAO;;;;;;;;;;YAUL,cAAc,SAAS,8CAA8C,EAAE;;qCAE9C,WAAW;;;;;;AAQ5C,UAAM,eAAe,IAAI,UAAU,WAAW,UAAU,KAAK;AAC7D,UAAM,aAAa,eAAe,aAAa;AAG/C,UAAM,UAAU,IAAI,QAAQ;MAC1B,gBAAgB;IAClB,CAAC;AAGD,UAAM,eAAe,mBAAmB,QAAQ;AAChD,UAAM,cAAc,cAAc,YAAY,eAAe,UAAU,yBAAyB,IAAI,KAAK,KAAK,EAAE;AAGhH,YAAQ,OAAO,cAAc,WAAW;AAGxC,YAAQ,OAAO,cAAc,2BAA2B,UAAU,iCAAiC;AAEnG,WAAO,IAAI,SAAS,MAAM;MACxB,QAAQ;MACR;IACF,CAAC;EAEH,SAAS,OAAO;AACd,YAAQ,MAAM,2CAA2C,KAAK;AAC9D,WAAO,IAAI,SAAS,MAAM;MACxB,QAAQ;MACR,SAAS,EAAE,YAAY,GAAG,QAAQ,IAAI,YAAY,uBAAuB,6BAA6B;IACxG,CAAC;EACH;AACF;AApWsBC;AAzItB,IAAAC,iBAAA,MAAA;EAAA,gCAAA;AAAA;AAAA,4CAAA;AAAA,uBAAA;AAQS,IAAAX,QAAAQ,eAAA,cAAA;AAeM,IAAAR,QAAAS,UAAA,SAAA;AA2BA,IAAAT,QAAAY,yBAAA,wBAAA;AAuFO,IAAAZ,QAAAU,eAAA,cAAA;EAAA;AAAA,CAAA;ACvItB,eAAsBA,cAAa,SAAuE;AACxG,MAAI;AACF,UAAM,EAAE,SAAS,KAAK,OAAO,IAAI;AACjC,UAAM,EAAE,aAAa,IAAI,IAAI,IAAI,QAAQ,GAAG;AAC5C,UAAM,SAAS,aAAa,IAAI,QAAQ;AAExC,QAAI,CAAC,QAAQ;AACX,aAAO,IAAI,SAAS,KAAK,UAAU;QACjC,SAAS;QACT,OAAO;MACT,CAAC,GAAG;QACF,QAAQ;QACR,SAAS,EAAE,gBAAgB,mBAAmB;MAChD,CAAC;IACH;AAEA,UAAM,KAAK,IAAI;AAGf,QAAI,WAAW,MAAM,GAAG,QAAQ;;;KAG/B,EAAE,KAAK,QAAQ,OAAO,QAAQ,EAAE,MAAM;AAEvC,QAAI,CAAC,UAAU;AAEb,YAAM,SAAS,MAAM,GAAG,QAAQ;;;OAG/B,EAAE,KAAK,QAAQ,OAAO,UAAU,MAAM,MAAM,IAAI,EAAE,IAAI;AAEvD,iBAAW;QACT,SAAS;QACT,WAAW,OAAO;QAClB,mBAAmB;QACnB,oBAAoB;QACpB,mBAAmB;QACnB,mBAAkB,oBAAI,KAAK,GAAE,YAAY;QACzC,aAAY,oBAAI,KAAK,GAAE,YAAY;QACnC,aAAY,oBAAI,KAAK,GAAE,YAAY;MACrC;IACF;AAGA,UAAM,mBAAmB,KAAK,MAAM,SAAS,qBAAqB,IAAI;AAEtE,WAAO,IAAI,SAAS,KAAK,UAAU;MACjC,SAAS;MACT,MAAM;QACJ,iBAAiB,SAAS;QAC1B,kBAAkB,SAAS;QAC3B;QACA,gBAAgB,SAAS;MAC3B;IACF,CAAC,GAAG;MACF,QAAQ;MACR,SAAS,EAAE,gBAAgB,mBAAmB;IAChD,CAAC;EAEH,SAAS,OAAO;AACd,YAAQ,MAAM,iCAAiC,KAAK;AACpD,WAAO,IAAI,SAAS,KAAK,UAAU;MACjC,SAAS;MACT,OAAO;IACT,CAAC,GAAG;MACF,QAAQ;MACR,SAAS,EAAE,gBAAgB,mBAAmB;IAChD,CAAC;EACH;AACF;AArEsBA;AAuEtB,eAAsB,cAAc,SAAuE;AACzG,MAAI;AACF,UAAM,EAAE,SAAS,KAAK,OAAO,IAAI;AACjC,UAAM,EAAE,aAAa,IAAI,IAAI,IAAI,QAAQ,GAAG;AAC5C,UAAM,SAAS,aAAa,IAAI,QAAQ;AAExC,QAAI,CAAC,QAAQ;AACX,aAAO,IAAI,SAAS,KAAK,UAAU;QACjC,SAAS;QACT,OAAO;MACT,CAAC,GAAG;QACF,QAAQ;QACR,SAAS,EAAE,gBAAgB,mBAAmB;MAChD,CAAC;IACH;AAEA,UAAM,OAAO,MAAM,QAAQ,KAAK;AAChC,UAAM,EAAE,UAAU,WAAW,OAAO,IAAI;AAExC,QAAI,CAAC,YAAY,CAAC,QAAQ;AACxB,aAAO,IAAI,SAAS,KAAK,UAAU;QACjC,SAAS;QACT,OAAO;MACT,CAAC,GAAG;QACF,QAAQ;QACR,SAAS,EAAE,gBAAgB,mBAAmB;MAChD,CAAC;IACH;AAEA,UAAM,KAAK,IAAI;AAGf,QAAI,WAAW,MAAM,GAAG,QAAQ;;;KAG/B,EAAE,KAAK,QAAQ,OAAO,QAAQ,EAAE,MAAM;AAEvC,QAAI,CAAC,UAAU;AAEb,YAAM,GAAG,QAAQ;;;OAGhB,EAAE,KAAK,QAAQ,OAAO,UAAU,UAAU,aAAa,MAAM,IAAI,EAAE,IAAI;AAExE,iBAAW;QACT,SAAS;QACT,WAAW,OAAO;QAClB,mBAAmB;QACnB,oBAAoB,aAAa;QACjC,mBAAmB;QACnB,mBAAkB,oBAAI,KAAK,GAAE,YAAY;QACzC,aAAY,oBAAI,KAAK,GAAE,YAAY;QACnC,aAAY,oBAAI,KAAK,GAAE,YAAY;MACrC;IACF;AAGA,UAAM,mBAAmB,KAAK,MAAM,SAAS,qBAAqB,IAAI;AACtE,QAAI,0BAA0B,CAAC,GAAG,gBAAgB;AAClD,QAAI,yBAAyB,SAAS;AACtC,QAAI,0BAA0B,SAAS;AAGvC,YAAQ,QAAQ;MACd,KAAK;AAEH,iCAAyB;AACzB,kCAA0B,aAAa;AACvC;MAEF,KAAK;AAEH,YAAI,CAAC,iBAAiB,SAAS,QAAQ,GAAG;AACxC,kCAAwB,KAAK,QAAQ;QACvC;AACA,iCAAyB;AACzB,kCAA0B,aAAa;AACvC;MAEF,KAAK;AAEH,iCAAyB;AACzB,kCAA0B,aAAa;AACvC;MAEF;AACE,eAAO,IAAI,SAAS,KAAK,UAAU;UACjC,SAAS;UACT,OAAO;QACT,CAAC,GAAG;UACF,QAAQ;UACR,SAAS,EAAE,gBAAgB,mBAAmB;QAChD,CAAC;IACL;AAGA,UAAM,GAAG,QAAQ;;;;;;;;KAQhB,EAAE;MACD;MACA;MACA,KAAK,UAAU,uBAAuB;MACtC;MACA,OAAO;IACT,EAAE,IAAI;AAEN,WAAO,IAAI,SAAS,KAAK,UAAU;MACjC,SAAS;MACT,MAAM;QACJ,iBAAiB;QACjB,kBAAkB;QAClB,kBAAkB;QAClB,iBAAgB,oBAAI,KAAK,GAAE,YAAY;MACzC;IACF,CAAC,GAAG;MACF,QAAQ;MACR,SAAS,EAAE,gBAAgB,mBAAmB;IAChD,CAAC;EAEH,SAAS,OAAO;AACd,YAAQ,MAAM,iCAAiC,KAAK;AACpD,WAAO,IAAI,SAAS,KAAK,UAAU;MACjC,SAAS;MACT,OAAO;IACT,CAAC,GAAG;MACF,QAAQ;MACR,SAAS,EAAE,gBAAgB,mBAAmB;IAChD,CAAC;EACH;AACF;AAvIsB;AAzEtB,IAAA,gBAAA,MAAA;EAAA,0CAAA;AAAA;AAAA,4CAAA;AAAA,uBAAA;AAEsB,IAAAV,QAAAU,eAAA,cAAA;AAuEA,IAAAV,QAAA,eAAA,eAAA;EAAA;AAAA,CAAA;ACxEtB,eAAsBc,oBAAmB;AACvC,SAAO,IAAI,SAAS,MAAM;IACxB,QAAQ;IACR,SAAS;MACP,+BAA+B;MAC/B,gCAAgC;MAChC,gCAAgC;IAClC;EACF,CAAC;AACH;AATsBA;AAuCtB,eAAsBJ,cAAa,SAA2G;AAC5I,MAAI;AACF,UAAM,EAAE,SAAS,KAAK,OAAO,IAAI;AACjC,UAAM,QAAQ,OAAO;AAErB,QAAI,CAAC,OAAO;AACV,aAAO,IAAI,SAAS,KAAK,UAAU;QACjC,SAAS;QACT,OAAO;MACT,CAAC,GAAG;QACF,QAAQ;QACR,SAAS,EAAE,gBAAgB,mBAAmB;MAChD,CAAC;IACH;AAGA,UAAM,cAAc,IAAI;AACxB,QAAI,CAAC,aAAa;AAChB,YAAM,IAAI,MAAM,8CAA8C;IAChE;AAEA,YAAQ,IAAI,0BAA0B,sCAAsC,KAAK,UAAU;AAE3F,QAAI;AACJ,QAAI;AACF,iBAAW,MAAM,MAAM,sCAAsC,KAAK,YAAY;QAC5E,QAAQ;QACR,SAAS;UACP,gBAAgB;UAChB,iBAAiB,UAAU,WAAW;QACxC;MACF,CAAC;IACH,SAAS,YAAY;AACnB,cAAQ,MAAM,gBAAgB,UAAU;AACxC,YAAM,eAAe,sBAAsB,QAAQ,WAAW,UAAU;AACxE,YAAM,IAAI,MAAM,kBAAkB,YAAY,EAAE;IAClD;AAGA,QAAI,SAAS,WAAW,KAAK;AAC3B,aAAO,IAAI,SAAS,KAAK,UAAU;QACjC,QAAQ;QACR,QAAQ;QACR,SAAS;QACT,YAAY;UACV,sBAAsB;UACtB,cAAc;UACd,eAAe;QACjB;MACF,CAAC,GAAG;QACF,QAAQ;QACR,SAAS,EAAE,gBAAgB,mBAAmB;MAChD,CAAC;IACH;AAEA,QAAI,CAAC,SAAS,IAAI;AAChB,YAAM,YAAY,MAAM,SAAS,KAAK;AACtC,cAAQ,MAAM,uBAAuB;QACnC,QAAQ,SAAS;QACjB,YAAY,SAAS;QACrB,MAAM;MACR,CAAC;AACD,YAAM,IAAI,MAAM,uBAAuB,SAAS,MAAM,IAAI,SAAS,UAAU,MAAM,SAAS,EAAE;IAChG;AAEA,UAAM,OAAO,MAAM,SAAS,KAAK;AAGjC,QAAI,CAAC,KAAK,QAAQ;AAChB,WAAK,SAAS;IAChB;AAGA,QAAI,KAAK,UAAU,OAAO,KAAK,WAAW,UAAU;AAClD,UAAI;AACF,cAAM,eAAe,KAAK,MAAM,KAAK,MAAM;AAE3C,YAAI,aAAa,eAAe;AAC9B,eAAK,SAAS,aAAa;QAC7B,OAAO;AACL,eAAK,SAAS;QAChB;MACF,SAAS,GAAG;AACV,gBAAQ,MAAM,gCAAgC,CAAC;MACjD;IACF;AAEA,YAAQ,IAAI,6BAA6B,KAAK,UAAU,MAAM,MAAM,CAAC,CAAC;AAEtE,WAAO,IAAI,SAAS,KAAK,UAAU,IAAI,GAAG;MACxC,QAAQ;MACR,SAAS;QACP,gBAAgB;QAChB,iBAAiB;MACnB;IACF,CAAC;EACH,SAAS,OAAO;AACd,YAAQ,MAAM,sBAAsB,KAAK;AACzC,WAAO,IAAI,SAAS,KAAK,UAAU;MACjC,SAAS;MACT,OAAO,iBAAiB,QAAQ,MAAM,UAAU;IAClD,CAAC,GAAG;MACF,QAAQ;MACR,SAAS,EAAE,gBAAgB,mBAAmB;IAChD,CAAC;EACH;AACF;AA1GsBA;AAxCtB,IAAA,eAAA,MAAA;EAAA,gCAAA;AAAA;AAAA,4CAAA;AAAA,uBAAA;AACsB,IAAAV,QAAAc,mBAAA,kBAAA;AAuCA,IAAAd,QAAAU,eAAA,cAAA;EAAA;AAAA,CAAA;ACvCtB,eAAsBI,oBAAmB;AACvC,SAAO,IAAI,SAAS,MAAM;IACxB,QAAQ;IACR,SAAS;MACP,+BAA+B;MAC/B,gCAAgC;MAChC,gCAAgC;IAClC;EACF,CAAC;AACH;AATsBA;AAgCtB,eAAsBJ,cAAa,SAA2G;AAC5I,MAAI;AACF,UAAM,EAAE,SAAS,KAAK,OAAO,IAAI;AACjC,UAAM,QAAQ,OAAO;AAErB,QAAI,CAAC,OAAO;AACV,aAAO,IAAI,SAAS,KAAK,UAAU;QACjC,SAAS;QACT,OAAO;MACT,CAAC,GAAG;QACF,QAAQ;QACR,SAAS,EAAE,gBAAgB,mBAAmB;MAChD,CAAC;IACH;AAGA,UAAM,cAAc,IAAI;AACxB,QAAI,CAAC,aAAa;AAChB,YAAM,IAAI,MAAM,8CAA8C;IAChE;AAEA,YAAQ,IAAI,0BAA0B,sCAAsC,KAAK,SAAS;AAE1F,QAAI;AACJ,QAAI;AACF,iBAAW,MAAM,MAAM,sCAAsC,KAAK,WAAW;QAC3E,QAAQ;QACR,SAAS;UACP,gBAAgB;UAChB,iBAAiB,UAAU,WAAW;QACxC;MACF,CAAC;IACH,SAAS,YAAY;AACnB,cAAQ,MAAM,gBAAgB,UAAU;AACxC,YAAM,eAAe,sBAAsB,QAAQ,WAAW,UAAU;AACxE,YAAM,IAAI,MAAM,kBAAkB,YAAY,EAAE;IAClD;AAGA,QAAI,SAAS,WAAW,KAAK;AAC3B,aAAO,IAAI,SAAS,KAAK,UAAU;QACjC,QAAQ;QACR,QAAQ;QACR,SAAS;MACX,CAAC,GAAG;QACF,QAAQ;QACR,SAAS,EAAE,gBAAgB,mBAAmB;MAChD,CAAC;IACH;AAEA,QAAI,CAAC,SAAS,IAAI;AAChB,YAAM,YAAY,MAAM,SAAS,KAAK;AACtC,cAAQ,MAAM,uBAAuB;QACnC,QAAQ,SAAS;QACjB,YAAY,SAAS;QACrB,MAAM;MACR,CAAC;AACD,YAAM,IAAI,MAAM,uBAAuB,SAAS,MAAM,IAAI,SAAS,UAAU,MAAM,SAAS,EAAE;IAChG;AAEA,UAAM,OAAO,MAAM,SAAS,KAAK;AAGjC,QAAI,CAAC,KAAK,QAAQ;AAChB,WAAK,SAAS;IAChB;AAGA,QAAI,KAAK,UAAU,OAAO,KAAK,WAAW,UAAU;AAClD,UAAI;AACF,cAAM,eAAe,KAAK,MAAM,KAAK,MAAM;AAE3C,YAAI,aAAa,eAAe;AAC9B,eAAK,SAAS,aAAa;QAC7B,OAAO;AACL,eAAK,SAAS;QAChB;MACF,SAAS,GAAG;AACV,gBAAQ,MAAM,gCAAgC,CAAC;MACjD;IACF;AAEA,YAAQ,IAAI,4BAA4B,KAAK,UAAU,MAAM,MAAM,CAAC,CAAC;AAErE,WAAO,IAAI,SAAS,KAAK,UAAU,IAAI,GAAG;MACxC,QAAQ;MACR,SAAS;QACP,gBAAgB;QAChB,iBAAiB;MACnB;IACF,CAAC;EACH,SAAS,OAAO;AACd,YAAQ,MAAM,qBAAqB,KAAK;AACxC,WAAO,IAAI,SAAS,KAAK,UAAU;MACjC,SAAS;MACT,OAAO,iBAAiB,QAAQ,MAAM,UAAU;IAClD,CAAC,GAAG;MACF,QAAQ;MACR,SAAS,EAAE,gBAAgB,mBAAmB;IAChD,CAAC;EACH;AACF;AArGsBA;AAjCtB,IAAA,cAAA,MAAA;EAAA,+BAAA;AAAA;AAAA,4CAAA;AAAA,uBAAA;AACsB,IAAAV,QAAAc,mBAAA,kBAAA;AAgCA,IAAAd,QAAAU,eAAA,cAAA;EAAA;AAAA,CAAA;AChCtB,eAAsBI,oBAAmB;AACvC,SAAO,IAAI,SAAS,MAAM;IACxB,QAAQ;IACR,SAAS;MACP,+BAA+B;MAC/B,gCAAgC;MAChC,gCAAgC;IAClC;EACF,CAAC;AACH;AATsBA;AAWtB,eAAsBC,cAAa,SAIhC;AACD,MAAI;AACF,UAAM,EAAE,SAAS,KAAK,OAAO,IAAI;AACjC,UAAM,EAAE,WAAW,IAAI;AAEvB,QAAI,CAAC,YAAY;AACf,aAAO,IAAI,SAAS,KAAK,UAAU;QACjC,SAAS;QACT,OAAO;MACT,CAAC,GAAG;QACF,QAAQ;QACR,SAAS,EAAE,gBAAgB,mBAAmB;MAChD,CAAC;IACH;AAGA,UAAM,cAAc,IAAI;AACxB,QAAI,CAAC,aAAa;AAChB,YAAM,IAAI,MAAM,8CAA8C;IAChE;AAEA,YAAQ,IAAI,0BAA0B,gDAAgD,UAAU,WAAW;AAE3G,QAAI;AACJ,QAAI;AACF,iBAAW,MAAM,MAAM,gDAAgD,UAAU,aAAa;QAC5F,QAAQ;QACR,SAAS;UACP,gBAAgB;UAChB,iBAAiB,UAAU,WAAW;QACxC;MACF,CAAC;IACH,SAAS,YAAY;AACnB,cAAQ,MAAM,gBAAgB,UAAU;AACxC,YAAM,eAAe,sBAAsB,QAAQ,WAAW,UAAU;AACxE,YAAM,IAAI,MAAM,kBAAkB,YAAY,EAAE;IAClD;AAEA,QAAI,CAAC,SAAS,IAAI;AAChB,YAAM,YAAY,MAAM,SAAS,KAAK;AACtC,cAAQ,MAAM,uBAAuB;QACnC,QAAQ,SAAS;QACjB,YAAY,SAAS;QACrB,MAAM;MACR,CAAC;AACD,YAAM,IAAI,MAAM,uBAAuB,SAAS,MAAM,IAAI,SAAS,UAAU,MAAM,SAAS,EAAE;IAChG;AAEA,UAAM,OAAO,MAAM,SAAS,KAAK;AAEjC,WAAO,IAAI,SAAS,KAAK,UAAU,IAAI,GAAG;MACxC,QAAQ;MACR,SAAS;QACP,gBAAgB;QAChB,iBAAiB;MACnB;IACF,CAAC;EACH,SAAS,OAAO;AACd,YAAQ,MAAM,yCAAyC,KAAK;AAC5D,WAAO,IAAI,SAAS,KAAK,UAAU;MACjC,SAAS;MACT,OAAO,iBAAiB,QAAQ,MAAM,UAAU;IAClD,CAAC,GAAG;MACF,QAAQ;MACR,SAAS,EAAE,gBAAgB,mBAAmB;IAChD,CAAC;EACH;AACF;AAvEsBA;AAZtB,IAAA,gBAAA,MAAA;EAAA,+CAAA;AAAA;AAAA,4CAAA;AAAA,uBAAA;AACsB,IAAAf,QAAAc,mBAAA,kBAAA;AAWA,IAAAd,QAAAe,eAAA,cAAA;EAAA;AAAA,CAAA;ACXtB,eAAsBD,oBAAmB;AACvC,SAAO,IAAI,SAAS,MAAM;IACxB,QAAQ;IACR,SAAS;MACP,+BAA+B;MAC/B,gCAAgC;MAChC,gCAAgC;IAClC;EACF,CAAC;AACH;AATsBA;AAYtB,eAAsBJ,cAAa,SAAsD;AACvF,MAAI;AACF,UAAM,EAAE,SAAS,KAAK,OAAO,IAAI;AACjC,UAAM,YAAY,OAAO;AAEzB,QAAI,CAAC,WAAW;AACd,aAAO,IAAI,SAAS,KAAK,UAAU;QACjC,SAAS;QACT,OAAO;MACT,CAAC,GAAG;QACF,QAAQ;QACR,SAAS,EAAE,gBAAgB,mBAAmB;MAChD,CAAC;IACH;AAGA,UAAM,cAAc,IAAI;AACxB,QAAI,CAAC,aAAa;AAChB,YAAM,IAAI,MAAM,8CAA8C;IAChE;AAEA,YAAQ,IAAI,0BAA0B,2CAA2C,SAAS,sBAAsB;AAChH,YAAQ,IAAI,YAAY;MACtB,gBAAgB;MAChB,iBAAiB,UAAU,YAAY,UAAU,GAAG,CAAC,CAAC;IACxD,CAAC;AAED,QAAI;AACJ,QAAI;AACF,iBAAW,MAAM,MAAM,2CAA2C,SAAS,wBAAwB;QACjG,QAAQ;QACR,SAAS;UACP,gBAAgB;UAChB,iBAAiB,UAAU,WAAW;QACxC;MACF,CAAC;IACH,SAAS,YAAY;AACnB,cAAQ,MAAM,gBAAgB,UAAU;AACxC,YAAM,eAAe,sBAAsB,QAAQ,WAAW,UAAU;AACxE,YAAM,IAAI,MAAM,kBAAkB,YAAY,EAAE;IAClD;AAEA,QAAI,CAAC,SAAS,IAAI;AAChB,YAAM,YAAY,MAAM,SAAS,KAAK;AACtC,cAAQ,MAAM,uBAAuB;QACnC,QAAQ,SAAS;QACjB,YAAY,SAAS;QACrB,MAAM;MACR,CAAC;AACD,YAAM,IAAI,MAAM,uBAAuB,SAAS,MAAM,IAAI,SAAS,UAAU,MAAM,SAAS,EAAE;IAChG;AAEA,UAAM,OAAO,MAAM,SAAS,KAAK;AAEjC,WAAO,IAAI,SAAS,KAAK,UAAU;MACjC,SAAS;MACT;IACF,CAAC,GAAG;MACF,QAAQ;MACR,SAAS;QACP,gBAAgB;QAChB,iBAAiB;;MACnB;IACF,CAAC;EACH,SAAS,OAAO;AACd,YAAQ,MAAM,+CAA+C,KAAK;AAClE,WAAO,IAAI,SAAS,KAAK,UAAU;MACjC,SAAS;MACT,OAAO;IACT,CAAC,GAAG;MACF,QAAQ;MACR,SAAS,EAAE,gBAAgB,mBAAmB;IAChD,CAAC;EACH;AACF;AA1EsBA;AAbtB,IAAA,2BAAA,MAAA;EAAA,qDAAA;AAAA;AAAA,4CAAA;AAAA,uBAAA;AACsB,IAAAV,QAAAc,mBAAA,kBAAA;AAYA,IAAAd,QAAAU,eAAA,cAAA;EAAA;AAAA,CAAA;ACZtB,eAAsBI,oBAAmB;AACvC,SAAO,IAAI,SAAS,MAAM;IACxB,QAAQ;IACR,SAAS;MACP,+BAA+B;MAC/B,gCAAgC;MAChC,gCAAgC;IAClC;EACF,CAAC;AACH;AATsBA;AAYtB,eAAsBJ,cAAa,SAAsD;AACvF,MAAI;AACF,UAAM,EAAE,SAAS,KAAK,OAAO,IAAI;AACjC,UAAM,YAAY,OAAO;AAEzB,QAAI,CAAC,WAAW;AACd,aAAO,IAAI,SAAS,KAAK,UAAU;QACjC,SAAS;QACT,OAAO;MACT,CAAC,GAAG;QACF,QAAQ;QACR,SAAS,EAAE,gBAAgB,mBAAmB;MAChD,CAAC;IACH;AAGA,UAAM,cAAc,IAAI;AACxB,QAAI,CAAC,aAAa;AAChB,YAAM,IAAI,MAAM,8CAA8C;IAChE;AAEA,YAAQ,IAAI,0BAA0B,2CAA2C,SAAS,WAAW;AACrG,YAAQ,IAAI,YAAY;MACtB,gBAAgB;MAChB,iBAAiB,UAAU,YAAY,UAAU,GAAG,CAAC,CAAC;IACxD,CAAC;AAED,QAAI;AACJ,QAAI;AACF,iBAAW,MAAM,MAAM,2CAA2C,SAAS,aAAa;QACtF,QAAQ;QACR,SAAS;UACP,gBAAgB;UAChB,iBAAiB,UAAU,WAAW;QACxC;MACF,CAAC;IACH,SAAS,YAAY;AACnB,cAAQ,MAAM,gBAAgB,UAAU;AACxC,YAAM,eAAe,sBAAsB,QAAQ,WAAW,UAAU;AACxE,YAAM,IAAI,MAAM,kBAAkB,YAAY,EAAE;IAClD;AAEA,QAAI,CAAC,SAAS,IAAI;AAChB,YAAM,YAAY,MAAM,SAAS,KAAK;AACtC,cAAQ,MAAM,uBAAuB;QACnC,QAAQ,SAAS;QACjB,YAAY,SAAS;QACrB,MAAM;MACR,CAAC;AACD,YAAM,IAAI,MAAM,uBAAuB,SAAS,MAAM,IAAI,SAAS,UAAU,MAAM,SAAS,EAAE;IAChG;AAEA,UAAM,OAAO,MAAM,SAAS,KAAK;AAGjC,YAAQ,IAAI,+BAA+B;AAC3C,YAAQ,IAAI,KAAK,UAAU,MAAM,MAAM,CAAC,CAAC;AACzC,YAAQ,IAAI,0BAA0B;AAEtC,WAAO,IAAI,SAAS,KAAK,UAAU;MACjC,SAAS;MACT;IACF,CAAC,GAAG;MACF,QAAQ;MACR,SAAS;QACP,gBAAgB;QAChB,iBAAiB;;MACnB;IACF,CAAC;EACH,SAAS,OAAO;AACd,YAAQ,MAAM,yCAAyC,KAAK;AAC5D,WAAO,IAAI,SAAS,KAAK,UAAU;MACjC,SAAS;MACT,OAAO;IACT,CAAC,GAAG;MACF,QAAQ;MACR,SAAS,EAAE,gBAAgB,mBAAmB;IAChD,CAAC;EACH;AACF;AA/EsBA;AAbtB,IAAA,gBAAA,MAAA;EAAA,0CAAA;AAAA;AAAA,4CAAA;AAAA,uBAAA;AACsB,IAAAV,QAAAc,mBAAA,kBAAA;AAYA,IAAAd,QAAAU,eAAA,cAAA;EAAA;AAAA,CAAA;ACZtB,eAAsBI,oBAAmB;AACvC,SAAO,IAAI,SAAS,MAAM;IACxB,QAAQ;IACR,SAAS;MACP,+BAA+B;MAC/B,gCAAgC;MAChC,gCAAgC;IAClC;EACF,CAAC;AACH;AATsBA;AAYtB,eAAsBJ,cAAa,SAAsD;AACvF,MAAI;AACF,UAAM,EAAE,SAAS,KAAK,OAAO,IAAI;AACjC,UAAM,YAAY,OAAO;AAEzB,QAAI,CAAC,WAAW;AACd,aAAO,IAAI,SAAS,KAAK,UAAU;QACjC,SAAS;QACT,OAAO;MACT,CAAC,GAAG;QACF,QAAQ;QACR,SAAS,EAAE,gBAAgB,mBAAmB;MAChD,CAAC;IACH;AAGA,UAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,UAAM,YAAY,IAAI,aAAa,IAAI,YAAY;AACnD,UAAM,eAAe,IAAI,aAAa,IAAI,eAAe;AAEzD,QAAI,CAAC,aAAa,CAAC,cAAc;AAC/B,aAAO,IAAI,SAAS,KAAK,UAAU;QACjC,SAAS;QACT,OAAO;MACT,CAAC,GAAG;QACF,QAAQ;QACR,SAAS,EAAE,gBAAgB,mBAAmB;MAChD,CAAC;IACH;AAGA,UAAM,cAAc,IAAI;AACxB,QAAI,CAAC,aAAa;AAChB,YAAM,IAAI,MAAM,8CAA8C;IAChE;AAEA,UAAM,SAAS,2CAA2C,SAAS,yBAAyB,SAAS,kBAAkB,YAAY;AACnI,YAAQ,IAAI,0BAA0B,MAAM;AAC5C,YAAQ,IAAI,YAAY;MACtB,gBAAgB;MAChB,iBAAiB,UAAU,YAAY,UAAU,GAAG,CAAC,CAAC;IACxD,CAAC;AAED,QAAI;AACJ,QAAI;AACF,iBAAW,MAAM,MAAM,QAAQ;QAC7B,QAAQ;QACR,SAAS;UACP,gBAAgB;UAChB,iBAAiB,UAAU,WAAW;QACxC;MACF,CAAC;IACH,SAAS,YAAY;AACnB,cAAQ,MAAM,gBAAgB,UAAU;AACxC,YAAM,eAAe,sBAAsB,QAAQ,WAAW,UAAU;AACxE,YAAM,IAAI,MAAM,kBAAkB,YAAY,EAAE;IAClD;AAEA,QAAI,CAAC,SAAS,IAAI;AAChB,YAAM,YAAY,MAAM,SAAS,KAAK;AACtC,cAAQ,MAAM,uBAAuB;QACnC,QAAQ,SAAS;QACjB,YAAY,SAAS;QACrB,MAAM;MACR,CAAC;AACD,YAAM,IAAI,MAAM,uBAAuB,SAAS,MAAM,IAAI,SAAS,UAAU,MAAM,SAAS,EAAE;IAChG;AAEA,UAAM,OAAO,MAAM,SAAS,KAAK;AAGjC,YAAQ,IAAI,2BAA2B,KAAK,UAAU,MAAM,MAAM,CAAC,CAAC;AAEpE,WAAO,IAAI,SAAS,KAAK,UAAU;MACjC,SAAS;MACT;IACF,CAAC,GAAG;MACF,QAAQ;MACR,SAAS;QACP,gBAAgB;QAChB,iBAAiB;;MACnB;IACF,CAAC;EACH,SAAS,OAAO;AACd,YAAQ,MAAM,qCAAqC,KAAK;AACxD,WAAO,IAAI,SAAS,KAAK,UAAU;MACjC,SAAS;MACT,OAAO;IACT,CAAC,GAAG;MACF,QAAQ;MACR,SAAS,EAAE,gBAAgB,mBAAmB;IAChD,CAAC;EACH;AACF;AA7FsBA;AAbtB,IAAA,iBAAA,MAAA;EAAA,2CAAA;AAAA;AAAA,4CAAA;AAAA,uBAAA;AACsB,IAAAV,QAAAc,mBAAA,kBAAA;AAYA,IAAAd,QAAAU,eAAA,cAAA;EAAA;AAAA,CAAA;ACZtB,eAAsBI,oBAAmB;AACvC,SAAO,IAAI,SAAS,MAAM;IACxB,QAAQ;IACR,SAAS;MACP,+BAA+B;MAC/B,gCAAgC;MAChC,gCAAgC;IAClC;EACF,CAAC;AACH;AATsBA;AAYtB,eAAsBJ,eAAa,SAAsD;AACvF,MAAI;AACF,UAAM,EAAE,SAAS,KAAK,OAAO,IAAI;AACjC,UAAM,YAAY,OAAO;AAEzB,QAAI,CAAC,WAAW;AACd,aAAO,IAAI,SAAS,KAAK,UAAU;QACjC,SAAS;QACT,OAAO;MACT,CAAC,GAAG;QACF,QAAQ;QACR,SAAS,EAAE,gBAAgB,mBAAmB;MAChD,CAAC;IACH;AAGA,UAAM,cAAc,IAAI;AACxB,QAAI,CAAC,aAAa;AAChB,YAAM,IAAI,MAAM,8CAA8C;IAChE;AAEA,YAAQ,IAAI,0BAA0B,2CAA2C,SAAS,WAAW;AACrG,YAAQ,IAAI,YAAY;MACtB,gBAAgB;MAChB,iBAAiB,UAAU,YAAY,UAAU,GAAG,CAAC,CAAC;IACxD,CAAC;AAED,QAAI;AACJ,QAAI;AACF,iBAAW,MAAM,MAAM,2CAA2C,SAAS,aAAa;QACtF,QAAQ;QACR,SAAS;UACP,gBAAgB;UAChB,iBAAiB,UAAU,WAAW;QACxC;MACF,CAAC;IACH,SAAS,YAAY;AACnB,cAAQ,MAAM,gBAAgB,UAAU;AACxC,YAAM,eAAe,sBAAsB,QAAQ,WAAW,UAAU;AACxE,YAAM,IAAI,MAAM,kBAAkB,YAAY,EAAE;IAClD;AAEA,QAAI,CAAC,SAAS,IAAI;AAChB,YAAM,YAAY,MAAM,SAAS,KAAK;AACtC,cAAQ,MAAM,uBAAuB;QACnC,QAAQ,SAAS;QACjB,YAAY,SAAS;QACrB,MAAM;MACR,CAAC;AACD,YAAM,IAAI,MAAM,uBAAuB,SAAS,MAAM,IAAI,SAAS,UAAU,MAAM,SAAS,EAAE;IAChG;AAEA,UAAM,OAAO,MAAM,SAAS,KAAK;AAEjC,WAAO,IAAI,SAAS,KAAK,UAAU;MACjC,SAAS;MACT;IACF,CAAC,GAAG;MACF,QAAQ;MACR,SAAS;QACP,gBAAgB;QAChB,iBAAiB;;MACnB;IACF,CAAC;EACH,SAAS,OAAO;AACd,YAAQ,MAAM,oCAAoC,KAAK;AACvD,WAAO,IAAI,SAAS,KAAK,UAAU;MACjC,SAAS;MACT,OAAO;IACT,CAAC,GAAG;MACF,QAAQ;MACR,SAAS,EAAE,gBAAgB,mBAAmB;IAChD,CAAC;EACH;AACF;AA1EsBA;AAbtB,IAAA,gBAAA,MAAA;EAAA,0CAAA;AAAA;AAAA,4CAAA;AAAA,uBAAA;AACsB,IAAAV,QAAAc,mBAAA,kBAAA;AAYA,IAAAd,QAAAU,gBAAA,cAAA;EAAA;AAAA,CAAA;ACZtB,eAAsBI,oBAAmB;AACvC,SAAO,IAAI,SAAS,MAAM;IACxB,QAAQ;IACR,SAAS;MACP,+BAA+B;MAC/B,gCAAgC;MAChC,gCAAgC;IAClC;EACF,CAAC;AACH;AATsBA;AAYtB,eAAsBJ,eAAa,SAAsD;AACvF,MAAI;AACF,UAAM,EAAE,SAAS,KAAK,OAAO,IAAI;AACjC,UAAM,YAAY,OAAO;AAEzB,QAAI,CAAC,WAAW;AACd,aAAO,IAAI,SAAS,KAAK,UAAU;QACjC,SAAS;QACT,OAAO;MACT,CAAC,GAAG;QACF,QAAQ;QACR,SAAS,EAAE,gBAAgB,mBAAmB;MAChD,CAAC;IACH;AAGA,UAAM,cAAc,IAAI;AACxB,QAAI,CAAC,aAAa;AAChB,YAAM,IAAI,MAAM,8CAA8C;IAChE;AAEA,YAAQ,IAAI,0BAA0B,2CAA2C,SAAS,gBAAgB;AAC1G,YAAQ,IAAI,YAAY;MACtB,gBAAgB;MAChB,iBAAiB,UAAU,YAAY,UAAU,GAAG,CAAC,CAAC;IACxD,CAAC;AAED,QAAI;AACJ,QAAI;AACF,iBAAW,MAAM,MAAM,2CAA2C,SAAS,kBAAkB;QAC3F,QAAQ;QACR,SAAS;UACP,gBAAgB;UAChB,iBAAiB,UAAU,WAAW;QACxC;MACF,CAAC;IACH,SAAS,YAAY;AACnB,cAAQ,MAAM,gBAAgB,UAAU;AACxC,YAAM,eAAe,sBAAsB,QAAQ,WAAW,UAAU;AACxE,YAAM,IAAI,MAAM,kBAAkB,YAAY,EAAE;IAClD;AAEA,QAAI,CAAC,SAAS,IAAI;AAChB,YAAM,YAAY,MAAM,SAAS,KAAK;AACtC,cAAQ,MAAM,uBAAuB;QACnC,QAAQ,SAAS;QACjB,YAAY,SAAS;QACrB,MAAM;MACR,CAAC;AACD,YAAM,IAAI,MAAM,uBAAuB,SAAS,MAAM,IAAI,SAAS,UAAU,MAAM,SAAS,EAAE;IAChG;AAEA,UAAM,OAAO,MAAM,SAAS,KAAK;AAEjC,WAAO,IAAI,SAAS,KAAK,UAAU;MACjC,SAAS;MACT;IACF,CAAC,GAAG;MACF,QAAQ;MACR,SAAS;QACP,gBAAgB;QAChB,iBAAiB;;MACnB;IACF,CAAC;EACH,SAAS,OAAO;AACd,YAAQ,MAAM,8CAA8C,KAAK;AACjE,WAAO,IAAI,SAAS,KAAK,UAAU;MACjC,SAAS;MACT,OAAO;IACT,CAAC,GAAG;MACF,QAAQ;MACR,SAAS,EAAE,gBAAgB,mBAAmB;IAChD,CAAC;EACH;AACF;AA1EsBA;AAbtB,IAAA,qBAAA,MAAA;EAAA,+CAAA;AAAA;AAAA,4CAAA;AAAA,uBAAA;AACsB,IAAAV,QAAAc,mBAAA,kBAAA;AAYA,IAAAd,QAAAU,gBAAA,cAAA;EAAA;AAAA,CAAA;ACNtB,eAAsBI,qBAAmB;AACvC,SAAO,IAAI,SAAS,MAAM;IACxB,QAAQ;IACR,SAAS;MACP,+BAA+B;MAC/B,gCAAgC;MAChC,gCAAgC;IAClC;EACF,CAAC;AACH;AATsBA;AAWtB,eAAsBJ,eAAa,SAA+G;AAChJ,QAAM,EAAE,QAAQ,SAAS,IAAI,IAAI;AACjC,QAAM,YAAY,OAAO;AACzB,QAAM,MAAM,IAAI,IAAI,QAAQ,GAAG;AAC/B,QAAM,cAAc,IAAI,aAAa,IAAI,GAAG;AAE5C,MAAI,CAAC,eAAe,YAAY,SAAS,GAAG;AAC1C,WAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,yEAAyE,CAAC,GAAG;MACvH,QAAQ;MACR,SAAS;QACP,gBAAgB;QAChB,+BAA+B;MACjC;IACF,CAAC;EACH;AAEA,QAAM,WAAW,UAAU,SAAS,IAAI,WAAW;AAGnD,QAAM,SAAS,MAAM,IAAI,QAAQ;AACjC,MAAI,UAAU,KAAK,IAAI,IAAI,OAAO,YAAY,WAAW;AACvD,WAAO,IAAI,SAAS,KAAK,UAAU,OAAO,IAAI,GAAG;MAC/C,SAAS;QACP,gBAAgB;QAChB,+BAA+B;QAC/B,iBAAiB;MACnB;IACF,CAAC;EACH;AAGA,MAAI,gBAAgB,IAAI,QAAQ,GAAG;AACjC,UAAM,WAAW,MAAM,gBAAgB,IAAI,QAAQ;AACnD,WAAO,SAAS,MAAM;EACxB;AAGA,QAAM,kBAAkB,YAAY;AAClC,QAAI;AACF,YAAM,SAAS,2CAA2C,SAAS,aAAa,mBAAmB,WAAW,CAAC;AAE/G,YAAM,WAAW,MAAM,MAAM,QAAQ;QACnC,QAAQ;QACR,SAAS;UACP,iBAAiB,UAAU,IAAI,6BAA6B;UAC5D,gBAAgB;QAClB;MACF,CAAC;AAED,UAAI,CAAC,SAAS,IAAI;AAChB,cAAM,IAAI,MAAM,8BAA8B,SAAS,MAAM,EAAE;MACjE;AAEA,YAAM,OAAO,MAAM,SAAS,KAAK;AAGjC,YAAM,IAAI,UAAU,EAAE,MAAM,WAAW,KAAK,IAAI,EAAE,CAAC;AAEnD,aAAO,IAAI,SAAS,KAAK,UAAU,IAAI,GAAG;QACxC,SAAS;UACP,gBAAgB;UAChB,+BAA+B;UAC/B,iBAAiB;QACnB;MACF,CAAC;IACH,SAAS,OAAO;AACd,cAAQ,MAAM,kCAAkC,KAAK;AACrD,aAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,iCAAiC,CAAC,GAAG;QAC/E,QAAQ;QACR,SAAS;UACP,gBAAgB;UAChB,+BAA+B;QACjC;MACF,CAAC;IACH,UAAA;AAEE,sBAAgB,OAAO,QAAQ;IACjC;EACF,GAAG;AAGH,kBAAgB,IAAI,UAAU,cAAc;AAE5C,SAAO;AACT;AApFsBA;AAlBtB,IACM;AADN,IAEM;AAFN,IAKM;AALN,IAAA,cAAA,MAAA;EAAA,wCAAA;AAAA;AAAA,4CAAA;AAAA,uBAAA;AACM,YAAQ,oBAAI,IAAkD;AAC9D,gBAAY,IAAI,KAAK;AAGrB,sBAAkB,oBAAI,IAA+B;AAErC,IAAAV,QAAAc,oBAAA,kBAAA;AAWA,IAAAd,QAAAU,gBAAA,cAAA;EAAA;AAAA,CAAA;AClBtB,eAAsBI,qBAAmB;AACvC,SAAO,IAAI,SAAS,MAAM;IACxB,QAAQ;IACR,SAAS;MACP,+BAA+B;MAC/B,gCAAgC;MAChC,gCAAgC;IAClC;EACF,CAAC;AACH;AATsBA;AAWtB,eAAsBJ,eAAa,SAAsD;AACvF,QAAM,EAAE,SAAS,KAAK,OAAO,IAAI;AACjC,QAAM,EAAE,YAAY,gBAAgB,IAAI;AAExC,MAAI;AACF,YAAQ,IAAI,eAAe,UAAU;AACrC,YAAQ,IAAI,oBAAoB,eAAe;AAE/C,QAAI,CAAC,cAAc,CAAC,iBAAiB;AACnC,aAAO,IAAI,SAAS,KAAK,UAAU;QACjC,SAAS;QACT,OAAO;MACT,CAAC,GAAG;QACF,QAAQ;QACR,SAAS,EAAE,gBAAgB,mBAAmB;MAChD,CAAC;IACH;AAGA,UAAM,WAAW,IAAI;AACrB,QAAI,CAAC,UAAU;AACb,aAAO,IAAI,SAAS,KAAK,UAAU;QACjC,SAAS;QACT,OAAO;MACT,CAAC,GAAG;QACF,QAAQ;QACR,SAAS,EAAE,gBAAgB,mBAAmB;MAChD,CAAC;IACH;AAEA,UAAM,SAAS,gDAAgD,UAAU,IAAI,eAAe;AAE5F,YAAQ,IAAI,0BAA0B,MAAM;AAE5C,UAAM,gBAAgB,MAAM,MAAM,QAAQ;MACxC,QAAQ;MACR,SAAS;QACP,gBAAgB;QAChB,iBAAiB,UAAU,QAAQ;MACrC;IACF,CAAC;AAED,QAAI,CAAC,cAAc,IAAI;AACrB,YAAM,YAAY,MAAM,cAAc,KAAK;AAC3C,cAAQ,MAAM,yBAAyB,SAAS;AAChD,cAAQ,MAAM,iBAAiB,cAAc,QAAQ,cAAc,UAAU;AAC7E,aAAO,IAAI,SAAS,KAAK,UAAU;QACjC,SAAS;QACT,OAAO,uBAAuB,cAAc,MAAM,IAAI,cAAc,UAAU;QAC9E,SAAS;MACX,CAAC,GAAG;QACF,QAAQ,cAAc;QACtB,SAAS,EAAE,gBAAgB,mBAAmB;MAChD,CAAC;IACH;AAEA,UAAM,eAAe,MAAM,cAAc,KAAK;AAG9C,YAAQ,IAAI,yCAAyC;AACrD,YAAQ,IAAI,uBAAuB,KAAK,UAAU,cAAc,MAAM,CAAC,CAAC;AAGxE,QAAI,aAAa,gBAAgB,aAAa,aAAa,YAAY;AACrE,cAAQ,IAAI,0BAA0B;AACtC,cAAQ,IAAI,eAAe,KAAK,UAAU,aAAa,aAAa,YAAY,MAAM,CAAC,CAAC;AAExF,UAAI,aAAa,aAAa,WAAW,eAAe;AACtD,gBAAQ,IAAI,6BAA6B;AACzC,qBAAa,aAAa,WAAW,cAAc,QAAQ,CAAC,UAAmC,UAAkB;AAC/G,kBAAQ,IAAI,gBAAgB,KAAK,KAAK;YACpC,eAAe,SAAS;YACxB,sBAAsB,SAAS;YAC/B,YAAY,SAAS;UACvB,CAAC;QACH,CAAC;MACH;AAEA,UAAI,aAAa,aAAa,WAAW,gBAAgB;AACvD,gBAAQ,IAAI,8BAA8B;AAC1C,qBAAa,aAAa,WAAW,eAAe,QAAQ,CAAC,QAAiC,UAAkB;AAC9G,kBAAQ,IAAI,iBAAiB,KAAK,KAAK;YACrC,eAAe,OAAO;YACtB,sBAAsB,OAAO;YAC7B,YAAY,OAAO;UACrB,CAAC;QACH,CAAC;MACH;AAEA,UAAI,aAAa,aAAa,WAAW,mBAAmB;AAC1D,gBAAQ,IAAI,iCAAiC;AAC7C,qBAAa,aAAa,WAAW,kBAAkB,QAAQ,CAAC,UAAmC,UAAkB;AACnH,kBAAQ,IAAI,oBAAoB,KAAK,KAAK;YACxC,eAAe,SAAS;YACxB,sBAAsB,SAAS;YAC/B,YAAY,SAAS;UACvB,CAAC;QACH,CAAC;MACH;IACF;AAEA,WAAO,IAAI,SAAS,KAAK,UAAU;MACjC,SAAS;MACT,MAAM;IACR,CAAC,GAAG;MACF,QAAQ;MACR,SAAS,EAAE,gBAAgB,mBAAmB;IAChD,CAAC;EAEH,SAAS,OAAO;AACd,YAAQ,MAAM,gCAAgC,KAAK;AACnD,WAAO,IAAI,SAAS,KAAK,UAAU;MACjC,SAAS;MACT,OAAO;IACT,CAAC,GAAG;MACF,QAAQ;MACR,SAAS,EAAE,gBAAgB,mBAAmB;IAChD,CAAC;EACH;AACF;AAvHsBA;AAXtB,IAAA,uBAAA,MAAA;EAAA,wDAAA;AAAA;AAAA,4CAAA;AAAA,uBAAA;AAAsB,IAAAV,QAAAc,oBAAA,kBAAA;AAWA,IAAAd,QAAAU,gBAAA,cAAA;EAAA;AAAA,CAAA;ACXtB,eAAsBA,eAAa,SAAc;AAC/C,MAAI;AACF,UAAM,EAAE,SAAS,IAAI,IAAI;AAEzB,UAAM,kBAAkB,IAAI;AAC5B,UAAM,wBAAwB,GAAG,IAAI,YAAY,uBAAuB;AAExE,QAAI,CAAC,iBAAiB;AACpB,cAAQ,MAAM,gCAAgC;AAC9C,aAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,gCAAgC,CAAC,GAAG;QAC9E,QAAQ;QACR,SAAS,EAAE,gBAAgB,mBAAmB;MAChD,CAAC;IACH;AAGA,UAAM,QAAQ,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,UAAU,GAAG,EAAE;AAGxD,UAAM,UAAU,yDACD,eAAe,iBACZ,mBAAmB,qBAAqB,CAAC,6BAEhD,mBAAmB,OAAO,CAAC,UAC3B,KAAK;AAGhB,UAAM,WAAW,IAAI,SAAS,MAAM;MAClC,QAAQ;MACR,SAAS;QACP,YAAY;QACZ,cAAc,eAAe,KAAK,eAAe,IAAI,UAAU,WAAW,UAAU,IAAI,aAAa,EAAE;MACzG;IACF,CAAC;AAED,WAAO;EAET,SAAS,OAAO;AACd,YAAQ,MAAM,oCAAoC,KAAK;AACvD,WAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,wBAAwB,CAAC,GAAG;MACtE,QAAQ;MACR,SAAS,EAAE,gBAAgB,mBAAmB;IAChD,CAAC;EACH;AACF;AA5CsBA;AAAtB,IAAA,gBAAA,MAAA;EAAA,+BAAA;AAAA;AAAA,4CAAA;AAAA,uBAAA;AAAsB,IAAAV,QAAAU,gBAAA,cAAA;EAAA;AAAA,CAAA;ACAtB,SAAS,gBAAwB;AAE/B,QAAM,QAAQ,IAAI,WAAW,EAAE;AAC/B,SAAO,gBAAgB,KAAK;AAC5B,SAAO,MAAM,KAAK,OAAO,CAAA,SAAQ,KAAK,SAAS,EAAE,EAAE,SAAS,GAAG,GAAG,CAAC,EAAE,KAAK,EAAE;AAC9E;AALS;AAOT,eAAsBA,eAAa,SAAc;AAC/C,MAAI;AACF,UAAM,EAAE,IAAI,IAAI;AAEhB,UAAM,mBAAmB,IAAI;AAC7B,UAAM,sBAAsB,GAAG,IAAI,YAAY,uBAAuB;AAEtE,QAAI,CAAC,kBAAkB;AACrB,aAAO,IAAI,SAAS,MAAM;QACxB,QAAQ;QACR,SAAS,EAAE,YAAY,GAAG,IAAI,YAAY,uBAAuB,mCAAmC;MACtG,CAAC;IACH;AAGA,UAAM,QAAQ,cAAc;AAG5B,UAAM,UAAU,sDAAsD,gBAAgB,iBAAiB,mBAAmB,mBAAmB,CAAC,2BAA2B,KAAK;AAE9K,WAAO,IAAI,SAAS,MAAM;MACxB,QAAQ;MACR,SAAS;QACP,YAAY;QACZ,cAAc,eAAe,KAAK,eAAe,IAAI,UAAU,WAAW,UAAU,IAAI,aAAa,EAAE;MACzG;IACF,CAAC;EAEH,SAAS,OAAO;AACd,YAAQ,MAAM,kCAAkC,KAAK;AACrD,WAAO,IAAI,SAAS,MAAM;MACxB,QAAQ;MACR,SAAS,EAAE,YAAY,GAAG,QAAQ,IAAI,YAAY,uBAAuB,mCAAmC;IAC9G,CAAC;EACH;AACF;AAnCsBA;AAPtB,IAAA,cAAA,MAAA;EAAA,6BAAA;AAAA;AAAA,4CAAA;AAAA,uBAAA;AAAS,IAAAV,QAAA,eAAA,eAAA;AAOa,IAAAA,QAAAU,gBAAA,cAAA;EAAA;AAAA,CAAA;ACPtB,eAAsBA,eAAa,SAAc;AAC/C,MAAI;AACF,UAAM,EAAE,SAAS,IAAI,IAAI;AAEzB,UAAM,mBAAmB,IAAI;AAC7B,UAAM,sBAAsB,GAAG,IAAI,YAAY,uBAAuB;AAEtE,QAAI,CAAC,kBAAkB;AACrB,cAAQ,MAAM,iCAAiC;AAC/C,aAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,8BAA8B,CAAC,GAAG;QAC5E,QAAQ;QACR,SAAS,EAAE,gBAAgB,mBAAmB;MAChD,CAAC;IACH;AAGA,UAAM,QAAQ,KAAK,OAAO,EAAE,SAAS,EAAE,EAAE,UAAU,GAAG,EAAE;AAGxD,UAAM,UAAU,0DACD,gBAAgB,iBACb,mBAAmB,mBAAmB,CAAC,6BAE9C,mBAAmB,sBAAsB,CAAC,UAC1C,KAAK;AAKhB,UAAM,WAAW,IAAI,SAAS,MAAM;MAClC,QAAQ;MACR,SAAS;QACP,YAAY;QACZ,cAAc,eAAe,KAAK,eAAe,IAAI,UAAU,WAAW,UAAU,IAAI,aAAa,EAAE;MACzG;IACF,CAAC;AAED,WAAO;EAET,SAAS,OAAO;AACd,YAAQ,MAAM,kCAAkC,KAAK;AACrD,WAAO,IAAI,SAAS,KAAK,UAAU,EAAE,OAAO,wBAAwB,CAAC,GAAG;MACtE,QAAQ;MACR,SAAS,EAAE,gBAAgB,mBAAmB;IAChD,CAAC;EACH;AACF;AA9CsBA;AAAtB,IAAA,cAAA,MAAA;EAAA,6BAAA;AAAA;AAAA,4CAAA;AAAA,uBAAA;AAAsB,IAAAV,QAAAU,gBAAA,cAAA;EAAA;AAAA,CAAA;ACCtB,eAAsBI,qBAAmB;AACvC,SAAO,IAAI,SAAS,MAAM;IACxB,QAAQ;IACR,SAAS;MACP,+BAA+B;MAC/B,gCAAgC;MAChC,gCAAgC;IAClC;EACF,CAAC;AACH;AATsBA;AAYtB,eAAsBE,eAAc,SAAyC;AAC3E,MAAI;AACF,UAAM,EAAE,SAAS,IAAI,IAAI;AACzB,UAAM,OAAO,MAAM,QAAQ,KAAK;AAGhC,QAAI,CAAC,KAAK,SAAS,CAAC,KAAK,cAAc;AACrC,aAAO,IAAI,SAAS,KAAK,UAAU;QACjC,SAAS;QACT,OAAO;MACT,CAAC,GAAG;QACF,QAAQ;QACR,SAAS,EAAE,gBAAgB,mBAAmB;MAChD,CAAC;IACH;AAGA,UAAM,cAAc,IAAI;AACxB,QAAI,CAAC,aAAa;AAChB,YAAM,IAAI,MAAM,8CAA8C;IAChE;AAEA,YAAQ,IAAI,0BAA0B,8CAA8C;AACpF,YAAQ,IAAI,iBAAiB;MAC3B,OAAO,KAAK;MACZ,MAAM,KAAK;MACX,cAAc,KAAK;MACnB,qBAAqB,KAAK,uBAAuB;IACnD,CAAC;AACD,YAAQ,IAAI,YAAY;MACtB,gBAAgB;MAChB,iBAAiB,UAAU,YAAY,UAAU,GAAG,CAAC,CAAC;IACxD,CAAC;AAED,QAAI;AACJ,QAAI;AACF,iBAAW,MAAM,MAAM,gDAAgD;QACrE,QAAQ;QACR,SAAS;UACP,gBAAgB;UAChB,iBAAiB,UAAU,WAAW;QACxC;QACA,MAAM,KAAK,UAAU;UACnB,OAAO,KAAK;UACZ,MAAM,KAAK;UACX,cAAc,KAAK;UACnB,qBAAqB,KAAK,uBAAuB;QACnD,CAAC;MACH,CAAC;IACH,SAAS,YAAY;AACnB,cAAQ,MAAM,gBAAgB,UAAU;AACxC,YAAM,eAAe,sBAAsB,QAAQ,WAAW,UAAU;AACxE,YAAM,IAAI,MAAM,kBAAkB,YAAY,EAAE;IAClD;AAEA,QAAI,CAAC,SAAS,IAAI;AAChB,YAAM,YAAY,MAAM,SAAS,KAAK;AACtC,cAAQ,MAAM,uBAAuB;QACnC,QAAQ,SAAS;QACjB,YAAY,SAAS;QACrB,MAAM;MACR,CAAC;AACD,YAAM,IAAI,MAAM,uBAAuB,SAAS,MAAM,IAAI,SAAS,UAAU,MAAM,SAAS,EAAE;IAChG;AAEA,UAAM,OAAO,MAAM,SAAS,KAAK;AAEjC,WAAO,IAAI,SAAS,KAAK,UAAU;MACjC,SAAS;MACT;IACF,CAAC,GAAG;MACF,QAAQ;MACR,SAAS,EAAE,gBAAgB,mBAAmB;IAChD,CAAC;EACH,SAAS,OAAO;AACd,YAAQ,MAAM,2BAA2B,KAAK;AAC9C,WAAO,IAAI,SAAS,KAAK,UAAU;MACjC,SAAS;MACT,OAAO;IACT,CAAC,GAAG;MACF,QAAQ;MACR,SAAS,EAAE,gBAAgB,mBAAmB;IAChD,CAAC;EACH;AACF;AApFsBA;AAbtB,IAAA,gBAAA,MAAA;EAAA,+BAAA;AAAA;AAAA,4CAAA;AAAA,uBAAA;AACsB,IAAAhB,QAAAc,oBAAA,kBAAA;AAYA,IAAAd,QAAAgB,gBAAA,eAAA;EAAA;AAAA,CAAA;;;;;;;ACbtB,IAAA,eAAA,WAAA;EAAA,oCAAA,SAAA,QAAA;AAAA,4CAAA;AAAA,uBAAA;AAAC,KAAC,SAAU,MAAM,SAAS;AAC1B,UAAI,OAAO,YAAY,UAAU;AAEhC,eAAO,UAAU,UAAU,QAAQ;MACpC,WACS,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,eAAO,CAAC,GAAG,OAAO;MACnB,OACK;AAEJ,aAAK,WAAW,QAAQ;MACzB;IACD,GAAE,SAAM,WAAY;AAOnB,UAAIC,YAAWA,aAAa,SAAUC,OAAMC,YAAW;AAEnD,YAAIC;AAGJ,YAAI,OAAO,WAAW,eAAe,OAAO,QAAQ;AAChDA,oBAAS,OAAO;QACpB;AAGA,YAAI,OAAO,SAAS,eAAe,KAAK,QAAQ;AAC5CA,oBAAS,KAAK;QAClB;AAGA,YAAI,OAAO,eAAe,eAAe,WAAW,QAAQ;AACxDA,oBAAS,WAAW;QACxB;AAGA,YAAI,CAACA,WAAU,OAAO,WAAW,eAAe,OAAO,UAAU;AAC7DA,oBAAS,OAAO;QACpB;AAGA,YAAI,CAACA,WAAU,OAAO,WAAW,eAAe,OAAO,QAAQ;AAC3DA,oBAAS,OAAO;QACpB;AAGA,YAAI,CAACA,WAAU,OAAOC,eAAY,YAAY;AAC1C,cAAI;AACAD,sBAAS,eAAA;UACb,SAAS,KAAK;UAAC;QACnB;AAOA,YAAI,wBAAwB,gBAAApB,QAAA,WAAY;AACpC,cAAIoB,SAAQ;AAER,gBAAI,OAAOA,QAAO,oBAAoB,YAAY;AAC9C,kBAAI;AACA,uBAAOA,QAAO,gBAAgB,IAAI,YAAY,CAAC,CAAC,EAAE,CAAC;cACvD,SAAS,KAAK;cAAC;YACnB;AAGA,gBAAI,OAAOA,QAAO,gBAAgB,YAAY;AAC1C,kBAAI;AACA,uBAAOA,QAAO,YAAY,CAAC,EAAE,YAAY;cAC7C,SAAS,KAAK;cAAC;YACnB;UACJ;AAEA,gBAAM,IAAI,MAAM,qEAAqE;QACzF,GAlB4B,uBAAA;AAwB5B,YAAI,SAAS,OAAO,UAAW,2BAAY;AACvC,mBAAS,IAAI;UAAC;AAAL;AAAA,UAAApB,QAAA,GAAA,GAAA;AAET,iBAAO,SAAU,KAAK;AAClB,gBAAI;AAEJ,cAAE,YAAY;AAEd,sBAAU,IAAI,EAAE;AAEhB,cAAE,YAAY;AAEd,mBAAO;UACX;QACJ,EAAE;AAKF,YAAI,IAAI,CAAC;AAKT,YAAI,QAAQ,EAAE,MAAM,CAAC;AAKrB,YAAI,OAAO,MAAM,OAAQ,2BAAY;AAGjC,iBAAO;;;;;;;;;;;;;;;;;;;YAmBH,QAAQ,gBAAAA,QAAA,SAAU,WAAW;AAEzB,kBAAI,UAAU,OAAO,IAAI;AAGzB,kBAAI,WAAW;AACX,wBAAQ,MAAM,SAAS;cAC3B;AAGA,kBAAI,CAAC,QAAQ,eAAe,MAAM,KAAK,KAAK,SAAS,QAAQ,MAAM;AAC/D,wBAAQ,OAAO,WAAY;AACvB,0BAAQ,OAAO,KAAK,MAAM,MAAM,SAAS;gBAC7C;cACJ;AAGA,sBAAQ,KAAK,YAAY;AAGzB,sBAAQ,SAAS;AAEjB,qBAAO;YACX,GAvBQ,QAAA;;;;;;;;;;;;;YAqCR,QAAQ,gBAAAA,QAAA,WAAY;AAChB,kBAAI,WAAW,KAAK,OAAO;AAC3B,uBAAS,KAAK,MAAM,UAAU,SAAS;AAEvC,qBAAO;YACX,GALQ,QAAA;;;;;;;;;;;;;YAmBR,MAAM,gBAAAA,QAAA,WAAY;YAClB,GADM,MAAA;;;;;;;;;;;;YAcN,OAAO,gBAAAA,QAAA,SAAU,YAAY;AACzB,uBAAS,gBAAgB,YAAY;AACjC,oBAAI,WAAW,eAAe,YAAY,GAAG;AACzC,uBAAK,YAAY,IAAI,WAAW,YAAY;gBAChD;cACJ;AAGA,kBAAI,WAAW,eAAe,UAAU,GAAG;AACvC,qBAAK,WAAW,WAAW;cAC/B;YACJ,GAXO,OAAA;;;;;;;;;;YAsBP,OAAO,gBAAAA,QAAA,WAAY;AACf,qBAAO,KAAK,KAAK,UAAU,OAAO,IAAI;YAC1C,GAFO,OAAA;UAGX;QACJ,EAAE;AAQF,YAAI,YAAY,MAAM,YAAY,KAAK,OAAO;;;;;;;;;;;;;UAa1C,MAAM,gBAAAA,QAAA,SAAU,OAAO,UAAU;AAC7B,oBAAQ,KAAK,QAAQ,SAAS,CAAC;AAE/B,gBAAI,YAAYmB,YAAW;AACvB,mBAAK,WAAW;YACpB,OAAO;AACH,mBAAK,WAAW,MAAM,SAAS;YACnC;UACJ,GARM,MAAA;;;;;;;;;;;;;;UAuBN,UAAU,gBAAAnB,QAAA,SAAU,SAAS;AACzB,oBAAQ,WAAW,KAAK,UAAU,IAAI;UAC1C,GAFU,UAAA;;;;;;;;;;;;UAeV,QAAQ,gBAAAA,QAAA,SAAU,WAAW;AAEzB,gBAAI,YAAY,KAAK;AACrB,gBAAI,YAAY,UAAU;AAC1B,gBAAI,eAAe,KAAK;AACxB,gBAAI,eAAe,UAAU;AAG7B,iBAAK,MAAM;AAGX,gBAAI,eAAe,GAAG;AAElB,uBAAS,IAAI,GAAG,IAAI,cAAc,KAAK;AACnC,oBAAI,WAAY,UAAU,MAAM,CAAC,MAAO,KAAM,IAAI,IAAK,IAAM;AAC7D,0BAAW,eAAe,MAAO,CAAC,KAAK,YAAa,MAAO,eAAe,KAAK,IAAK;cACxF;YACJ,OAAO;AAEH,uBAAS,IAAI,GAAG,IAAI,cAAc,KAAK,GAAG;AACtC,0BAAW,eAAe,MAAO,CAAC,IAAI,UAAU,MAAM,CAAC;cAC3D;YACJ;AACA,iBAAK,YAAY;AAGjB,mBAAO;UACX,GA3BQ,QAAA;;;;;;;;UAoCR,OAAO,gBAAAA,QAAA,WAAY;AAEf,gBAAI,QAAQ,KAAK;AACjB,gBAAI,WAAW,KAAK;AAGpB,kBAAM,aAAa,CAAC,KAAK,cAAe,KAAM,WAAW,IAAK;AAC9D,kBAAM,SAASkB,MAAK,KAAK,WAAW,CAAC;UACzC,GARO,OAAA;;;;;;;;;;UAmBP,OAAO,gBAAAlB,QAAA,WAAY;AACf,gBAAI,QAAQ,KAAK,MAAM,KAAK,IAAI;AAChC,kBAAM,QAAQ,KAAK,MAAM,MAAM,CAAC;AAEhC,mBAAO;UACX,GALO,OAAA;;;;;;;;;;;;;;UAoBP,QAAQ,gBAAAA,QAAA,SAAU,QAAQ;AACtB,gBAAI,QAAQ,CAAC;AAEb,qBAAS,IAAI,GAAG,IAAI,QAAQ,KAAK,GAAG;AAChC,oBAAM,KAAK,sBAAsB,CAAC;YACtC;AAEA,mBAAO,IAAI,UAAU,KAAK,OAAO,MAAM;UAC3C,GARQ,QAAA;QASZ,CAAC;AAKD,YAAI,QAAQ,EAAE,MAAM,CAAC;AAKrB,YAAI,MAAM,MAAM,MAAM;;;;;;;;;;;;;;UAclB,WAAW,gBAAAA,QAAA,SAAU,WAAW;AAE5B,gBAAI,QAAQ,UAAU;AACtB,gBAAI,WAAW,UAAU;AAGzB,gBAAI,WAAW,CAAC;AAChB,qBAAS,IAAI,GAAG,IAAI,UAAU,KAAK;AAC/B,kBAAI,OAAQ,MAAM,MAAM,CAAC,MAAO,KAAM,IAAI,IAAK,IAAM;AACrD,uBAAS,MAAM,SAAS,GAAG,SAAS,EAAE,CAAC;AACvC,uBAAS,MAAM,OAAO,IAAM,SAAS,EAAE,CAAC;YAC5C;AAEA,mBAAO,SAAS,KAAK,EAAE;UAC3B,GAdW,WAAA;;;;;;;;;;;;;;UA6BX,OAAO,gBAAAA,QAAA,SAAU,QAAQ;AAErB,gBAAI,eAAe,OAAO;AAG1B,gBAAI,QAAQ,CAAC;AACb,qBAAS,IAAI,GAAG,IAAI,cAAc,KAAK,GAAG;AACtC,oBAAM,MAAM,CAAC,KAAK,SAAS,OAAO,OAAO,GAAG,CAAC,GAAG,EAAE,KAAM,KAAM,IAAI,IAAK;YAC3E;AAEA,mBAAO,IAAI,UAAU,KAAK,OAAO,eAAe,CAAC;UACrD,GAXO,OAAA;QAYX;AAKA,YAAI,SAAS,MAAM,SAAS;;;;;;;;;;;;;;UAcxB,WAAW,gBAAAA,QAAA,SAAU,WAAW;AAE5B,gBAAI,QAAQ,UAAU;AACtB,gBAAI,WAAW,UAAU;AAGzB,gBAAI,cAAc,CAAC;AACnB,qBAAS,IAAI,GAAG,IAAI,UAAU,KAAK;AAC/B,kBAAI,OAAQ,MAAM,MAAM,CAAC,MAAO,KAAM,IAAI,IAAK,IAAM;AACrD,0BAAY,KAAK,OAAO,aAAa,IAAI,CAAC;YAC9C;AAEA,mBAAO,YAAY,KAAK,EAAE;UAC9B,GAbW,WAAA;;;;;;;;;;;;;;UA4BX,OAAO,gBAAAA,QAAA,SAAU,WAAW;AAExB,gBAAI,kBAAkB,UAAU;AAGhC,gBAAI,QAAQ,CAAC;AACb,qBAAS,IAAI,GAAG,IAAI,iBAAiB,KAAK;AACtC,oBAAM,MAAM,CAAC,MAAM,UAAU,WAAW,CAAC,IAAI,QAAU,KAAM,IAAI,IAAK;YAC1E;AAEA,mBAAO,IAAI,UAAU,KAAK,OAAO,eAAe;UACpD,GAXO,OAAA;QAYX;AAKA,YAAI,OAAO,MAAM,OAAO;;;;;;;;;;;;;;UAcpB,WAAW,gBAAAA,QAAA,SAAU,WAAW;AAC5B,gBAAI;AACA,qBAAO,mBAAmB,OAAO,OAAO,UAAU,SAAS,CAAC,CAAC;YACjE,SAAS,GAAG;AACR,oBAAM,IAAI,MAAM,sBAAsB;YAC1C;UACJ,GANW,WAAA;;;;;;;;;;;;;;UAqBX,OAAO,gBAAAA,QAAA,SAAU,SAAS;AACtB,mBAAO,OAAO,MAAM,SAAS,mBAAmB,OAAO,CAAC,CAAC;UAC7D,GAFO,OAAA;QAGX;AASA,YAAI,yBAAyB,MAAM,yBAAyB,KAAK,OAAO;;;;;;;;UAQpE,OAAO,gBAAAA,QAAA,WAAY;AAEf,iBAAK,QAAQ,IAAI,UAAU,KAAK;AAChC,iBAAK,cAAc;UACvB,GAJO,OAAA;;;;;;;;;;;UAgBP,SAAS,gBAAAA,QAAA,SAAU,MAAM;AAErB,gBAAI,OAAO,QAAQ,UAAU;AACzB,qBAAO,KAAK,MAAM,IAAI;YAC1B;AAGA,iBAAK,MAAM,OAAO,IAAI;AACtB,iBAAK,eAAe,KAAK;UAC7B,GATS,SAAA;;;;;;;;;;;;;;;UAyBT,UAAU,gBAAAA,QAAA,SAAU,SAAS;AACzB,gBAAI;AAGJ,gBAAI,OAAO,KAAK;AAChB,gBAAI,YAAY,KAAK;AACrB,gBAAI,eAAe,KAAK;AACxB,gBAAI,YAAY,KAAK;AACrB,gBAAI,iBAAiB,YAAY;AAGjC,gBAAI,eAAe,eAAe;AAClC,gBAAI,SAAS;AAET,6BAAekB,MAAK,KAAK,YAAY;YACzC,OAAO;AAGH,6BAAeA,MAAK,KAAK,eAAe,KAAK,KAAK,gBAAgB,CAAC;YACvE;AAGA,gBAAI,cAAc,eAAe;AAGjC,gBAAI,cAAcA,MAAK,IAAI,cAAc,GAAG,YAAY;AAGxD,gBAAI,aAAa;AACb,uBAAS,SAAS,GAAG,SAAS,aAAa,UAAU,WAAW;AAE5D,qBAAK,gBAAgB,WAAW,MAAM;cAC1C;AAGA,+BAAiB,UAAU,OAAO,GAAG,WAAW;AAChD,mBAAK,YAAY;YACrB;AAGA,mBAAO,IAAI,UAAU,KAAK,gBAAgB,WAAW;UACzD,GAzCU,UAAA;;;;;;;;;;UAoDV,OAAO,gBAAAlB,QAAA,WAAY;AACf,gBAAI,QAAQ,KAAK,MAAM,KAAK,IAAI;AAChC,kBAAM,QAAQ,KAAK,MAAM,MAAM;AAE/B,mBAAO;UACX,GALO,OAAA;UAOP,gBAAgB;QACpB,CAAC;AAOD,YAAI,SAAS,MAAM,SAAS,uBAAuB,OAAO;;;;UAItD,KAAK,KAAK,OAAO;;;;;;;;;;UAWjB,MAAM,gBAAAA,QAAA,SAAU,KAAK;AAEjB,iBAAK,MAAM,KAAK,IAAI,OAAO,GAAG;AAG9B,iBAAK,MAAM;UACf,GANM,MAAA;;;;;;;;UAeN,OAAO,gBAAAA,QAAA,WAAY;AAEf,mCAAuB,MAAM,KAAK,IAAI;AAGtC,iBAAK,SAAS;UAClB,GANO,OAAA;;;;;;;;;;;;;UAoBP,QAAQ,gBAAAA,QAAA,SAAU,eAAe;AAE7B,iBAAK,QAAQ,aAAa;AAG1B,iBAAK,SAAS;AAGd,mBAAO;UACX,GATQ,QAAA;;;;;;;;;;;;;;;UAyBR,UAAU,gBAAAA,QAAA,SAAU,eAAe;AAE/B,gBAAI,eAAe;AACf,mBAAK,QAAQ,aAAa;YAC9B;AAGA,gBAAI,OAAO,KAAK,YAAY;AAE5B,mBAAO;UACX,GAVU,UAAA;UAYV,WAAW,MAAI;;;;;;;;;;;;;;UAef,eAAe,gBAAAA,QAAA,SAAU,QAAQ;AAC7B,mBAAO,SAAU,SAAS,KAAK;AAC3B,qBAAO,IAAI,OAAO,KAAK,GAAG,EAAE,SAAS,OAAO;YAChD;UACJ,GAJe,eAAA;;;;;;;;;;;;;;UAmBf,mBAAmB,gBAAAA,QAAA,SAAU,QAAQ;AACjC,mBAAO,SAAU,SAAS,KAAK;AAC3B,qBAAO,IAAI,OAAO,KAAK,KAAK,QAAQ,GAAG,EAAE,SAAS,OAAO;YAC7D;UACJ,GAJmB,mBAAA;QAKvB,CAAC;AAKD,YAAI,SAAS,EAAE,OAAO,CAAC;AAEvB,eAAO;MACX,EAAE,IAAI;AAGN,aAAOiB;IAER,CAAC;EAAA;AAAA,CAAA;ACtyBD,IAAA,mBAAA,WAAA;EAAA,wCAAA,SAAA,QAAA;AAAA,4CAAA;AAAA,uBAAA;AAAC,KAAC,SAAU,MAAM,SAAS;AAC1B,UAAI,OAAO,YAAY,UAAU;AAEhC,eAAO,UAAU,UAAU,QAAQ,aAAA,CAAiB;MACrD,WACS,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,eAAO,CAAC,QAAQ,GAAG,OAAO;MAC3B,OACK;AAEJ,gBAAQ,KAAK,QAAQ;MACtB;IACD,GAAE,SAAM,SAAUA,WAAU;AAE3B,OAAC,SAAUE,YAAW;AAElB,YAAI,IAAIF;AACR,YAAI,QAAQ,EAAE;AACd,YAAI,OAAO,MAAM;AACjB,YAAI,eAAe,MAAM;AAKzB,YAAI,QAAQ,EAAE,MAAM,CAAC;AAKrB,YAAI,UAAU,MAAM,OAAO,KAAK,OAAO;;;;;;;;;;;UAWnC,MAAM,gBAAAjB,QAAA,SAAU,MAAM,KAAK;AACvB,iBAAK,OAAO;AACZ,iBAAK,MAAM;UACf,GAHM,MAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAyKV,CAAC;AAQD,YAAI,eAAe,MAAM,YAAY,KAAK,OAAO;;;;;;;;;;;;;;;;;;;;;UAqB7C,MAAM,gBAAAA,QAAA,SAAU,OAAO,UAAU;AAC7B,oBAAQ,KAAK,QAAQ,SAAS,CAAC;AAE/B,gBAAI,YAAYmB,YAAW;AACvB,mBAAK,WAAW;YACpB,OAAO;AACH,mBAAK,WAAW,MAAM,SAAS;YACnC;UACJ,GARM,MAAA;;;;;;;;;;UAmBN,OAAO,gBAAAnB,QAAA,WAAY;AAEf,gBAAI,WAAW,KAAK;AACpB,gBAAI,iBAAiB,SAAS;AAG9B,gBAAI,WAAW,CAAC;AAChB,qBAAS,IAAI,GAAG,IAAI,gBAAgB,KAAK;AACrC,kBAAI,UAAU,SAAS,CAAC;AACxB,uBAAS,KAAK,QAAQ,IAAI;AAC1B,uBAAS,KAAK,QAAQ,GAAG;YAC7B;AAEA,mBAAO,aAAa,OAAO,UAAU,KAAK,QAAQ;UACtD,GAdO,OAAA;;;;;;;;;;UAyBP,OAAO,gBAAAA,QAAA,WAAY;AACf,gBAAI,QAAQ,KAAK,MAAM,KAAK,IAAI;AAGhC,gBAAI,QAAQ,MAAM,QAAQ,KAAK,MAAM,MAAM,CAAC;AAG5C,gBAAI,cAAc,MAAM;AACxB,qBAAS,IAAI,GAAG,IAAI,aAAa,KAAK;AAClC,oBAAM,CAAC,IAAI,MAAM,CAAC,EAAE,MAAM;YAC9B;AAEA,mBAAO;UACX,GAbO,OAAA;QAcX,CAAC;MACL,GAAE;AAGF,aAAOiB;IAER,CAAC;EAAA;AAAA,CAAA;AC/SD,IAAA,0BAAA,WAAA;EAAA,+CAAA,SAAA,QAAA;AAAA,4CAAA;AAAA,uBAAA;AAAC,KAAC,SAAU,MAAM,SAAS;AAC1B,UAAI,OAAO,YAAY,UAAU;AAEhC,eAAO,UAAU,UAAU,QAAQ,aAAA,CAAiB;MACrD,WACS,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,eAAO,CAAC,QAAQ,GAAG,OAAO;MAC3B,OACK;AAEJ,gBAAQ,KAAK,QAAQ;MACtB;IACD,GAAE,SAAM,SAAUA,WAAU;AAE3B,OAAC,WAAY;AAET,YAAI,OAAO,eAAe,YAAY;AAClC;QACJ;AAGA,YAAI,IAAIA;AACR,YAAI,QAAQ,EAAE;AACd,YAAI,YAAY,MAAM;AAGtB,YAAI,YAAY,UAAU;AAG1B,YAAI,UAAU,UAAU,OAAO,SAAU,YAAY;AAEjD,cAAI,sBAAsB,aAAa;AACnC,yBAAa,IAAI,WAAW,UAAU;UAC1C;AAGA,cACI,sBAAsB,aACrB,OAAO,sBAAsB,eAAe,sBAAsB,qBACnE,sBAAsB,cACtB,sBAAsB,eACtB,sBAAsB,cACtB,sBAAsB,eACtB,sBAAsB,gBACtB,sBAAsB,cACxB;AACE,yBAAa,IAAI,WAAW,WAAW,QAAQ,WAAW,YAAY,WAAW,UAAU;UAC/F;AAGA,cAAI,sBAAsB,YAAY;AAElC,gBAAI,uBAAuB,WAAW;AAGtC,gBAAI,QAAQ,CAAC;AACb,qBAAS,IAAI,GAAG,IAAI,sBAAsB,KAAK;AAC3C,oBAAM,MAAM,CAAC,KAAK,WAAW,CAAC,KAAM,KAAM,IAAI,IAAK;YACvD;AAGA,sBAAU,KAAK,MAAM,OAAO,oBAAoB;UACpD,OAAO;AAEH,sBAAU,MAAM,MAAM,SAAS;UACnC;QACJ;AAEA,gBAAQ,YAAY;MACxB,GAAE;AAGF,aAAOA,UAAS,IAAI;IAErB,CAAC;EAAA;AAAA,CAAA;AC3ED,IAAA,oBAAA,WAAA;EAAA,yCAAA,SAAA,QAAA;AAAA,4CAAA;AAAA,uBAAA;AAAC,KAAC,SAAU,MAAM,SAAS;AAC1B,UAAI,OAAO,YAAY,UAAU;AAEhC,eAAO,UAAU,UAAU,QAAQ,aAAA,CAAiB;MACrD,WACS,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,eAAO,CAAC,QAAQ,GAAG,OAAO;MAC3B,OACK;AAEJ,gBAAQ,KAAK,QAAQ;MACtB;IACD,GAAE,SAAM,SAAUA,WAAU;AAE3B,OAAC,WAAY;AAET,YAAI,IAAIA;AACR,YAAI,QAAQ,EAAE;AACd,YAAI,YAAY,MAAM;AACtB,YAAI,QAAQ,EAAE;AAKd,YAAI,UAAU,MAAM,QAAQ,MAAM,UAAU;;;;;;;;;;;;;;UAcxC,WAAW,gBAAAjB,QAAA,SAAU,WAAW;AAE5B,gBAAI,QAAQ,UAAU;AACtB,gBAAI,WAAW,UAAU;AAGzB,gBAAI,aAAa,CAAC;AAClB,qBAAS,IAAI,GAAG,IAAI,UAAU,KAAK,GAAG;AAClC,kBAAI,YAAa,MAAM,MAAM,CAAC,MAAO,KAAM,IAAI,IAAK,IAAM;AAC1D,yBAAW,KAAK,OAAO,aAAa,SAAS,CAAC;YAClD;AAEA,mBAAO,WAAW,KAAK,EAAE;UAC7B,GAbW,WAAA;;;;;;;;;;;;;;UA4BX,OAAO,gBAAAA,QAAA,SAAU,UAAU;AAEvB,gBAAI,iBAAiB,SAAS;AAG9B,gBAAI,QAAQ,CAAC;AACb,qBAAS,IAAI,GAAG,IAAI,gBAAgB,KAAK;AACrC,oBAAM,MAAM,CAAC,KAAK,SAAS,WAAW,CAAC,KAAM,KAAM,IAAI,IAAK;YAChE;AAEA,mBAAO,UAAU,OAAO,OAAO,iBAAiB,CAAC;UACrD,GAXO,OAAA;QAYX;AAKA,cAAM,UAAU;;;;;;;;;;;;;;UAcZ,WAAW,gBAAAA,QAAA,SAAU,WAAW;AAE5B,gBAAI,QAAQ,UAAU;AACtB,gBAAI,WAAW,UAAU;AAGzB,gBAAI,aAAa,CAAC;AAClB,qBAAS,IAAI,GAAG,IAAI,UAAU,KAAK,GAAG;AAClC,kBAAI,YAAY,WAAY,MAAM,MAAM,CAAC,MAAO,KAAM,IAAI,IAAK,IAAM,KAAM;AAC3E,yBAAW,KAAK,OAAO,aAAa,SAAS,CAAC;YAClD;AAEA,mBAAO,WAAW,KAAK,EAAE;UAC7B,GAbW,WAAA;;;;;;;;;;;;;;UA4BX,OAAO,gBAAAA,QAAA,SAAU,UAAU;AAEvB,gBAAI,iBAAiB,SAAS;AAG9B,gBAAI,QAAQ,CAAC;AACb,qBAAS,IAAI,GAAG,IAAI,gBAAgB,KAAK;AACrC,oBAAM,MAAM,CAAC,KAAK,WAAW,SAAS,WAAW,CAAC,KAAM,KAAM,IAAI,IAAK,EAAG;YAC9E;AAEA,mBAAO,UAAU,OAAO,OAAO,iBAAiB,CAAC;UACrD,GAXO,OAAA;QAYX;AAEA,iBAAS,WAAW,MAAM;AACtB,iBAAS,QAAQ,IAAK,aAAgB,SAAS,IAAK;QACxD;AAFS;AAAA,QAAAA,QAAA,YAAA,YAAA;MAGb,GAAE;AAGF,aAAOiB,UAAS,IAAI;IAErB,CAAC;EAAA;AAAA,CAAA;ACpJD,IAAA,qBAAA,WAAA;EAAA,0CAAA,SAAA,QAAA;AAAA,4CAAA;AAAA,uBAAA;AAAC,KAAC,SAAU,MAAM,SAAS;AAC1B,UAAI,OAAO,YAAY,UAAU;AAEhC,eAAO,UAAU,UAAU,QAAQ,aAAA,CAAiB;MACrD,WACS,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,eAAO,CAAC,QAAQ,GAAG,OAAO;MAC3B,OACK;AAEJ,gBAAQ,KAAK,QAAQ;MACtB;IACD,GAAE,SAAM,SAAUA,WAAU;AAE3B,OAAC,WAAY;AAET,YAAI,IAAIA;AACR,YAAI,QAAQ,EAAE;AACd,YAAI,YAAY,MAAM;AACtB,YAAI,QAAQ,EAAE;AAKd,YAAI,SAAS,MAAM,SAAS;;;;;;;;;;;;;;UAcxB,WAAW,gBAAAjB,QAAA,SAAU,WAAW;AAE5B,gBAAI,QAAQ,UAAU;AACtB,gBAAI,WAAW,UAAU;AACzB,gBAAI,MAAM,KAAK;AAGf,sBAAU,MAAM;AAGhB,gBAAI,cAAc,CAAC;AACnB,qBAAS,IAAI,GAAG,IAAI,UAAU,KAAK,GAAG;AAClC,kBAAI,QAAS,MAAM,MAAM,CAAC,MAAa,KAAM,IAAI,IAAK,IAAY;AAClE,kBAAI,QAAS,MAAO,IAAI,MAAO,CAAC,MAAO,MAAO,IAAI,KAAK,IAAK,IAAM;AAClE,kBAAI,QAAS,MAAO,IAAI,MAAO,CAAC,MAAO,MAAO,IAAI,KAAK,IAAK,IAAM;AAElE,kBAAI,UAAW,SAAS,KAAO,SAAS,IAAK;AAE7C,uBAAS,IAAI,GAAI,IAAI,KAAO,IAAI,IAAI,OAAO,UAAW,KAAK;AACvD,4BAAY,KAAK,IAAI,OAAQ,YAAa,KAAK,IAAI,KAAO,EAAI,CAAC;cACnE;YACJ;AAGA,gBAAI,cAAc,IAAI,OAAO,EAAE;AAC/B,gBAAI,aAAa;AACb,qBAAO,YAAY,SAAS,GAAG;AAC3B,4BAAY,KAAK,WAAW;cAChC;YACJ;AAEA,mBAAO,YAAY,KAAK,EAAE;UAC9B,GAhCW,WAAA;;;;;;;;;;;;;;UA+CX,OAAO,gBAAAA,QAAA,SAAU,WAAW;AAExB,gBAAI,kBAAkB,UAAU;AAChC,gBAAI,MAAM,KAAK;AACf,gBAAI,aAAa,KAAK;AAEtB,gBAAI,CAAC,YAAY;AACT,2BAAa,KAAK,cAAc,CAAC;AACjC,uBAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACjC,2BAAW,IAAI,WAAW,CAAC,CAAC,IAAI;cACpC;YACR;AAGA,gBAAI,cAAc,IAAI,OAAO,EAAE;AAC/B,gBAAI,aAAa;AACb,kBAAI,eAAe,UAAU,QAAQ,WAAW;AAChD,kBAAI,iBAAiB,IAAI;AACrB,kCAAkB;cACtB;YACJ;AAGA,mBAAO,UAAU,WAAW,iBAAiB,UAAU;UAE3D,GAzBO,OAAA;UA2BP,MAAM;QACV;AAEA,iBAAS,UAAU,WAAW,iBAAiB,YAAY;AACzD,cAAI,QAAQ,CAAC;AACb,cAAI,SAAS;AACb,mBAAS,IAAI,GAAG,IAAI,iBAAiB,KAAK;AACtC,gBAAI,IAAI,GAAG;AACP,kBAAI,QAAQ,WAAW,UAAU,WAAW,IAAI,CAAC,CAAC,KAAO,IAAI,IAAK;AAClE,kBAAI,QAAQ,WAAW,UAAU,WAAW,CAAC,CAAC,MAAO,IAAK,IAAI,IAAK;AACnE,kBAAI,eAAe,QAAQ;AAC3B,oBAAM,WAAW,CAAC,KAAK,gBAAiB,KAAM,SAAS,IAAK;AAC5D;YACJ;UACJ;AACA,iBAAO,UAAU,OAAO,OAAO,MAAM;QACvC;AAbS;AAAA,QAAAA,QAAA,WAAA,WAAA;MAcb,GAAE;AAGF,aAAOiB,UAAS,IAAI;IAErB,CAAC;EAAA;AAAA,CAAA;ACvID,IAAA,wBAAA,WAAA;EAAA,6CAAA,SAAA,QAAA;AAAA,4CAAA;AAAA,uBAAA;AAAC,KAAC,SAAU,MAAM,SAAS;AAC1B,UAAI,OAAO,YAAY,UAAU;AAEhC,eAAO,UAAU,UAAU,QAAQ,aAAA,CAAiB;MACrD,WACS,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,eAAO,CAAC,QAAQ,GAAG,OAAO;MAC3B,OACK;AAEJ,gBAAQ,KAAK,QAAQ;MACtB;IACD,GAAE,SAAM,SAAUA,WAAU;AAE3B,OAAC,WAAY;AAET,YAAI,IAAIA;AACR,YAAI,QAAQ,EAAE;AACd,YAAI,YAAY,MAAM;AACtB,YAAI,QAAQ,EAAE;AAKd,YAAI,YAAY,MAAM,YAAY;;;;;;;;;;;;;;;;UAgB9B,WAAW,gBAAAjB,QAAA,SAAU,WAAW,SAAS;AACrC,gBAAI,YAAY,QAAW;AACvB,wBAAU;YACd;AAEA,gBAAI,QAAQ,UAAU;AACtB,gBAAI,WAAW,UAAU;AACzB,gBAAI,MAAM,UAAU,KAAK,YAAY,KAAK;AAG1C,sBAAU,MAAM;AAGhB,gBAAI,cAAc,CAAC;AACnB,qBAAS,IAAI,GAAG,IAAI,UAAU,KAAK,GAAG;AAClC,kBAAI,QAAS,MAAM,MAAM,CAAC,MAAa,KAAM,IAAI,IAAK,IAAY;AAClE,kBAAI,QAAS,MAAO,IAAI,MAAO,CAAC,MAAO,MAAO,IAAI,KAAK,IAAK,IAAM;AAClE,kBAAI,QAAS,MAAO,IAAI,MAAO,CAAC,MAAO,MAAO,IAAI,KAAK,IAAK,IAAM;AAElE,kBAAI,UAAW,SAAS,KAAO,SAAS,IAAK;AAE7C,uBAAS,IAAI,GAAI,IAAI,KAAO,IAAI,IAAI,OAAO,UAAW,KAAK;AACvD,4BAAY,KAAK,IAAI,OAAQ,YAAa,KAAK,IAAI,KAAO,EAAI,CAAC;cACnE;YACJ;AAGA,gBAAI,cAAc,IAAI,OAAO,EAAE;AAC/B,gBAAI,aAAa;AACb,qBAAO,YAAY,SAAS,GAAG;AAC3B,4BAAY,KAAK,WAAW;cAChC;YACJ;AAEA,mBAAO,YAAY,KAAK,EAAE;UAC9B,GAnCW,WAAA;;;;;;;;;;;;;;;;UAoDX,OAAO,gBAAAA,QAAA,SAAU,WAAW,SAAS;AACjC,gBAAI,YAAY,QAAW;AACvB,wBAAU;YACd;AAGA,gBAAI,kBAAkB,UAAU;AAChC,gBAAI,MAAM,UAAU,KAAK,YAAY,KAAK;AAC1C,gBAAI,aAAa,KAAK;AAEtB,gBAAI,CAAC,YAAY;AACb,2BAAa,KAAK,cAAc,CAAC;AACjC,uBAAS,IAAI,GAAG,IAAI,IAAI,QAAQ,KAAK;AACjC,2BAAW,IAAI,WAAW,CAAC,CAAC,IAAI;cACpC;YACJ;AAGA,gBAAI,cAAc,IAAI,OAAO,EAAE;AAC/B,gBAAI,aAAa;AACb,kBAAI,eAAe,UAAU,QAAQ,WAAW;AAChD,kBAAI,iBAAiB,IAAI;AACrB,kCAAkB;cACtB;YACJ;AAGA,mBAAO,UAAU,WAAW,iBAAiB,UAAU;UAE3D,GA7BO,OAAA;UA+BP,MAAM;UACN,WAAW;QACf;AAEA,iBAAS,UAAU,WAAW,iBAAiB,YAAY;AACvD,cAAI,QAAQ,CAAC;AACb,cAAI,SAAS;AACb,mBAAS,IAAI,GAAG,IAAI,iBAAiB,KAAK;AACtC,gBAAI,IAAI,GAAG;AACP,kBAAI,QAAQ,WAAW,UAAU,WAAW,IAAI,CAAC,CAAC,KAAO,IAAI,IAAK;AAClE,kBAAI,QAAQ,WAAW,UAAU,WAAW,CAAC,CAAC,MAAO,IAAK,IAAI,IAAK;AACnE,kBAAI,eAAe,QAAQ;AAC3B,oBAAM,WAAW,CAAC,KAAK,gBAAiB,KAAM,SAAS,IAAK;AAC5D;YACJ;UACJ;AACA,iBAAO,UAAU,OAAO,OAAO,MAAM;QACzC;AAbS;AAAA,QAAAA,QAAA,WAAA,WAAA;MAcb,GAAE;AAGF,aAAOiB,UAAS,IAAI;IAErB,CAAC;EAAA;AAAA,CAAA;ACnJD,IAAA,cAAA,WAAA;EAAA,mCAAA,SAAA,QAAA;AAAA,4CAAA;AAAA,uBAAA;AAAC,KAAC,SAAU,MAAM,SAAS;AAC1B,UAAI,OAAO,YAAY,UAAU;AAEhC,eAAO,UAAU,UAAU,QAAQ,aAAA,CAAiB;MACrD,WACS,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,eAAO,CAAC,QAAQ,GAAG,OAAO;MAC3B,OACK;AAEJ,gBAAQ,KAAK,QAAQ;MACtB;IACD,GAAE,SAAM,SAAUA,WAAU;AAE3B,OAAC,SAAUC,OAAM;AAEb,YAAI,IAAID;AACR,YAAI,QAAQ,EAAE;AACd,YAAI,YAAY,MAAM;AACtB,YAAI,SAAS,MAAM;AACnB,YAAI,SAAS,EAAE;AAGf,YAAI,IAAI,CAAC;AAGT,SAAC,WAAY;AACT,mBAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AACzB,cAAE,CAAC,IAAKC,MAAK,IAAIA,MAAK,IAAI,IAAI,CAAC,CAAC,IAAI,aAAe;UACvD;QACJ,GAAE;AAKF,YAAI,MAAM,OAAO,MAAM,OAAO,OAAO;UACjC,UAAU,gBAAAlB,QAAA,WAAY;AAClB,iBAAK,QAAQ,IAAI,UAAU,KAAK;cAC5B;cAAY;cACZ;cAAY;YAChB,CAAC;UACL,GALU,UAAA;UAOV,iBAAiB,gBAAAA,QAAA,SAAU,GAAG,QAAQ;AAElC,qBAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AAEzB,kBAAI,WAAW,SAAS;AACxB,kBAAI,aAAa,EAAE,QAAQ;AAE3B,gBAAE,QAAQ,KACH,cAAc,IAAO,eAAe,MAAO,YAC3C,cAAc,KAAO,eAAe,KAAO;YAEtD;AAGA,gBAAI,IAAI,KAAK,MAAM;AAEnB,gBAAI,aAAc,EAAE,SAAS,CAAC;AAC9B,gBAAI,aAAc,EAAE,SAAS,CAAC;AAC9B,gBAAI,aAAc,EAAE,SAAS,CAAC;AAC9B,gBAAI,aAAc,EAAE,SAAS,CAAC;AAC9B,gBAAI,aAAc,EAAE,SAAS,CAAC;AAC9B,gBAAI,aAAc,EAAE,SAAS,CAAC;AAC9B,gBAAI,aAAc,EAAE,SAAS,CAAC;AAC9B,gBAAI,aAAc,EAAE,SAAS,CAAC;AAC9B,gBAAI,aAAc,EAAE,SAAS,CAAC;AAC9B,gBAAI,aAAc,EAAE,SAAS,CAAC;AAC9B,gBAAI,cAAc,EAAE,SAAS,EAAE;AAC/B,gBAAI,cAAc,EAAE,SAAS,EAAE;AAC/B,gBAAI,cAAc,EAAE,SAAS,EAAE;AAC/B,gBAAI,cAAc,EAAE,SAAS,EAAE;AAC/B,gBAAI,cAAc,EAAE,SAAS,EAAE;AAC/B,gBAAI,cAAc,EAAE,SAAS,EAAE;AAG/B,gBAAI,IAAI,EAAE,CAAC;AACX,gBAAI,IAAI,EAAE,CAAC;AACX,gBAAI,IAAI,EAAE,CAAC;AACX,gBAAI,IAAI,EAAE,CAAC;AAGX,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,GAAI,EAAE,CAAC,CAAC;AACxC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,CAAC,CAAC;AACxC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,CAAC,CAAC;AACxC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,CAAC,CAAC;AACxC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,GAAI,EAAE,CAAC,CAAC;AACxC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,CAAC,CAAC;AACxC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,CAAC,CAAC;AACxC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,CAAC,CAAC;AACxC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,GAAI,EAAE,CAAC,CAAC;AACxC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,CAAC,CAAC;AACxC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,IAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,IAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,GAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,IAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,IAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,IAAI,EAAE,EAAE,CAAC;AAEzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,GAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,GAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,IAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,GAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,GAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,IAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,GAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,GAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,GAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,GAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,IAAI,EAAE,EAAE,CAAC;AAEzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,GAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,IAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,IAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,GAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,IAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,GAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,GAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,IAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,IAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,EAAE,CAAC;AAEzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,GAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,IAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,GAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,IAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,GAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,IAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,IAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,GAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,IAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,EAAE,CAAC;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,EAAE,CAAC;AAGzC,cAAE,CAAC,IAAK,EAAE,CAAC,IAAI,IAAK;AACpB,cAAE,CAAC,IAAK,EAAE,CAAC,IAAI,IAAK;AACpB,cAAE,CAAC,IAAK,EAAE,CAAC,IAAI,IAAK;AACpB,cAAE,CAAC,IAAK,EAAE,CAAC,IAAI,IAAK;UACxB,GAjHiB,iBAAA;UAmHjB,aAAa,gBAAAA,QAAA,WAAY;AAErB,gBAAI,OAAO,KAAK;AAChB,gBAAI,YAAY,KAAK;AAErB,gBAAI,aAAa,KAAK,cAAc;AACpC,gBAAI,YAAY,KAAK,WAAW;AAGhC,sBAAU,cAAc,CAAC,KAAK,OAAS,KAAK,YAAY;AAExD,gBAAI,cAAckB,MAAK,MAAM,aAAa,UAAW;AACrD,gBAAI,cAAc;AAClB,uBAAa,YAAY,OAAQ,KAAM,KAAK,EAAE,KACvC,eAAe,IAAO,gBAAgB,MAAO,YAC7C,eAAe,KAAO,gBAAgB,KAAO;AAEpD,uBAAa,YAAY,OAAQ,KAAM,KAAK,EAAE,KACvC,eAAe,IAAO,gBAAgB,MAAO,YAC7C,eAAe,KAAO,gBAAgB,KAAO;AAGpD,iBAAK,YAAY,UAAU,SAAS,KAAK;AAGzC,iBAAK,SAAS;AAGd,gBAAI,OAAO,KAAK;AAChB,gBAAI,IAAI,KAAK;AAGb,qBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAExB,kBAAI,MAAM,EAAE,CAAC;AAEb,gBAAE,CAAC,KAAO,OAAO,IAAO,QAAQ,MAAO,YAC7B,OAAO,KAAO,QAAQ,KAAO;YAC3C;AAGA,mBAAO;UACX,GA1Ca,aAAA;UA4Cb,OAAO,gBAAAlB,QAAA,WAAY;AACf,gBAAI,QAAQ,OAAO,MAAM,KAAK,IAAI;AAClC,kBAAM,QAAQ,KAAK,MAAM,MAAM;AAE/B,mBAAO;UACX,GALO,OAAA;QAMX,CAAC;AAED,iBAAS,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;AAC7B,cAAI,IAAI,KAAM,IAAI,IAAM,CAAC,IAAI,KAAM,IAAI;AACvC,kBAAS,KAAK,IAAM,MAAO,KAAK,KAAO;QAC3C;AAHS;AAAA,QAAAA,QAAA,IAAA,IAAA;AAKT,iBAAS,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;AAC7B,cAAI,IAAI,KAAM,IAAI,IAAM,IAAI,CAAC,KAAM,IAAI;AACvC,kBAAS,KAAK,IAAM,MAAO,KAAK,KAAO;QAC3C;AAHS;AAAA,QAAAA,QAAA,IAAA,IAAA;AAKT,iBAAS,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;AAC7B,cAAI,IAAI,KAAK,IAAI,IAAI,KAAK,IAAI;AAC9B,kBAAS,KAAK,IAAM,MAAO,KAAK,KAAO;QAC3C;AAHS;AAAA,QAAAA,QAAA,IAAA,IAAA;AAKT,iBAAS,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG;AAC7B,cAAI,IAAI,KAAK,KAAK,IAAI,CAAC,MAAM,IAAI;AACjC,kBAAS,KAAK,IAAM,MAAO,KAAK,KAAO;QAC3C;AAHS;AAAA,QAAAA,QAAA,IAAA,IAAA;AAmBT,UAAE,MAAM,OAAO,cAAc,GAAG;AAgBhC,UAAE,UAAU,OAAO,kBAAkB,GAAG;MAC5C,GAAE,IAAI;AAGN,aAAOiB,UAAS;IAEjB,CAAC;EAAA;AAAA,CAAA;AC3QD,IAAA,eAAA,WAAA;EAAA,oCAAA,SAAA,QAAA;AAAA,4CAAA;AAAA,uBAAA;AAAC,KAAC,SAAU,MAAM,SAAS;AAC1B,UAAI,OAAO,YAAY,UAAU;AAEhC,eAAO,UAAU,UAAU,QAAQ,aAAA,CAAiB;MACrD,WACS,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,eAAO,CAAC,QAAQ,GAAG,OAAO;MAC3B,OACK;AAEJ,gBAAQ,KAAK,QAAQ;MACtB;IACD,GAAE,SAAM,SAAUA,WAAU;AAE3B,OAAC,WAAY;AAET,YAAI,IAAIA;AACR,YAAI,QAAQ,EAAE;AACd,YAAI,YAAY,MAAM;AACtB,YAAI,SAAS,MAAM;AACnB,YAAI,SAAS,EAAE;AAGf,YAAI,IAAI,CAAC;AAKT,YAAI,OAAO,OAAO,OAAO,OAAO,OAAO;UACnC,UAAU,gBAAAjB,QAAA,WAAY;AAClB,iBAAK,QAAQ,IAAI,UAAU,KAAK;cAC5B;cAAY;cACZ;cAAY;cACZ;YACJ,CAAC;UACL,GANU,UAAA;UAQV,iBAAiB,gBAAAA,QAAA,SAAU,GAAG,QAAQ;AAElC,gBAAI,IAAI,KAAK,MAAM;AAGnB,gBAAI,IAAI,EAAE,CAAC;AACX,gBAAI,IAAI,EAAE,CAAC;AACX,gBAAI,IAAI,EAAE,CAAC;AACX,gBAAI,IAAI,EAAE,CAAC;AACX,gBAAI,IAAI,EAAE,CAAC;AAGX,qBAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AACzB,kBAAI,IAAI,IAAI;AACR,kBAAE,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI;cAC3B,OAAO;AACH,oBAAI,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;AAClD,kBAAE,CAAC,IAAK,KAAK,IAAM,MAAM;cAC7B;AAEA,kBAAI,KAAM,KAAK,IAAM,MAAM,MAAO,IAAI,EAAE,CAAC;AACzC,kBAAI,IAAI,IAAI;AACR,sBAAO,IAAI,IAAM,CAAC,IAAI,KAAM;cAChC,WAAW,IAAI,IAAI;AACf,sBAAM,IAAI,IAAI,KAAK;cACvB,WAAW,IAAI,IAAI;AACf,sBAAO,IAAI,IAAM,IAAI,IAAM,IAAI,KAAM;cACzC,OAAyB;AACrB,sBAAM,IAAI,IAAI,KAAK;cACvB;AAEA,kBAAI;AACJ,kBAAI;AACJ,kBAAK,KAAK,KAAO,MAAM;AACvB,kBAAI;AACJ,kBAAI;YACR;AAGA,cAAE,CAAC,IAAK,EAAE,CAAC,IAAI,IAAK;AACpB,cAAE,CAAC,IAAK,EAAE,CAAC,IAAI,IAAK;AACpB,cAAE,CAAC,IAAK,EAAE,CAAC,IAAI,IAAK;AACpB,cAAE,CAAC,IAAK,EAAE,CAAC,IAAI,IAAK;AACpB,cAAE,CAAC,IAAK,EAAE,CAAC,IAAI,IAAK;UACxB,GA5CiB,iBAAA;UA8CjB,aAAa,gBAAAA,QAAA,WAAY;AAErB,gBAAI,OAAO,KAAK;AAChB,gBAAI,YAAY,KAAK;AAErB,gBAAI,aAAa,KAAK,cAAc;AACpC,gBAAI,YAAY,KAAK,WAAW;AAGhC,sBAAU,cAAc,CAAC,KAAK,OAAS,KAAK,YAAY;AACxD,uBAAa,YAAY,OAAQ,KAAM,KAAK,EAAE,IAAI,KAAK,MAAM,aAAa,UAAW;AACrF,uBAAa,YAAY,OAAQ,KAAM,KAAK,EAAE,IAAI;AAClD,iBAAK,WAAW,UAAU,SAAS;AAGnC,iBAAK,SAAS;AAGd,mBAAO,KAAK;UAChB,GAnBa,aAAA;UAqBb,OAAO,gBAAAA,QAAA,WAAY;AACf,gBAAI,QAAQ,OAAO,MAAM,KAAK,IAAI;AAClC,kBAAM,QAAQ,KAAK,MAAM,MAAM;AAE/B,mBAAO;UACX,GALO,OAAA;QAMX,CAAC;AAgBD,UAAE,OAAO,OAAO,cAAc,IAAI;AAgBlC,UAAE,WAAW,OAAO,kBAAkB,IAAI;MAC9C,GAAE;AAGF,aAAOiB,UAAS;IAEjB,CAAC;EAAA;AAAA,CAAA;ACrJD,IAAA,iBAAA,WAAA;EAAA,sCAAA,SAAA,QAAA;AAAA,4CAAA;AAAA,uBAAA;AAAC,KAAC,SAAU,MAAM,SAAS;AAC1B,UAAI,OAAO,YAAY,UAAU;AAEhC,eAAO,UAAU,UAAU,QAAQ,aAAA,CAAiB;MACrD,WACS,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,eAAO,CAAC,QAAQ,GAAG,OAAO;MAC3B,OACK;AAEJ,gBAAQ,KAAK,QAAQ;MACtB;IACD,GAAE,SAAM,SAAUA,WAAU;AAE3B,OAAC,SAAUC,OAAM;AAEb,YAAI,IAAID;AACR,YAAI,QAAQ,EAAE;AACd,YAAI,YAAY,MAAM;AACtB,YAAI,SAAS,MAAM;AACnB,YAAI,SAAS,EAAE;AAGf,YAAI,IAAI,CAAC;AACT,YAAI,IAAI,CAAC;AAGT,SAAC,WAAY;AACT,mBAAS,QAAQK,IAAG;AAChB,gBAAI,QAAQJ,MAAK,KAAKI,EAAC;AACvB,qBAAS,SAAS,GAAG,UAAU,OAAO,UAAU;AAC5C,kBAAI,EAAEA,KAAI,SAAS;AACf,uBAAO;cACX;YACJ;AAEA,mBAAO;UACX;AATS;AAAA,UAAAtB,QAAA,SAAA,SAAA;AAWT,mBAAS,kBAAkBsB,IAAG;AAC1B,oBAASA,MAAKA,KAAI,MAAM,aAAe;UAC3C;AAFS;AAAA,UAAAtB,QAAA,mBAAA,mBAAA;AAIT,cAAI,IAAI;AACR,cAAI,SAAS;AACb,iBAAO,SAAS,IAAI;AAChB,gBAAI,QAAQ,CAAC,GAAG;AACZ,kBAAI,SAAS,GAAG;AACZ,kBAAE,MAAM,IAAI,kBAAkBkB,MAAK,IAAI,GAAG,IAAI,CAAC,CAAC;cACpD;AACA,gBAAE,MAAM,IAAI,kBAAkBA,MAAK,IAAI,GAAG,IAAI,CAAC,CAAC;AAEhD;YACJ;AAEA;UACJ;QACJ,GAAE;AAGF,YAAI,IAAI,CAAC;AAKT,YAAI,SAAS,OAAO,SAAS,OAAO,OAAO;UACvC,UAAU,gBAAAlB,QAAA,WAAY;AAClB,iBAAK,QAAQ,IAAI,UAAU,KAAK,EAAE,MAAM,CAAC,CAAC;UAC9C,GAFU,UAAA;UAIV,iBAAiB,gBAAAA,QAAA,SAAU,GAAG,QAAQ;AAElC,gBAAIuB,KAAI,KAAK,MAAM;AAGnB,gBAAI,IAAIA,GAAE,CAAC;AACX,gBAAI,IAAIA,GAAE,CAAC;AACX,gBAAI,IAAIA,GAAE,CAAC;AACX,gBAAI,IAAIA,GAAE,CAAC;AACX,gBAAI,IAAIA,GAAE,CAAC;AACX,gBAAI,IAAIA,GAAE,CAAC;AACX,gBAAI,IAAIA,GAAE,CAAC;AACX,gBAAI,IAAIA,GAAE,CAAC;AAGX,qBAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AACzB,kBAAI,IAAI,IAAI;AACR,kBAAE,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI;cAC3B,OAAO;AACH,oBAAI,UAAU,EAAE,IAAI,EAAE;AACtB,oBAAI,UAAY,WAAW,KAAO,YAAY,MAC9B,WAAW,KAAO,YAAY,MAC9B,YAAY;AAE5B,oBAAI,UAAU,EAAE,IAAI,CAAC;AACrB,oBAAI,UAAY,WAAW,KAAO,YAAY,OAC9B,WAAW,KAAO,YAAY,MAC9B,YAAY;AAE5B,kBAAE,CAAC,IAAI,SAAS,EAAE,IAAI,CAAC,IAAI,SAAS,EAAE,IAAI,EAAE;cAChD;AAEA,kBAAI,KAAO,IAAI,IAAM,CAAC,IAAI;AAC1B,kBAAI,MAAO,IAAI,IAAM,IAAI,IAAM,IAAI;AAEnC,kBAAI,UAAW,KAAK,KAAO,MAAM,MAAQ,KAAK,KAAO,MAAM,OAAS,KAAK,KAAO,MAAM;AACtF,kBAAI,UAAW,KAAK,KAAO,MAAM,MAAQ,KAAK,KAAO,MAAM,OAAS,KAAK,IAAO,MAAM;AAEtF,kBAAI,KAAK,IAAI,SAAS,KAAK,EAAE,CAAC,IAAI,EAAE,CAAC;AACrC,kBAAI,KAAK,SAAS;AAElB,kBAAI;AACJ,kBAAI;AACJ,kBAAI;AACJ,kBAAK,IAAI,KAAM;AACf,kBAAI;AACJ,kBAAI;AACJ,kBAAI;AACJ,kBAAK,KAAK,KAAM;YACpB;AAGAA,eAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,IAAK;AACpBA,eAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,IAAK;AACpBA,eAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,IAAK;AACpBA,eAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,IAAK;AACpBA,eAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,IAAK;AACpBA,eAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,IAAK;AACpBA,eAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,IAAK;AACpBA,eAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,IAAK;UACxB,GA5DiB,iBAAA;UA8DjB,aAAa,gBAAAvB,QAAA,WAAY;AAErB,gBAAI,OAAO,KAAK;AAChB,gBAAI,YAAY,KAAK;AAErB,gBAAI,aAAa,KAAK,cAAc;AACpC,gBAAI,YAAY,KAAK,WAAW;AAGhC,sBAAU,cAAc,CAAC,KAAK,OAAS,KAAK,YAAY;AACxD,uBAAa,YAAY,OAAQ,KAAM,KAAK,EAAE,IAAIkB,MAAK,MAAM,aAAa,UAAW;AACrF,uBAAa,YAAY,OAAQ,KAAM,KAAK,EAAE,IAAI;AAClD,iBAAK,WAAW,UAAU,SAAS;AAGnC,iBAAK,SAAS;AAGd,mBAAO,KAAK;UAChB,GAnBa,aAAA;UAqBb,OAAO,gBAAAlB,QAAA,WAAY;AACf,gBAAI,QAAQ,OAAO,MAAM,KAAK,IAAI;AAClC,kBAAM,QAAQ,KAAK,MAAM,MAAM;AAE/B,mBAAO;UACX,GALO,OAAA;QAMX,CAAC;AAgBD,UAAE,SAAS,OAAO,cAAc,MAAM;AAgBtC,UAAE,aAAa,OAAO,kBAAkB,MAAM;MAClD,GAAE,IAAI;AAGN,aAAOiB,UAAS;IAEjB,CAAC;EAAA;AAAA,CAAA;ACtMD,IAAA,iBAAA,WAAA;EAAA,sCAAA,SAAA,QAAA;AAAA,4CAAA;AAAA,uBAAA;AAAC,KAAC,SAAU,MAAM,SAAS,OAAO;AACjC,UAAI,OAAO,YAAY,UAAU;AAEhC,eAAO,UAAU,UAAU,QAAQ,aAAA,GAAmB,eAAA,CAAmB;MAC1E,WACS,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,eAAO,CAAC,UAAU,UAAU,GAAG,OAAO;MACvC,OACK;AAEJ,gBAAQ,KAAK,QAAQ;MACtB;IACD,GAAE,SAAM,SAAUA,WAAU;AAE3B,OAAC,WAAY;AAET,YAAI,IAAIA;AACR,YAAI,QAAQ,EAAE;AACd,YAAI,YAAY,MAAM;AACtB,YAAI,SAAS,EAAE;AACf,YAAI,SAAS,OAAO;AAKpB,YAAI,SAAS,OAAO,SAAS,OAAO,OAAO;UACvC,UAAU,gBAAAjB,QAAA,WAAY;AAClB,iBAAK,QAAQ,IAAI,UAAU,KAAK;cAC5B;cAAY;cAAY;cAAY;cACpC;cAAY;cAAY;cAAY;YACxC,CAAC;UACL,GALU,UAAA;UAOV,aAAa,gBAAAA,QAAA,WAAY;AACrB,gBAAI,OAAO,OAAO,YAAY,KAAK,IAAI;AAEvC,iBAAK,YAAY;AAEjB,mBAAO;UACX,GANa,aAAA;QAOjB,CAAC;AAgBD,UAAE,SAAS,OAAO,cAAc,MAAM;AAgBtC,UAAE,aAAa,OAAO,kBAAkB,MAAM;MAClD,GAAE;AAGF,aAAOiB,UAAS;IAEjB,CAAC;EAAA;AAAA,CAAA;AC/ED,IAAA,iBAAA,WAAA;EAAA,sCAAA,SAAA,QAAA;AAAA,4CAAA;AAAA,uBAAA;AAAC,KAAC,SAAU,MAAM,SAAS,OAAO;AACjC,UAAI,OAAO,YAAY,UAAU;AAEhC,eAAO,UAAU,UAAU,QAAQ,aAAA,GAAmB,iBAAA,CAAqB;MAC5E,WACS,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,eAAO,CAAC,UAAU,YAAY,GAAG,OAAO;MACzC,OACK;AAEJ,gBAAQ,KAAK,QAAQ;MACtB;IACD,GAAE,SAAM,SAAUA,WAAU;AAE3B,OAAC,WAAY;AAET,YAAI,IAAIA;AACR,YAAI,QAAQ,EAAE;AACd,YAAI,SAAS,MAAM;AACnB,YAAI,QAAQ,EAAE;AACd,YAAI,UAAU,MAAM;AACpB,YAAI,eAAe,MAAM;AACzB,YAAI,SAAS,EAAE;AAEf,iBAAS,iBAAiB;AACtB,iBAAO,QAAQ,OAAO,MAAM,SAAS,SAAS;QAClD;AAFS;AAAA,QAAAjB,QAAA,gBAAA,gBAAA;AAKT,YAAI,IAAI;UACJ,eAAe,YAAY,UAAU;UAAG,eAAe,YAAY,SAAU;UAC7E,eAAe,YAAY,UAAU;UAAG,eAAe,YAAY,UAAU;UAC7E,eAAe,WAAY,UAAU;UAAG,eAAe,YAAY,UAAU;UAC7E,eAAe,YAAY,UAAU;UAAG,eAAe,YAAY,UAAU;UAC7E,eAAe,YAAY,UAAU;UAAG,eAAe,WAAY,UAAU;UAC7E,eAAe,WAAY,UAAU;UAAG,eAAe,YAAY,UAAU;UAC7E,eAAe,YAAY,UAAU;UAAG,eAAe,YAAY,SAAU;UAC7E,eAAe,YAAY,SAAU;UAAG,eAAe,YAAY,UAAU;UAC7E,eAAe,YAAY,UAAU;UAAG,eAAe,YAAY,SAAU;UAC7E,eAAe,WAAY,UAAU;UAAG,eAAe,WAAY,UAAU;UAC7E,eAAe,WAAY,UAAU;UAAG,eAAe,YAAY,UAAU;UAC7E,eAAe,YAAY,UAAU;UAAG,eAAe,YAAY,UAAU;UAC7E,eAAe,YAAY,UAAU;UAAG,eAAe,YAAY,SAAU;UAC7E,eAAe,YAAY,UAAU;UAAG,eAAe,YAAY,UAAU;UAC7E,eAAe,YAAY,UAAU;UAAG,eAAe,YAAY,UAAU;UAC7E,eAAe,WAAY,UAAU;UAAG,eAAe,WAAY,SAAU;UAC7E,eAAe,WAAY,UAAU;UAAG,eAAe,WAAY,UAAU;UAC7E,eAAe,YAAY,UAAU;UAAG,eAAe,YAAY,UAAU;UAC7E,eAAe,YAAY,UAAU;UAAG,eAAe,YAAY,UAAU;UAC7E,eAAe,YAAY,UAAU;UAAG,eAAe,YAAY,SAAU;UAC7E,eAAe,YAAY,UAAU;UAAG,eAAe,YAAY,UAAU;UAC7E,eAAe,YAAY,UAAU;UAAG,eAAe,YAAY,SAAU;UAC7E,eAAe,YAAY,UAAU;UAAG,eAAe,YAAY,UAAU;UAC7E,eAAe,YAAY,UAAU;UAAG,eAAe,WAAY,SAAU;UAC7E,eAAe,WAAY,UAAU;UAAG,eAAe,WAAY,UAAU;UAC7E,eAAe,WAAY,UAAU;UAAG,eAAe,WAAY,UAAU;UAC7E,eAAe,WAAY,UAAU;UAAG,eAAe,YAAY,UAAU;UAC7E,eAAe,YAAY,UAAU;UAAG,eAAe,YAAY,UAAU;UAC7E,eAAe,YAAY,UAAU;UAAG,eAAe,YAAY,UAAU;UAC7E,eAAe,YAAY,UAAU;UAAG,eAAe,YAAY,SAAU;UAC7E,eAAe,YAAY,SAAU;UAAG,eAAe,YAAY,UAAU;UAC7E,eAAe,YAAY,UAAU;UAAG,eAAe,YAAY,UAAU;UAC7E,eAAe,YAAY,UAAU;UAAG,eAAe,YAAY,SAAU;UAC7E,eAAe,YAAY,UAAU;UAAG,eAAe,YAAY,UAAU;UAC7E,eAAe,WAAY,UAAU;UAAG,eAAe,WAAY,UAAU;UAC7E,eAAe,WAAY,UAAU;UAAG,eAAe,WAAY,SAAU;UAC7E,eAAe,WAAY,SAAU;UAAG,eAAe,WAAY,UAAU;UAC7E,eAAe,YAAY,SAAU;UAAG,eAAe,YAAY,UAAU;UAC7E,eAAe,YAAY,UAAU;UAAG,eAAe,YAAY,UAAU;UAC7E,eAAe,YAAY,SAAU;UAAG,eAAe,YAAY,UAAU;QACjF;AAGA,YAAI,IAAI,CAAC;AACT,SAAC,WAAY;AACT,mBAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AACzB,cAAE,CAAC,IAAI,eAAe;UAC1B;QACJ,GAAE;AAKF,YAAI,SAAS,OAAO,SAAS,OAAO,OAAO;UACvC,UAAU,gBAAAA,QAAA,WAAY;AAClB,iBAAK,QAAQ,IAAI,aAAa,KAAK;cAC/B,IAAI,QAAQ,KAAK,YAAY,UAAU;cAAG,IAAI,QAAQ,KAAK,YAAY,UAAU;cACjF,IAAI,QAAQ,KAAK,YAAY,UAAU;cAAG,IAAI,QAAQ,KAAK,YAAY,UAAU;cACjF,IAAI,QAAQ,KAAK,YAAY,UAAU;cAAG,IAAI,QAAQ,KAAK,YAAY,SAAU;cACjF,IAAI,QAAQ,KAAK,WAAY,UAAU;cAAG,IAAI,QAAQ,KAAK,YAAY,SAAU;YACrF,CAAC;UACL,GAPU,UAAA;UASV,iBAAiB,gBAAAA,QAAA,SAAU,GAAG,QAAQ;AAElC,gBAAI,IAAI,KAAK,MAAM;AAEnB,gBAAI,KAAK,EAAE,CAAC;AACZ,gBAAI,KAAK,EAAE,CAAC;AACZ,gBAAI,KAAK,EAAE,CAAC;AACZ,gBAAI,KAAK,EAAE,CAAC;AACZ,gBAAI,KAAK,EAAE,CAAC;AACZ,gBAAI,KAAK,EAAE,CAAC;AACZ,gBAAI,KAAK,EAAE,CAAC;AACZ,gBAAI,KAAK,EAAE,CAAC;AAEZ,gBAAI,MAAM,GAAG;AACb,gBAAI,MAAM,GAAG;AACb,gBAAI,MAAM,GAAG;AACb,gBAAI,MAAM,GAAG;AACb,gBAAI,MAAM,GAAG;AACb,gBAAI,MAAM,GAAG;AACb,gBAAI,MAAM,GAAG;AACb,gBAAI,MAAM,GAAG;AACb,gBAAI,MAAM,GAAG;AACb,gBAAI,MAAM,GAAG;AACb,gBAAI,MAAM,GAAG;AACb,gBAAI,MAAM,GAAG;AACb,gBAAI,MAAM,GAAG;AACb,gBAAI,MAAM,GAAG;AACb,gBAAI,MAAM,GAAG;AACb,gBAAI,MAAM,GAAG;AAGb,gBAAI,KAAK;AACT,gBAAI,KAAK;AACT,gBAAI,KAAK;AACT,gBAAI,KAAK;AACT,gBAAI,KAAK;AACT,gBAAI,KAAK;AACT,gBAAI,KAAK;AACT,gBAAI,KAAK;AACT,gBAAI,KAAK;AACT,gBAAI,KAAK;AACT,gBAAI,KAAK;AACT,gBAAI,KAAK;AACT,gBAAI,KAAK;AACT,gBAAI,KAAK;AACT,gBAAI,KAAK;AACT,gBAAI,KAAK;AAGT,qBAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AACzB,kBAAI;AACJ,kBAAI;AAGJ,kBAAI,KAAK,EAAE,CAAC;AAGZ,kBAAI,IAAI,IAAI;AACR,sBAAM,GAAG,OAAO,EAAE,SAAS,IAAI,CAAC,IAAQ;AACxC,sBAAM,GAAG,MAAO,EAAE,SAAS,IAAI,IAAI,CAAC,IAAI;cAC5C,OAAO;AAEH,oBAAI,UAAW,EAAE,IAAI,EAAE;AACvB,oBAAI,WAAW,QAAQ;AACvB,oBAAI,WAAW,QAAQ;AACvB,oBAAI,WAAa,aAAa,IAAM,YAAY,OAAS,aAAa,IAAM,YAAY,MAAQ,aAAa;AAC7G,oBAAI,WAAa,aAAa,IAAM,YAAY,OAAS,aAAa,IAAM,YAAY,OAAS,aAAa,IAAM,YAAY;AAGhI,oBAAI,UAAW,EAAE,IAAI,CAAC;AACtB,oBAAI,WAAW,QAAQ;AACvB,oBAAI,WAAW,QAAQ;AACvB,oBAAI,WAAa,aAAa,KAAO,YAAY,OAAS,YAAY,IAAM,aAAa,MAAQ,aAAa;AAC9G,oBAAI,WAAa,aAAa,KAAO,YAAY,OAAS,YAAY,IAAM,aAAa,OAAS,aAAa,IAAM,YAAY;AAGjI,oBAAI,MAAO,EAAE,IAAI,CAAC;AAClB,oBAAI,OAAO,IAAI;AACf,oBAAI,OAAO,IAAI;AAEf,oBAAI,OAAQ,EAAE,IAAI,EAAE;AACpB,oBAAI,QAAQ,KAAK;AACjB,oBAAI,QAAQ,KAAK;AAEjB,sBAAM,UAAU;AAChB,sBAAM,UAAU,QAAS,QAAQ,IAAM,YAAY,IAAK,IAAI;AAC5D,sBAAM,MAAM;AACZ,sBAAM,MAAM,WAAY,QAAQ,IAAM,YAAY,IAAK,IAAI;AAC3D,sBAAM,MAAM;AACZ,sBAAM,MAAM,SAAU,QAAQ,IAAM,UAAU,IAAK,IAAI;AAEvD,mBAAG,OAAO;AACV,mBAAG,MAAO;cACd;AAEA,kBAAI,MAAQ,KAAK,KAAO,CAAC,KAAK;AAC9B,kBAAI,MAAQ,KAAK,KAAO,CAAC,KAAK;AAC9B,kBAAI,OAAQ,KAAK,KAAO,KAAK,KAAO,KAAK;AACzC,kBAAI,OAAQ,KAAK,KAAO,KAAK,KAAO,KAAK;AAEzC,kBAAI,WAAY,OAAO,KAAO,MAAM,MAAS,MAAM,KAAQ,OAAO,MAAQ,MAAM,KAAO,OAAO;AAC9F,kBAAI,WAAY,OAAO,KAAO,MAAM,MAAS,MAAM,KAAQ,OAAO,MAAQ,MAAM,KAAO,OAAO;AAC9F,kBAAI,WAAY,OAAO,KAAO,MAAM,OAAS,OAAO,KAAO,MAAM,OAAS,MAAM,KAAO,OAAO;AAC9F,kBAAI,WAAY,OAAO,KAAO,MAAM,OAAS,OAAO,KAAO,MAAM,OAAS,MAAM,KAAO,OAAO;AAG9F,kBAAI,KAAM,EAAE,CAAC;AACb,kBAAI,MAAM,GAAG;AACb,kBAAI,MAAM,GAAG;AAEb,kBAAI,MAAM,KAAK;AACf,kBAAI,MAAM,KAAK,WAAY,QAAQ,IAAM,OAAO,IAAK,IAAI;AACzD,kBAAI,MAAM,MAAM;AAChB,kBAAI,MAAM,MAAM,OAAQ,QAAQ,IAAM,QAAQ,IAAK,IAAI;AACvD,kBAAI,MAAM,MAAM;AAChB,kBAAI,MAAM,MAAM,OAAQ,QAAQ,IAAM,QAAQ,IAAK,IAAI;AACvD,kBAAI,MAAM,MAAM;AAChB,kBAAI,MAAM,MAAM,OAAQ,QAAQ,IAAM,QAAQ,IAAK,IAAI;AAGvD,kBAAI,MAAM,UAAU;AACpB,kBAAI,MAAM,UAAU,QAAS,QAAQ,IAAM,YAAY,IAAK,IAAI;AAGhE,mBAAK;AACL,mBAAK;AACL,mBAAK;AACL,mBAAK;AACL,mBAAK;AACL,mBAAK;AACL,mBAAM,KAAK,MAAO;AAClB,mBAAM,KAAK,OAAQ,OAAO,IAAM,OAAO,IAAK,IAAI,KAAM;AACtD,mBAAK;AACL,mBAAK;AACL,mBAAK;AACL,mBAAK;AACL,mBAAK;AACL,mBAAK;AACL,mBAAM,MAAM,MAAO;AACnB,mBAAM,MAAM,OAAQ,OAAO,IAAM,QAAQ,IAAK,IAAI,KAAM;YAC5D;AAGA,kBAAM,GAAG,MAAQ,MAAM;AACvB,eAAG,OAAQ,MAAM,MAAO,QAAQ,IAAM,OAAO,IAAK,IAAI;AACtD,kBAAM,GAAG,MAAQ,MAAM;AACvB,eAAG,OAAQ,MAAM,MAAO,QAAQ,IAAM,OAAO,IAAK,IAAI;AACtD,kBAAM,GAAG,MAAQ,MAAM;AACvB,eAAG,OAAQ,MAAM,MAAO,QAAQ,IAAM,OAAO,IAAK,IAAI;AACtD,kBAAM,GAAG,MAAQ,MAAM;AACvB,eAAG,OAAQ,MAAM,MAAO,QAAQ,IAAM,OAAO,IAAK,IAAI;AACtD,kBAAM,GAAG,MAAQ,MAAM;AACvB,eAAG,OAAQ,MAAM,MAAO,QAAQ,IAAM,OAAO,IAAK,IAAI;AACtD,kBAAM,GAAG,MAAQ,MAAM;AACvB,eAAG,OAAQ,MAAM,MAAO,QAAQ,IAAM,OAAO,IAAK,IAAI;AACtD,kBAAM,GAAG,MAAQ,MAAM;AACvB,eAAG,OAAQ,MAAM,MAAO,QAAQ,IAAM,OAAO,IAAK,IAAI;AACtD,kBAAM,GAAG,MAAQ,MAAM;AACvB,eAAG,OAAQ,MAAM,MAAO,QAAQ,IAAM,OAAO,IAAK,IAAI;UAC1D,GA/JiB,iBAAA;UAiKjB,aAAa,gBAAAA,QAAA,WAAY;AAErB,gBAAI,OAAO,KAAK;AAChB,gBAAI,YAAY,KAAK;AAErB,gBAAI,aAAa,KAAK,cAAc;AACpC,gBAAI,YAAY,KAAK,WAAW;AAGhC,sBAAU,cAAc,CAAC,KAAK,OAAS,KAAK,YAAY;AACxD,uBAAa,YAAY,QAAS,MAAO,KAAK,EAAE,IAAI,KAAK,MAAM,aAAa,UAAW;AACvF,uBAAa,YAAY,QAAS,MAAO,KAAK,EAAE,IAAI;AACpD,iBAAK,WAAW,UAAU,SAAS;AAGnC,iBAAK,SAAS;AAGd,gBAAI,OAAO,KAAK,MAAM,MAAM;AAG5B,mBAAO;UACX,GAtBa,aAAA;UAwBb,OAAO,gBAAAA,QAAA,WAAY;AACf,gBAAI,QAAQ,OAAO,MAAM,KAAK,IAAI;AAClC,kBAAM,QAAQ,KAAK,MAAM,MAAM;AAE/B,mBAAO;UACX,GALO,OAAA;UAOP,WAAW,OAAK;QACpB,CAAC;AAgBD,UAAE,SAAS,OAAO,cAAc,MAAM;AAgBtC,UAAE,aAAa,OAAO,kBAAkB,MAAM;MAClD,GAAE;AAGF,aAAOiB,UAAS;IAEjB,CAAC;EAAA;AAAA,CAAA;ACrUD,IAAA,iBAAA,WAAA;EAAA,sCAAA,SAAA,QAAA;AAAA,4CAAA;AAAA,uBAAA;AAAC,KAAC,SAAU,MAAM,SAAS,OAAO;AACjC,UAAI,OAAO,YAAY,UAAU;AAEhC,eAAO,UAAU,UAAU,QAAQ,aAAA,GAAmB,iBAAA,GAAuB,eAAA,CAAmB;MACjG,WACS,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,eAAO,CAAC,UAAU,cAAc,UAAU,GAAG,OAAO;MACrD,OACK;AAEJ,gBAAQ,KAAK,QAAQ;MACtB;IACD,GAAE,SAAM,SAAUA,WAAU;AAE3B,OAAC,WAAY;AAET,YAAI,IAAIA;AACR,YAAI,QAAQ,EAAE;AACd,YAAI,UAAU,MAAM;AACpB,YAAI,eAAe,MAAM;AACzB,YAAI,SAAS,EAAE;AACf,YAAI,SAAS,OAAO;AAKpB,YAAI,SAAS,OAAO,SAAS,OAAO,OAAO;UACvC,UAAU,gBAAAjB,QAAA,WAAY;AAClB,iBAAK,QAAQ,IAAI,aAAa,KAAK;cAC/B,IAAI,QAAQ,KAAK,YAAY,UAAU;cAAG,IAAI,QAAQ,KAAK,YAAY,SAAU;cACjF,IAAI,QAAQ,KAAK,YAAY,SAAU;cAAG,IAAI,QAAQ,KAAK,WAAY,UAAU;cACjF,IAAI,QAAQ,KAAK,YAAY,UAAU;cAAG,IAAI,QAAQ,KAAK,YAAY,UAAU;cACjF,IAAI,QAAQ,KAAK,YAAY,UAAU;cAAG,IAAI,QAAQ,KAAK,YAAY,UAAU;YACrF,CAAC;UACL,GAPU,UAAA;UASV,aAAa,gBAAAA,QAAA,WAAY;AACrB,gBAAI,OAAO,OAAO,YAAY,KAAK,IAAI;AAEvC,iBAAK,YAAY;AAEjB,mBAAO;UACX,GANa,aAAA;QAOjB,CAAC;AAgBD,UAAE,SAAS,OAAO,cAAc,MAAM;AAgBtC,UAAE,aAAa,OAAO,kBAAkB,MAAM;MAClD,GAAE;AAGF,aAAOiB,UAAS;IAEjB,CAAC;EAAA;AAAA,CAAA;AClFD,IAAA,eAAA,WAAA;EAAA,oCAAA,SAAA,QAAA;AAAA,4CAAA;AAAA,uBAAA;AAAC,KAAC,SAAU,MAAM,SAAS,OAAO;AACjC,UAAI,OAAO,YAAY,UAAU;AAEhC,eAAO,UAAU,UAAU,QAAQ,aAAA,GAAmB,iBAAA,CAAqB;MAC5E,WACS,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,eAAO,CAAC,UAAU,YAAY,GAAG,OAAO;MACzC,OACK;AAEJ,gBAAQ,KAAK,QAAQ;MACtB;IACD,GAAE,SAAM,SAAUA,WAAU;AAE3B,OAAC,SAAUC,OAAM;AAEb,YAAI,IAAID;AACR,YAAI,QAAQ,EAAE;AACd,YAAI,YAAY,MAAM;AACtB,YAAI,SAAS,MAAM;AACnB,YAAI,QAAQ,EAAE;AACd,YAAI,UAAU,MAAM;AACpB,YAAI,SAAS,EAAE;AAGf,YAAI,cAAc,CAAC;AACnB,YAAI,aAAc,CAAC;AACnB,YAAI,kBAAkB,CAAC;AAGvB,SAAC,WAAY;AAET,cAAI,IAAI,GAAG,IAAI;AACf,mBAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AACzB,wBAAY,IAAI,IAAI,CAAC,KAAM,IAAI,MAAM,IAAI,KAAK,IAAK;AAEnD,gBAAI,OAAO,IAAI;AACf,gBAAI,QAAQ,IAAI,IAAI,IAAI,KAAK;AAC7B,gBAAI;AACJ,gBAAI;UACR;AAGA,mBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,qBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,yBAAW,IAAI,IAAI,CAAC,IAAI,KAAM,IAAI,IAAI,IAAI,KAAK,IAAK;YACxD;UACJ;AAGA,cAAI,OAAO;AACX,mBAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AACzB,gBAAI,mBAAmB;AACvB,gBAAI,mBAAmB;AAEvB,qBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,kBAAI,OAAO,GAAM;AACb,oBAAI,eAAe,KAAK,KAAK;AAC7B,oBAAI,cAAc,IAAI;AAClB,sCAAoB,KAAK;gBAC7B,OAAoC;AAChC,sCAAoB,KAAM,cAAc;gBAC5C;cACJ;AAGA,kBAAI,OAAO,KAAM;AAEb,uBAAQ,QAAQ,IAAK;cACzB,OAAO;AACH,yBAAS;cACb;YACJ;AAEA,4BAAgB,CAAC,IAAI,QAAQ,OAAO,kBAAkB,gBAAgB;UAC1E;QACJ,GAAE;AAGF,YAAI,IAAI,CAAC;AACT,SAAC,WAAY;AACT,mBAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AACzB,cAAE,CAAC,IAAI,QAAQ,OAAO;UAC1B;QACJ,GAAE;AAKF,YAAI,OAAO,OAAO,OAAO,OAAO,OAAO;;;;;;;;;UASnC,KAAK,OAAO,IAAI,OAAO;YACnB,cAAc;UAClB,CAAC;UAED,UAAU,gBAAAjB,QAAA,WAAY;AAClB,gBAAI,QAAQ,KAAK,SAAS,CAAC;AAC3B,qBAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AACzB,oBAAM,CAAC,IAAI,IAAI,QAAQ,KAAK;YAChC;AAEA,iBAAK,aAAa,OAAO,IAAI,KAAK,IAAI,gBAAgB;UAC1D,GAPU,UAAA;UASV,iBAAiB,gBAAAA,QAAA,SAAU,GAAG,QAAQ;AAElC,gBAAI,QAAQ,KAAK;AACjB,gBAAI,kBAAkB,KAAK,YAAY;AAGvC,qBAAS,IAAI,GAAG,IAAI,iBAAiB,KAAK;AAEtC,kBAAI,MAAO,EAAE,SAAS,IAAI,CAAC;AAC3B,kBAAI,OAAO,EAAE,SAAS,IAAI,IAAI,CAAC;AAG/B,qBACO,OAAO,IAAO,QAAQ,MAAO,YAC7B,OAAO,KAAO,QAAQ,KAAO;AAEpC,sBACO,QAAQ,IAAO,SAAS,MAAO,YAC/B,QAAQ,KAAO,SAAS,KAAO;AAItC,kBAAI,OAAO,MAAM,CAAC;AAClB,mBAAK,QAAQ;AACb,mBAAK,OAAQ;YACjB;AAGA,qBAAS,QAAQ,GAAG,QAAQ,IAAI,SAAS;AAErC,uBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAExB,oBAAI,OAAO,GAAG,OAAO;AACrB,yBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,sBAAI,OAAO,MAAM,IAAI,IAAI,CAAC;AAC1B,0BAAQ,KAAK;AACb,0BAAQ,KAAK;gBACjB;AAGA,oBAAI,KAAK,EAAE,CAAC;AACZ,mBAAG,OAAO;AACV,mBAAG,MAAO;cACd;AACA,uBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAExB,oBAAI,MAAM,GAAG,IAAI,KAAK,CAAC;AACvB,oBAAI,MAAM,GAAG,IAAI,KAAK,CAAC;AACvB,oBAAI,SAAS,IAAI;AACjB,oBAAI,SAAS,IAAI;AAGjB,oBAAI,OAAO,IAAI,QAAS,UAAU,IAAM,WAAW;AACnD,oBAAI,OAAO,IAAI,OAAS,UAAU,IAAM,WAAW;AACnD,yBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,sBAAI,OAAO,MAAM,IAAI,IAAI,CAAC;AAC1B,uBAAK,QAAQ;AACb,uBAAK,OAAQ;gBACjB;cACJ;AAGA,uBAAS,YAAY,GAAG,YAAY,IAAI,aAAa;AACjD,oBAAI;AACJ,oBAAI;AAGJ,oBAAI,OAAO,MAAM,SAAS;AAC1B,oBAAI,UAAU,KAAK;AACnB,oBAAI,UAAU,KAAK;AACnB,oBAAI,YAAY,YAAY,SAAS;AAGrC,oBAAI,YAAY,IAAI;AAChB,yBAAQ,WAAW,YAAc,YAAa,KAAK;AACnD,yBAAQ,WAAW,YAAc,YAAa,KAAK;gBACvD,OAAkC;AAC9B,yBAAQ,WAAY,YAAY,KAAQ,YAAa,KAAK;AAC1D,yBAAQ,WAAY,YAAY,KAAQ,YAAa,KAAK;gBAC9D;AAGA,oBAAI,UAAU,EAAE,WAAW,SAAS,CAAC;AACrC,wBAAQ,OAAO;AACf,wBAAQ,MAAO;cACnB;AAGA,kBAAI,KAAK,EAAE,CAAC;AACZ,kBAAI,SAAS,MAAM,CAAC;AACpB,iBAAG,OAAO,OAAO;AACjB,iBAAG,MAAO,OAAO;AAGjB,uBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,yBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAExB,sBAAI,YAAY,IAAI,IAAI;AACxB,sBAAI,OAAO,MAAM,SAAS;AAC1B,sBAAI,QAAQ,EAAE,SAAS;AACvB,sBAAI,UAAU,GAAI,IAAI,KAAK,IAAK,IAAI,CAAC;AACrC,sBAAI,UAAU,GAAI,IAAI,KAAK,IAAK,IAAI,CAAC;AAGrC,uBAAK,OAAO,MAAM,OAAQ,CAAC,QAAQ,OAAO,QAAQ;AAClD,uBAAK,MAAO,MAAM,MAAQ,CAAC,QAAQ,MAAO,QAAQ;gBACtD;cACJ;AAGA,kBAAI,OAAO,MAAM,CAAC;AAClB,kBAAI,gBAAgB,gBAAgB,KAAK;AACzC,mBAAK,QAAQ,cAAc;AAC3B,mBAAK,OAAQ,cAAc;YAC/B;UACJ,GAnHiB,iBAAA;UAqHjB,aAAa,gBAAAA,QAAA,WAAY;AAErB,gBAAI,OAAO,KAAK;AAChB,gBAAI,YAAY,KAAK;AACrB,gBAAI,aAAa,KAAK,cAAc;AACpC,gBAAI,YAAY,KAAK,WAAW;AAChC,gBAAI,gBAAgB,KAAK,YAAY;AAGrC,sBAAU,cAAc,CAAC,KAAK,KAAQ,KAAK,YAAY;AACvD,uBAAYkB,MAAK,MAAM,YAAY,KAAK,aAAa,IAAI,kBAAmB,KAAK,CAAC,KAAK;AACvF,iBAAK,WAAW,UAAU,SAAS;AAGnC,iBAAK,SAAS;AAGd,gBAAI,QAAQ,KAAK;AACjB,gBAAI,oBAAoB,KAAK,IAAI,eAAe;AAChD,gBAAI,oBAAoB,oBAAoB;AAG5C,gBAAI,YAAY,CAAC;AACjB,qBAAS,IAAI,GAAG,IAAI,mBAAmB,KAAK;AAExC,kBAAI,OAAO,MAAM,CAAC;AAClB,kBAAI,UAAU,KAAK;AACnB,kBAAI,UAAU,KAAK;AAGnB,yBACO,WAAW,IAAO,YAAY,MAAO,YACrC,WAAW,KAAO,YAAY,KAAO;AAE5C,yBACO,WAAW,IAAO,YAAY,MAAO,YACrC,WAAW,KAAO,YAAY,KAAO;AAI5C,wBAAU,KAAK,OAAO;AACtB,wBAAU,KAAK,OAAO;YAC1B;AAGA,mBAAO,IAAI,UAAU,KAAK,WAAW,iBAAiB;UAC1D,GA9Ca,aAAA;UAgDb,OAAO,gBAAAlB,QAAA,WAAY;AACf,gBAAI,QAAQ,OAAO,MAAM,KAAK,IAAI;AAElC,gBAAI,QAAQ,MAAM,SAAS,KAAK,OAAO,MAAM,CAAC;AAC9C,qBAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AACzB,oBAAM,CAAC,IAAI,MAAM,CAAC,EAAE,MAAM;YAC9B;AAEA,mBAAO;UACX,GATO,OAAA;QAUX,CAAC;AAgBD,UAAE,OAAO,OAAO,cAAc,IAAI;AAgBlC,UAAE,WAAW,OAAO,kBAAkB,IAAI;MAC9C,GAAE,IAAI;AAGN,aAAOiB,UAAS;IAEjB,CAAC;EAAA;AAAA,CAAA;ACrUD,IAAA,oBAAA,WAAA;EAAA,yCAAA,SAAA,QAAA;AAAA,4CAAA;AAAA,uBAAA;AAAC,KAAC,SAAU,MAAM,SAAS;AAC1B,UAAI,OAAO,YAAY,UAAU;AAEhC,eAAO,UAAU,UAAU,QAAQ,aAAA,CAAiB;MACrD,WACS,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,eAAO,CAAC,QAAQ,GAAG,OAAO;MAC3B,OACK;AAEJ,gBAAQ,KAAK,QAAQ;MACtB;IACD,GAAE,SAAM,SAAUA,WAAU;AAa3B,OAAC,SAAUC,OAAM;AAEb,YAAI,IAAID;AACR,YAAI,QAAQ,EAAE;AACd,YAAI,YAAY,MAAM;AACtB,YAAI,SAAS,MAAM;AACnB,YAAI,SAAS,EAAE;AAGf,YAAI,MAAM,UAAU,OAAO;UACvB;UAAI;UAAI;UAAI;UAAI;UAAI;UAAI;UAAI;UAAI;UAAI;UAAG;UAAI;UAAI;UAAI;UAAI;UAAI;UAC3D;UAAI;UAAG;UAAK;UAAG;UAAK;UAAG;UAAK;UAAG;UAAK;UAAI;UAAI;UAAI;UAAG;UAAI;UAAK;UAC5D;UAAG;UAAI;UAAK;UAAI;UAAG;UAAK;UAAI;UAAI;UAAI;UAAI;UAAI;UAAG;UAAI;UAAK;UAAG;UAC3D;UAAI;UAAG;UAAI;UAAK;UAAI;UAAG;UAAK;UAAG;UAAK;UAAI;UAAG;UAAI;UAAK;UAAI;UAAI;UAC5D;UAAI;UAAI;UAAI;UAAI;UAAG;UAAK;UAAG;UAAI;UAAK;UAAI;UAAI;UAAG;UAAK;UAAG;UAAI;QAAE,CAAC;AAClE,YAAI,MAAM,UAAU,OAAO;UACvB;UAAG;UAAK;UAAI;UAAI;UAAI;UAAG;UAAK;UAAG;UAAK;UAAG;UAAK;UAAI;UAAG;UAAK;UAAG;UAC3D;UAAG;UAAK;UAAI;UAAI;UAAG;UAAK;UAAG;UAAI;UAAI;UAAK;UAAG;UAAK;UAAI;UAAI;UAAI;UAC5D;UAAK;UAAI;UAAI;UAAI;UAAG;UAAK;UAAI;UAAG;UAAK;UAAG;UAAK;UAAG;UAAK;UAAI;UAAG;UAC5D;UAAI;UAAI;UAAI;UAAI;UAAG;UAAI;UAAK;UAAI;UAAG;UAAK;UAAG;UAAK;UAAI;UAAG;UAAI;UAC3D;UAAI;UAAI;UAAK;UAAI;UAAI;UAAI;UAAI;UAAI;UAAI;UAAG;UAAI;UAAK;UAAI;UAAI;UAAG;QAAE,CAAC;AACnE,YAAI,MAAM,UAAU,OAAO;UACtB;UAAI;UAAI;UAAI;UAAK;UAAI;UAAI;UAAI;UAAG;UAAI;UAAI;UAAI;UAAK;UAAI;UAAI;UAAI;UAC9D;UAAG;UAAK;UAAG;UAAI;UAAK;UAAI;UAAG;UAAK;UAAG;UAAI;UAAK;UAAG;UAAK;UAAG;UAAI;UAC3D;UAAI;UAAK;UAAI;UAAG;UAAK;UAAG;UAAI;UAAI;UAAK;UAAG;UAAK;UAAI;UAAG;UAAK;UAAI;UAC3D;UAAI;UAAI;UAAI;UAAI;UAAI;UAAK;UAAI;UAAI;UAAG;UAAK;UAAI;UAAI;UAAI;UAAI;UAAG;UAC9D;UAAG;UAAK;UAAG;UAAK;UAAI;UAAG;UAAI;UAAK;UAAG;UAAI;UAAI;UAAI;UAAK;UAAI;UAAI;QAAE,CAAC;AACnE,YAAI,MAAM,UAAU,OAAO;UACvB;UAAI;UAAI;UAAG;UAAI;UAAI;UAAI;UAAK;UAAI;UAAI;UAAI;UAAG;UAAI;UAAI;UAAI;UAAK;UAC5D;UAAG;UAAI;UAAK;UAAG;UAAK;UAAI;UAAG;UAAK;UAAI;UAAG;UAAK;UAAI;UAAG;UAAI;UAAI;UAC3D;UAAI;UAAG;UAAI;UAAK;UAAI;UAAI;UAAG;UAAI;UAAI;UAAK;UAAG;UAAI;UAAI;UAAK;UAAI;UAC5D;UAAK;UAAI;UAAG;UAAI;UAAI;UAAK;UAAG;UAAK;UAAI;UAAG;UAAK;UAAG;UAAK;UAAG;UAAK;UAC7D;UAAI;UAAG;UAAK;UAAG;UAAK;UAAG;UAAK;UAAI;UAAG;UAAK;UAAI;UAAG;UAAI;UAAI;UAAI;QAAG,CAAC;AAEnE,YAAI,MAAO,UAAU,OAAO,CAAE,GAAY,YAAY,YAAY,YAAY,UAAU,CAAC;AACzF,YAAI,MAAO,UAAU,OAAO,CAAE,YAAY,YAAY,YAAY,YAAY,CAAU,CAAC;AAKzF,YAAI,YAAY,OAAO,YAAY,OAAO,OAAO;UAC7C,UAAU,gBAAAjB,QAAA,WAAY;AAClB,iBAAK,QAAS,UAAU,OAAO,CAAC,YAAY,YAAY,YAAY,WAAY,UAAU,CAAC;UAC/F,GAFU,UAAA;UAIV,iBAAiB,gBAAAA,QAAA,SAAU,GAAG,QAAQ;AAGlC,qBAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AAEzB,kBAAI,WAAW,SAAS;AACxB,kBAAI,aAAa,EAAE,QAAQ;AAG3B,gBAAE,QAAQ,KACH,cAAc,IAAO,eAAe,MAAO,YAC3C,cAAc,KAAO,eAAe,KAAO;YAEtD;AAEA,gBAAI,IAAK,KAAK,MAAM;AACpB,gBAAI,KAAK,IAAI;AACb,gBAAI,KAAK,IAAI;AACb,gBAAI,KAAK,IAAI;AACb,gBAAI,KAAK,IAAI;AACb,gBAAI,KAAK,IAAI;AACb,gBAAI,KAAK,IAAI;AAGb,gBAAI,IAAI,IAAI,IAAI,IAAI;AACpB,gBAAI,IAAI,IAAI,IAAI,IAAI;AAEpB,iBAAK,KAAK,EAAE,CAAC;AACb,iBAAK,KAAK,EAAE,CAAC;AACb,iBAAK,KAAK,EAAE,CAAC;AACb,iBAAK,KAAK,EAAE,CAAC;AACb,iBAAK,KAAK,EAAE,CAAC;AAEb,gBAAI;AACJ,qBAAS,IAAI,GAAG,IAAI,IAAI,KAAK,GAAG;AAC5B,kBAAK,KAAM,EAAE,SAAO,GAAG,CAAC,CAAC,IAAG;AAC5B,kBAAI,IAAE,IAAG;AACZ,qBAAM,GAAG,IAAG,IAAG,EAAE,IAAI,GAAG,CAAC;cACtB,WAAW,IAAE,IAAI;AACpB,qBAAM,GAAG,IAAG,IAAG,EAAE,IAAI,GAAG,CAAC;cACtB,WAAW,IAAE,IAAI;AACpB,qBAAM,GAAG,IAAG,IAAG,EAAE,IAAI,GAAG,CAAC;cACtB,WAAW,IAAE,IAAI;AACpB,qBAAM,GAAG,IAAG,IAAG,EAAE,IAAI,GAAG,CAAC;cACtB,OAAO;AACV,qBAAM,GAAG,IAAG,IAAG,EAAE,IAAI,GAAG,CAAC;cACtB;AACA,kBAAI,IAAE;AACN,kBAAK,KAAK,GAAE,GAAG,CAAC,CAAC;AACjB,kBAAK,IAAE,KAAI;AACX,mBAAK;AACL,mBAAK;AACL,mBAAK,KAAK,IAAI,EAAE;AAChB,mBAAK;AACL,mBAAK;AAEL,kBAAK,KAAK,EAAE,SAAO,GAAG,CAAC,CAAC,IAAG;AAC3B,kBAAI,IAAE,IAAG;AACZ,qBAAM,GAAG,IAAG,IAAG,EAAE,IAAI,GAAG,CAAC;cACtB,WAAW,IAAE,IAAI;AACpB,qBAAM,GAAG,IAAG,IAAG,EAAE,IAAI,GAAG,CAAC;cACtB,WAAW,IAAE,IAAI;AACpB,qBAAM,GAAG,IAAG,IAAG,EAAE,IAAI,GAAG,CAAC;cACtB,WAAW,IAAE,IAAI;AACpB,qBAAM,GAAG,IAAG,IAAG,EAAE,IAAI,GAAG,CAAC;cACtB,OAAO;AACV,qBAAM,GAAG,IAAG,IAAG,EAAE,IAAI,GAAG,CAAC;cACtB;AACA,kBAAI,IAAE;AACN,kBAAK,KAAK,GAAE,GAAG,CAAC,CAAC;AACjB,kBAAK,IAAE,KAAI;AACX,mBAAK;AACL,mBAAK;AACL,mBAAK,KAAK,IAAI,EAAE;AAChB,mBAAK;AACL,mBAAK;YACT;AAEA,gBAAQ,EAAE,CAAC,IAAI,KAAK,KAAI;AACxB,cAAE,CAAC,IAAK,EAAE,CAAC,IAAI,KAAK,KAAI;AACxB,cAAE,CAAC,IAAK,EAAE,CAAC,IAAI,KAAK,KAAI;AACxB,cAAE,CAAC,IAAK,EAAE,CAAC,IAAI,KAAK,KAAI;AACxB,cAAE,CAAC,IAAK,EAAE,CAAC,IAAI,KAAK,KAAI;AACxB,cAAE,CAAC,IAAK;UACZ,GApFiB,iBAAA;UAsFjB,aAAa,gBAAAA,QAAA,WAAY;AAErB,gBAAI,OAAO,KAAK;AAChB,gBAAI,YAAY,KAAK;AAErB,gBAAI,aAAa,KAAK,cAAc;AACpC,gBAAI,YAAY,KAAK,WAAW;AAGhC,sBAAU,cAAc,CAAC,KAAK,OAAS,KAAK,YAAY;AACxD,uBAAa,YAAY,OAAQ,KAAM,KAAK,EAAE,KACvC,cAAc,IAAO,eAAe,MAAO,YAC3C,cAAc,KAAO,eAAe,KAAO;AAElD,iBAAK,YAAY,UAAU,SAAS,KAAK;AAGzC,iBAAK,SAAS;AAGd,gBAAI,OAAO,KAAK;AAChB,gBAAI,IAAI,KAAK;AAGb,qBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAExB,kBAAI,MAAM,EAAE,CAAC;AAGb,gBAAE,CAAC,KAAO,OAAO,IAAO,QAAQ,MAAO,YAC7B,OAAO,KAAO,QAAQ,KAAO;YAC3C;AAGA,mBAAO;UACX,GAnCa,aAAA;UAqCb,OAAO,gBAAAA,QAAA,WAAY;AACf,gBAAI,QAAQ,OAAO,MAAM,KAAK,IAAI;AAClC,kBAAM,QAAQ,KAAK,MAAM,MAAM;AAE/B,mBAAO;UACX,GALO,OAAA;QAMX,CAAC;AAGD,iBAAS,GAAG,GAAG,GAAG,GAAG;AACjB,iBAAS,IAAM,IAAM;QAEzB;AAHS;AAAA,QAAAA,QAAA,IAAA,IAAA;AAKT,iBAAS,GAAG,GAAG,GAAG,GAAG;AACjB,iBAAU,IAAI,IAAQ,CAAC,IAAI;QAC/B;AAFS;AAAA,QAAAA,QAAA,IAAA,IAAA;AAIT,iBAAS,GAAG,GAAG,GAAG,GAAG;AACjB,kBAAU,IAAM,CAAE,KAAQ;QAC9B;AAFS;AAAA,QAAAA,QAAA,IAAA,IAAA;AAIT,iBAAS,GAAG,GAAG,GAAG,GAAG;AACjB,iBAAU,IAAM,IAAQ,IAAI,CAAE;QAClC;AAFS;AAAA,QAAAA,QAAA,IAAA,IAAA;AAIT,iBAAS,GAAG,GAAG,GAAG,GAAG;AACjB,iBAAS,KAAO,IAAK,CAAE;QAE3B;AAHS;AAAA,QAAAA,QAAA,IAAA,IAAA;AAKT,iBAAS,KAAK,GAAE,GAAG;AACf,iBAAQ,KAAG,IAAM,MAAK,KAAG;QAC7B;AAFS;AAAA,QAAAA,QAAA,MAAA,MAAA;AAmBT,UAAE,YAAY,OAAO,cAAc,SAAS;AAgB5C,UAAE,gBAAgB,OAAO,kBAAkB,SAAS;MACxD,GAAE,IAAI;AAGN,aAAOiB,UAAS;IAEjB,CAAC;EAAA;AAAA,CAAA;AC1QD,IAAA,eAAA,WAAA;EAAA,oCAAA,SAAA,QAAA;AAAA,4CAAA;AAAA,uBAAA;AAAC,KAAC,SAAU,MAAM,SAAS;AAC1B,UAAI,OAAO,YAAY,UAAU;AAEhC,eAAO,UAAU,UAAU,QAAQ,aAAA,CAAiB;MACrD,WACS,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,eAAO,CAAC,QAAQ,GAAG,OAAO;MAC3B,OACK;AAEJ,gBAAQ,KAAK,QAAQ;MACtB;IACD,GAAE,SAAM,SAAUA,WAAU;AAE3B,OAAC,WAAY;AAET,YAAI,IAAIA;AACR,YAAI,QAAQ,EAAE;AACd,YAAI,OAAO,MAAM;AACjB,YAAI,QAAQ,EAAE;AACd,YAAI,OAAO,MAAM;AACjB,YAAI,SAAS,EAAE;AAKf,YAAI,OAAO,OAAO,OAAO,KAAK,OAAO;;;;;;;;;;;UAWjC,MAAM,gBAAAjB,QAAA,SAAU,QAAQ,KAAK;AAEzB,qBAAS,KAAK,UAAU,IAAI,OAAO,KAAK;AAGxC,gBAAI,OAAO,OAAO,UAAU;AACxB,oBAAM,KAAK,MAAM,GAAG;YACxB;AAGA,gBAAI,kBAAkB,OAAO;AAC7B,gBAAI,uBAAuB,kBAAkB;AAG7C,gBAAI,IAAI,WAAW,sBAAsB;AACrC,oBAAM,OAAO,SAAS,GAAG;YAC7B;AAGA,gBAAI,MAAM;AAGV,gBAAI,OAAO,KAAK,QAAQ,IAAI,MAAM;AAClC,gBAAI,OAAO,KAAK,QAAQ,IAAI,MAAM;AAGlC,gBAAI,YAAY,KAAK;AACrB,gBAAI,YAAY,KAAK;AAGrB,qBAAS,IAAI,GAAG,IAAI,iBAAiB,KAAK;AACtC,wBAAU,CAAC,KAAK;AAChB,wBAAU,CAAC,KAAK;YACpB;AACA,iBAAK,WAAW,KAAK,WAAW;AAGhC,iBAAK,MAAM;UACf,GAtCM,MAAA;;;;;;;;UA+CN,OAAO,gBAAAA,QAAA,WAAY;AAEf,gBAAI,SAAS,KAAK;AAGlB,mBAAO,MAAM;AACb,mBAAO,OAAO,KAAK,KAAK;UAC5B,GAPO,OAAA;;;;;;;;;;;;;UAqBP,QAAQ,gBAAAA,QAAA,SAAU,eAAe;AAC7B,iBAAK,QAAQ,OAAO,aAAa;AAGjC,mBAAO;UACX,GALQ,QAAA;;;;;;;;;;;;;;;UAqBR,UAAU,gBAAAA,QAAA,SAAU,eAAe;AAE/B,gBAAI,SAAS,KAAK;AAGlB,gBAAI,YAAY,OAAO,SAAS,aAAa;AAC7C,mBAAO,MAAM;AACb,gBAAI,OAAO,OAAO,SAAS,KAAK,MAAM,MAAM,EAAE,OAAO,SAAS,CAAC;AAE/D,mBAAO;UACX,GAVU,UAAA;QAWd,CAAC;MACL,GAAE;IAGH,CAAC;EAAA;AAAA,CAAA;AC9ID,IAAA,iBAAA,WAAA;EAAA,sCAAA,SAAA,QAAA;AAAA,4CAAA;AAAA,uBAAA;AAAC,KAAC,SAAU,MAAM,SAAS,OAAO;AACjC,UAAI,OAAO,YAAY,UAAU;AAEhC,eAAO,UAAU,UAAU,QAAQ,aAAA,GAAmB,eAAA,GAAqB,aAAA,CAAiB;MAC7F,WACS,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,eAAO,CAAC,UAAU,YAAY,QAAQ,GAAG,OAAO;MACjD,OACK;AAEJ,gBAAQ,KAAK,QAAQ;MACtB;IACD,GAAE,SAAM,SAAUiB,WAAU;AAE3B,OAAC,WAAY;AAET,YAAI,IAAIA;AACR,YAAI,QAAQ,EAAE;AACd,YAAI,OAAO,MAAM;AACjB,YAAI,YAAY,MAAM;AACtB,YAAI,SAAS,EAAE;AACf,YAAI,SAAS,OAAO;AACpB,YAAI,OAAO,OAAO;AAKlB,YAAI,SAAS,OAAO,SAAS,KAAK,OAAO;;;;;;;;UAQrC,KAAK,KAAK,OAAO;YACb,SAAS,MAAI;YACb,QAAQ;YACR,YAAY;UAChB,CAAC;;;;;;;;;;;;UAaD,MAAM,gBAAAjB,QAAA,SAAU,KAAK;AACjB,iBAAK,MAAM,KAAK,IAAI,OAAO,GAAG;UAClC,GAFM,MAAA;;;;;;;;;;;;;UAgBN,SAAS,gBAAAA,QAAA,SAAU,UAAU,MAAM;AAE/B,gBAAI,MAAM,KAAK;AAGf,gBAAI,OAAO,KAAK,OAAO,IAAI,QAAQ,QAAQ;AAG3C,gBAAI,aAAa,UAAU,OAAO;AAClC,gBAAI,aAAa,UAAU,OAAO,CAAC,CAAU,CAAC;AAG9C,gBAAI,kBAAkB,WAAW;AACjC,gBAAI,kBAAkB,WAAW;AACjC,gBAAI,UAAU,IAAI;AAClB,gBAAI,aAAa,IAAI;AAGrB,mBAAO,gBAAgB,SAAS,SAAS;AACrC,kBAAI,QAAQ,KAAK,OAAO,IAAI,EAAE,SAAS,UAAU;AACjD,mBAAK,MAAM;AAGX,kBAAI,aAAa,MAAM;AACvB,kBAAI,mBAAmB,WAAW;AAGlC,kBAAI,eAAe;AACnB,uBAAS,IAAI,GAAG,IAAI,YAAY,KAAK;AACjC,+BAAe,KAAK,SAAS,YAAY;AACzC,qBAAK,MAAM;AAGX,oBAAI,oBAAoB,aAAa;AAGrC,yBAAS,IAAI,GAAG,IAAI,kBAAkB,KAAK;AACvC,6BAAW,CAAC,KAAK,kBAAkB,CAAC;gBACxC;cACJ;AAEA,yBAAW,OAAO,KAAK;AACvB,8BAAgB,CAAC;YACrB;AACA,uBAAW,WAAW,UAAU;AAEhC,mBAAO;UACX,GA/CS,SAAA;QAgDb,CAAC;AAmBD,UAAE,SAAS,SAAU,UAAU,MAAM,KAAK;AACtC,iBAAO,OAAO,OAAO,GAAG,EAAE,QAAQ,UAAU,IAAI;QACpD;MACJ,GAAE;AAGF,aAAOiB,UAAS;IAEjB,CAAC;EAAA;AAAA,CAAA;AChJD,IAAA,iBAAA,WAAA;EAAA,sCAAA,SAAA,QAAA;AAAA,4CAAA;AAAA,uBAAA;AAAC,KAAC,SAAU,MAAM,SAAS,OAAO;AACjC,UAAI,OAAO,YAAY,UAAU;AAEhC,eAAO,UAAU,UAAU,QAAQ,aAAA,GAAmB,aAAA,GAAmB,aAAA,CAAiB;MAC3F,WACS,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,eAAO,CAAC,UAAU,UAAU,QAAQ,GAAG,OAAO;MAC/C,OACK;AAEJ,gBAAQ,KAAK,QAAQ;MACtB;IACD,GAAE,SAAM,SAAUA,WAAU;AAE3B,OAAC,WAAY;AAET,YAAI,IAAIA;AACR,YAAI,QAAQ,EAAE;AACd,YAAI,OAAO,MAAM;AACjB,YAAI,YAAY,MAAM;AACtB,YAAI,SAAS,EAAE;AACf,YAAI,MAAM,OAAO;AAMjB,YAAI,SAAS,OAAO,SAAS,KAAK,OAAO;;;;;;;;UAQrC,KAAK,KAAK,OAAO;YACb,SAAS,MAAI;YACb,QAAQ;YACR,YAAY;UAChB,CAAC;;;;;;;;;;;;UAaD,MAAM,gBAAAjB,QAAA,SAAU,KAAK;AACjB,iBAAK,MAAM,KAAK,IAAI,OAAO,GAAG;UAClC,GAFM,MAAA;;;;;;;;;;;;;UAgBN,SAAS,gBAAAA,QAAA,SAAU,UAAU,MAAM;AAC/B,gBAAI;AAGJ,gBAAI,MAAM,KAAK;AAGf,gBAAI,SAAS,IAAI,OAAO,OAAO;AAG/B,gBAAI,aAAa,UAAU,OAAO;AAGlC,gBAAI,kBAAkB,WAAW;AACjC,gBAAI,UAAU,IAAI;AAClB,gBAAI,aAAa,IAAI;AAGrB,mBAAO,gBAAgB,SAAS,SAAS;AACrC,kBAAI,OAAO;AACP,uBAAO,OAAO,KAAK;cACvB;AACA,sBAAQ,OAAO,OAAO,QAAQ,EAAE,SAAS,IAAI;AAC7C,qBAAO,MAAM;AAGb,uBAAS,IAAI,GAAG,IAAI,YAAY,KAAK;AACjC,wBAAQ,OAAO,SAAS,KAAK;AAC7B,uBAAO,MAAM;cACjB;AAEA,yBAAW,OAAO,KAAK;YAC3B;AACA,uBAAW,WAAW,UAAU;AAEhC,mBAAO;UACX,GApCS,SAAA;QAqCb,CAAC;AAmBD,UAAE,SAAS,SAAU,UAAU,MAAM,KAAK;AACtC,iBAAO,OAAO,OAAO,GAAG,EAAE,QAAQ,UAAU,IAAI;QACpD;MACJ,GAAE;AAGF,aAAOiB,UAAS;IAEjB,CAAC;EAAA;AAAA,CAAA;ACrID,IAAA,sBAAA,WAAA;EAAA,2CAAA,SAAA,QAAA;AAAA,4CAAA;AAAA,uBAAA;AAAC,KAAC,SAAU,MAAM,SAAS,OAAO;AACjC,UAAI,OAAO,YAAY,UAAU;AAEhC,eAAO,UAAU,UAAU,QAAQ,aAAA,GAAmB,eAAA,CAAmB;MAC1E,WACS,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,eAAO,CAAC,UAAU,UAAU,GAAG,OAAO;MACvC,OACK;AAEJ,gBAAQ,KAAK,QAAQ;MACtB;IACD,GAAE,SAAM,SAAUA,WAAU;AAK3BA,gBAAS,IAAI,UAAW,SAAUE,YAAW;AAEzC,YAAI,IAAIF;AACR,YAAI,QAAQ,EAAE;AACd,YAAI,OAAO,MAAM;AACjB,YAAI,YAAY,MAAM;AACtB,YAAI,yBAAyB,MAAM;AACnC,YAAI,QAAQ,EAAE;AACd,YAAI,OAAO,MAAM;AACjB,YAAI,SAAS,MAAM;AACnB,YAAI,SAAS,EAAE;AACf,YAAI,SAAS,OAAO;AAUpB,YAAI,SAAS,MAAM,SAAS,uBAAuB,OAAO;;;;;;UAMtD,KAAK,KAAK,OAAO;;;;;;;;;;;;;;;UAgBjB,iBAAiB,gBAAAjB,QAAA,SAAU,KAAK,KAAK;AACjC,mBAAO,KAAK,OAAO,KAAK,iBAAiB,KAAK,GAAG;UACrD,GAFiB,iBAAA;;;;;;;;;;;;;;;UAkBjB,iBAAiB,gBAAAA,QAAA,SAAU,KAAK,KAAK;AACjC,mBAAO,KAAK,OAAO,KAAK,iBAAiB,KAAK,GAAG;UACrD,GAFiB,iBAAA;;;;;;;;;;;;UAejB,MAAM,gBAAAA,QAAA,SAAU,WAAW,KAAK,KAAK;AAEjC,iBAAK,MAAM,KAAK,IAAI,OAAO,GAAG;AAG9B,iBAAK,aAAa;AAClB,iBAAK,OAAO;AAGZ,iBAAK,MAAM;UACf,GAVM,MAAA;;;;;;;;UAmBN,OAAO,gBAAAA,QAAA,WAAY;AAEf,mCAAuB,MAAM,KAAK,IAAI;AAGtC,iBAAK,SAAS;UAClB,GANO,OAAA;;;;;;;;;;;;;UAoBP,SAAS,gBAAAA,QAAA,SAAU,YAAY;AAE3B,iBAAK,QAAQ,UAAU;AAGvB,mBAAO,KAAK,SAAS;UACzB,GANS,SAAA;;;;;;;;;;;;;;;UAsBT,UAAU,gBAAAA,QAAA,SAAU,YAAY;AAE5B,gBAAI,YAAY;AACZ,mBAAK,QAAQ,UAAU;YAC3B;AAGA,gBAAI,qBAAqB,KAAK,YAAY;AAE1C,mBAAO;UACX,GAVU,UAAA;UAYV,SAAS,MAAI;UAEb,QAAQ,MAAI;UAEZ,iBAAiB;UAEjB,iBAAiB;;;;;;;;;;;;;;UAejB,eAAgB,2BAAY;AACxB,qBAAS,qBAAqB,KAAK;AAC/B,kBAAI,OAAO,OAAO,UAAU;AACxB,uBAAO;cACX,OAAO;AACH,uBAAO;cACX;YACJ;AANS;AAAA,YAAAA,QAAA,sBAAA,sBAAA;AAQT,mBAAO,SAAU,QAAQ;AACrB,qBAAO;gBACH,SAAS,gBAAAA,QAAA,SAAU,SAAS,KAAK,KAAK;AAClC,yBAAO,qBAAqB,GAAG,EAAE,QAAQ,QAAQ,SAAS,KAAK,GAAG;gBACtE,GAFS,SAAA;gBAIT,SAAS,gBAAAA,QAAA,SAAU,YAAY,KAAK,KAAK;AACrC,yBAAO,qBAAqB,GAAG,EAAE,QAAQ,QAAQ,YAAY,KAAK,GAAG;gBACzE,GAFS,SAAA;cAGb;YACJ;UACJ,EAAE;QACN,CAAC;AAOD,YAAI,eAAe,MAAM,eAAe,OAAO,OAAO;UAClD,aAAa,gBAAAA,QAAA,WAAY;AAErB,gBAAI,uBAAuB,KAAK,SAAS,IAAS;AAElD,mBAAO;UACX,GALa,aAAA;UAOb,WAAW;QACf,CAAC;AAKD,YAAI,SAAS,EAAE,OAAO,CAAC;AAKvB,YAAI,kBAAkB,MAAM,kBAAkB,KAAK,OAAO;;;;;;;;;;;;;UAatD,iBAAiB,gBAAAA,QAAA,SAAU,QAAQ,IAAI;AACnC,mBAAO,KAAK,UAAU,OAAO,QAAQ,EAAE;UAC3C,GAFiB,iBAAA;;;;;;;;;;;;;UAgBjB,iBAAiB,gBAAAA,QAAA,SAAU,QAAQ,IAAI;AACnC,mBAAO,KAAK,UAAU,OAAO,QAAQ,EAAE;UAC3C,GAFiB,iBAAA;;;;;;;;;;;UAcjB,MAAM,gBAAAA,QAAA,SAAU,QAAQ,IAAI;AACxB,iBAAK,UAAU;AACf,iBAAK,MAAM;UACf,GAHM,MAAA;QAIV,CAAC;AAKD,YAAI,MAAM,OAAO,MAAO,WAAY;AAIhC,cAAIwB,OAAM,gBAAgB,OAAO;AAKjCA,eAAI,YAAYA,KAAI,OAAO;;;;;;;;;;;YAWvB,cAAc,gBAAAxB,QAAA,SAAU,OAAO,QAAQ;AAEnC,kBAAI,SAAS,KAAK;AAClB,kBAAI,YAAY,OAAO;AAGvB,uBAAS,KAAK,MAAM,OAAO,QAAQ,SAAS;AAC5C,qBAAO,aAAa,OAAO,MAAM;AAGjC,mBAAK,aAAa,MAAM,MAAM,QAAQ,SAAS,SAAS;YAC5D,GAXc,cAAA;UAYlB,CAAC;AAKDwB,eAAI,YAAYA,KAAI,OAAO;;;;;;;;;;;YAWvB,cAAc,gBAAAxB,QAAA,SAAU,OAAO,QAAQ;AAEnC,kBAAI,SAAS,KAAK;AAClB,kBAAI,YAAY,OAAO;AAGvB,kBAAI,YAAY,MAAM,MAAM,QAAQ,SAAS,SAAS;AAGtD,qBAAO,aAAa,OAAO,MAAM;AACjC,uBAAS,KAAK,MAAM,OAAO,QAAQ,SAAS;AAG5C,mBAAK,aAAa;YACtB,GAdc,cAAA;UAelB,CAAC;AAED,mBAAS,SAAS,OAAO,QAAQ,WAAW;AACxC,gBAAI;AAGJ,gBAAI,KAAK,KAAK;AAGd,gBAAI,IAAI;AACJ,sBAAQ;AAGR,mBAAK,MAAMmB;YACf,OAAO;AACH,sBAAQ,KAAK;YACjB;AAGA,qBAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AAChC,oBAAM,SAAS,CAAC,KAAK,MAAM,CAAC;YAChC;UACJ;AApBS;AAAA,UAAAnB,QAAA,UAAA,UAAA;AAsBT,iBAAOwB;QACX,EAAE;AAKF,YAAI,QAAQ,EAAE,MAAM,CAAC;AAKrB,YAAI,QAAQ,MAAM,QAAQ;;;;;;;;;;;;;UAatB,KAAK,gBAAAxB,QAAA,SAAU,MAAM,WAAW;AAE5B,gBAAI,iBAAiB,YAAY;AAGjC,gBAAI,gBAAgB,iBAAiB,KAAK,WAAW;AAGrD,gBAAI,cAAe,iBAAiB,KAAO,iBAAiB,KAAO,iBAAiB,IAAK;AAGzF,gBAAI,eAAe,CAAC;AACpB,qBAAS,IAAI,GAAG,IAAI,eAAe,KAAK,GAAG;AACvC,2BAAa,KAAK,WAAW;YACjC;AACA,gBAAI,UAAU,UAAU,OAAO,cAAc,aAAa;AAG1D,iBAAK,OAAO,OAAO;UACvB,GAnBK,KAAA;;;;;;;;;;;;UAgCL,OAAO,gBAAAA,QAAA,SAAU,MAAM;AAEnB,gBAAI,gBAAgB,KAAK,MAAO,KAAK,WAAW,MAAO,CAAC,IAAI;AAG5D,iBAAK,YAAY;UACrB,GANO,OAAA;QAOX;AAOA,YAAI,cAAc,MAAM,cAAc,OAAO,OAAO;;;;;;;UAOhD,KAAK,OAAO,IAAI,OAAO;YACnB,MAAM;YACN,SAAS;UACb,CAAC;UAED,OAAO,gBAAAA,QAAA,WAAY;AACf,gBAAI;AAGJ,mBAAO,MAAM,KAAK,IAAI;AAGtB,gBAAI,MAAM,KAAK;AACf,gBAAI,KAAK,IAAI;AACb,gBAAI,OAAO,IAAI;AAGf,gBAAI,KAAK,cAAc,KAAK,iBAAiB;AACzC,4BAAc,KAAK;YACvB,OAA0D;AACtD,4BAAc,KAAK;AAEnB,mBAAK,iBAAiB;YAC1B;AAEA,gBAAI,KAAK,SAAS,KAAK,MAAM,aAAa,aAAa;AACnD,mBAAK,MAAM,KAAK,MAAM,MAAM,GAAG,KAAK;YACxC,OAAO;AACH,mBAAK,QAAQ,YAAY,KAAK,MAAM,MAAM,MAAM,GAAG,KAAK;AACxD,mBAAK,MAAM,YAAY;YAC3B;UACJ,GA1BO,OAAA;UA4BP,iBAAiB,gBAAAA,QAAA,SAAU,OAAO,QAAQ;AACtC,iBAAK,MAAM,aAAa,OAAO,MAAM;UACzC,GAFiB,iBAAA;UAIjB,aAAa,gBAAAA,QAAA,WAAY;AACrB,gBAAI;AAGJ,gBAAI,UAAU,KAAK,IAAI;AAGvB,gBAAI,KAAK,cAAc,KAAK,iBAAiB;AAEzC,sBAAQ,IAAI,KAAK,OAAO,KAAK,SAAS;AAGtC,qCAAuB,KAAK,SAAS,IAAS;YAClD,OAA0D;AAEtD,qCAAuB,KAAK,SAAS,IAAS;AAG9C,sBAAQ,MAAM,oBAAoB;YACtC;AAEA,mBAAO;UACX,GAtBa,aAAA;UAwBb,WAAW,MAAI;QACnB,CAAC;AAeD,YAAI,eAAe,MAAM,eAAe,KAAK,OAAO;;;;;;;;;;;;;;;;;;;;UAoBhD,MAAM,gBAAAA,QAAA,SAAU,cAAc;AAC1B,iBAAK,MAAM,YAAY;UAC3B,GAFM,MAAA;;;;;;;;;;;;;;;;UAmBN,UAAU,gBAAAA,QAAA,SAAU,WAAW;AAC3B,oBAAQ,aAAa,KAAK,WAAW,UAAU,IAAI;UACvD,GAFU,UAAA;QAGd,CAAC;AAKD,YAAI,WAAW,EAAE,SAAS,CAAC;AAK3B,YAAI,mBAAmB,SAAS,UAAU;;;;;;;;;;;;;;UActC,WAAW,gBAAAA,QAAA,SAAU,cAAc;AAC/B,gBAAI;AAGJ,gBAAI,aAAa,aAAa;AAC9B,gBAAI,OAAO,aAAa;AAGxB,gBAAI,MAAM;AACN,0BAAY,UAAU,OAAO,CAAC,YAAY,UAAU,CAAC,EAAE,OAAO,IAAI,EAAE,OAAO,UAAU;YACzF,OAAO;AACH,0BAAY;YAChB;AAEA,mBAAO,UAAU,SAAS,MAAM;UACpC,GAfW,WAAA;;;;;;;;;;;;;;UA8BX,OAAO,gBAAAA,QAAA,SAAU,YAAY;AACzB,gBAAI;AAGJ,gBAAI,aAAa,OAAO,MAAM,UAAU;AAGxC,gBAAI,kBAAkB,WAAW;AAGjC,gBAAI,gBAAgB,CAAC,KAAK,cAAc,gBAAgB,CAAC,KAAK,YAAY;AAEtE,qBAAO,UAAU,OAAO,gBAAgB,MAAM,GAAG,CAAC,CAAC;AAGnD,8BAAgB,OAAO,GAAG,CAAC;AAC3B,yBAAW,YAAY;YAC3B;AAEA,mBAAO,aAAa,OAAO,EAAE,YAAwB,KAAW,CAAC;UACrE,GApBO,OAAA;QAqBX;AAKA,YAAI,qBAAqB,MAAM,qBAAqB,KAAK,OAAO;;;;;;UAM5D,KAAK,KAAK,OAAO;YACb,QAAQ;UACZ,CAAC;;;;;;;;;;;;;;;;;;;UAoBD,SAAS,gBAAAA,QAAA,SAAU,QAAQ,SAAS,KAAK,KAAK;AAE1C,kBAAM,KAAK,IAAI,OAAO,GAAG;AAGzB,gBAAI,YAAY,OAAO,gBAAgB,KAAK,GAAG;AAC/C,gBAAI,aAAa,UAAU,SAAS,OAAO;AAG3C,gBAAI,YAAY,UAAU;AAG1B,mBAAO,aAAa,OAAO;cACvB;cACA;cACA,IAAI,UAAU;cACd,WAAW;cACX,MAAM,UAAU;cAChB,SAAS,UAAU;cACnB,WAAW,OAAO;cAClB,WAAW,IAAI;YACnB,CAAC;UACL,GAtBS,SAAA;;;;;;;;;;;;;;;;;;UAyCT,SAAS,gBAAAA,QAAA,SAAU,QAAQ,YAAY,KAAK,KAAK;AAE7C,kBAAM,KAAK,IAAI,OAAO,GAAG;AAGzB,yBAAa,KAAK,OAAO,YAAY,IAAI,MAAM;AAG/C,gBAAI,YAAY,OAAO,gBAAgB,KAAK,GAAG,EAAE,SAAS,WAAW,UAAU;AAE/E,mBAAO;UACX,GAXS,SAAA;;;;;;;;;;;;;;;;UA4BT,QAAQ,gBAAAA,QAAA,SAAU,YAAY,QAAQ;AAClC,gBAAI,OAAO,cAAc,UAAU;AAC/B,qBAAO,OAAO,MAAM,YAAY,IAAI;YACxC,OAAO;AACH,qBAAO;YACX;UACJ,GANQ,QAAA;QAOZ,CAAC;AAKD,YAAI,QAAQ,EAAE,MAAM,CAAC;AAKrB,YAAI,aAAa,MAAM,UAAU;;;;;;;;;;;;;;;;;;UAkB7B,SAAS,gBAAAA,QAAA,SAAU,UAAU,SAAS,QAAQ,MAAM,QAAQ;AAExD,gBAAI,CAAC,MAAM;AACP,qBAAO,UAAU,OAAO,KAAG,CAAC;YAChC;AAGA,gBAAI,CAAC,QAAQ;AACT,kBAAI,MAAM,OAAO,OAAO,EAAE,SAAS,UAAU,OAAO,CAAC,EAAE,QAAQ,UAAU,IAAI;YACjF,OAAO;AACH,kBAAI,MAAM,OAAO,OAAO,EAAE,SAAS,UAAU,QAAQ,OAAe,CAAC,EAAE,QAAQ,UAAU,IAAI;YACjG;AAIA,gBAAI,KAAK,UAAU,OAAO,IAAI,MAAM,MAAM,OAAO,GAAG,SAAS,CAAC;AAC9D,gBAAI,WAAW,UAAU;AAGzB,mBAAO,aAAa,OAAO,EAAE,KAAU,IAAQ,KAAW,CAAC;UAC/D,GApBS,SAAA;QAqBb;AAMA,YAAI,sBAAsB,MAAM,sBAAsB,mBAAmB,OAAO;;;;;;UAM5E,KAAK,mBAAmB,IAAI,OAAO;YAC/B,KAAK;UACT,CAAC;;;;;;;;;;;;;;;;;;UAmBD,SAAS,gBAAAA,QAAA,SAAU,QAAQ,SAAS,UAAU,KAAK;AAE/C,kBAAM,KAAK,IAAI,OAAO,GAAG;AAGzB,gBAAI,gBAAgB,IAAI,IAAI,QAAQ,UAAU,OAAO,SAAS,OAAO,QAAQ,IAAI,MAAM,IAAI,MAAM;AAGjG,gBAAI,KAAK,cAAc;AAGvB,gBAAI,aAAa,mBAAmB,QAAQ,KAAK,MAAM,QAAQ,SAAS,cAAc,KAAK,GAAG;AAG9F,uBAAW,MAAM,aAAa;AAE9B,mBAAO;UACX,GAjBS,SAAA;;;;;;;;;;;;;;;;;;UAoCT,SAAS,gBAAAA,QAAA,SAAU,QAAQ,YAAY,UAAU,KAAK;AAElD,kBAAM,KAAK,IAAI,OAAO,GAAG;AAGzB,yBAAa,KAAK,OAAO,YAAY,IAAI,MAAM;AAG/C,gBAAI,gBAAgB,IAAI,IAAI,QAAQ,UAAU,OAAO,SAAS,OAAO,QAAQ,WAAW,MAAM,IAAI,MAAM;AAGxG,gBAAI,KAAK,cAAc;AAGvB,gBAAI,YAAY,mBAAmB,QAAQ,KAAK,MAAM,QAAQ,YAAY,cAAc,KAAK,GAAG;AAEhG,mBAAO;UACX,GAjBS,SAAA;QAkBb,CAAC;MACL,EAAE;IAGH,CAAC;EAAA;AAAA,CAAA;AC93BD,IAAA,mBAAA,WAAA;EAAA,wCAAA,SAAA,QAAA;AAAA,4CAAA;AAAA,uBAAA;AAAC,KAAC,SAAU,MAAM,SAAS,OAAO;AACjC,UAAI,OAAO,YAAY,UAAU;AAEhC,eAAO,UAAU,UAAU,QAAQ,aAAA,GAAmB,oBAAA,CAAwB;MAC/E,WACS,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,eAAO,CAAC,UAAU,eAAe,GAAG,OAAO;MAC5C,OACK;AAEJ,gBAAQ,KAAK,QAAQ;MACtB;IACD,GAAE,SAAM,SAAUiB,WAAU;AAK3BA,gBAAS,KAAK,MAAO,WAAY;AAC7B,YAAI,MAAMA,UAAS,IAAI,gBAAgB,OAAO;AAE9C,YAAI,YAAY,IAAI,OAAO;UACvB,cAAc,gBAAAjB,QAAA,SAAU,OAAO,QAAQ;AAEnC,gBAAI,SAAS,KAAK;AAClB,gBAAI,YAAY,OAAO;AAEvB,wCAA4B,KAAK,MAAM,OAAO,QAAQ,WAAW,MAAM;AAGvE,iBAAK,aAAa,MAAM,MAAM,QAAQ,SAAS,SAAS;UAC5D,GATc,cAAA;QAUlB,CAAC;AAED,YAAI,YAAY,IAAI,OAAO;UACvB,cAAc,gBAAAA,QAAA,SAAU,OAAO,QAAQ;AAEnC,gBAAI,SAAS,KAAK;AAClB,gBAAI,YAAY,OAAO;AAGvB,gBAAI,YAAY,MAAM,MAAM,QAAQ,SAAS,SAAS;AAEtD,wCAA4B,KAAK,MAAM,OAAO,QAAQ,WAAW,MAAM;AAGvE,iBAAK,aAAa;UACtB,GAZc,cAAA;QAalB,CAAC;AAED,iBAAS,4BAA4B,OAAO,QAAQ,WAAW,QAAQ;AACnE,cAAI;AAGJ,cAAI,KAAK,KAAK;AAGd,cAAI,IAAI;AACJ,wBAAY,GAAG,MAAM,CAAC;AAGtB,iBAAK,MAAM;UACf,OAAO;AACH,wBAAY,KAAK;UACrB;AACA,iBAAO,aAAa,WAAW,CAAC;AAGhC,mBAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AAChC,kBAAM,SAAS,CAAC,KAAK,UAAU,CAAC;UACpC;QACJ;AArBS;AAAA,QAAAA,QAAA,6BAAA,6BAAA;AAuBT,eAAO;MACX,EAAE;AAGF,aAAOiB,UAAS,KAAK;IAEtB,CAAC;EAAA;AAAA,CAAA;AC/ED,IAAA,mBAAA,WAAA;EAAA,wCAAA,SAAA,QAAA;AAAA,4CAAA;AAAA,uBAAA;AAAC,KAAC,SAAU,MAAM,SAAS,OAAO;AACjC,UAAI,OAAO,YAAY,UAAU;AAEhC,eAAO,UAAU,UAAU,QAAQ,aAAA,GAAmB,oBAAA,CAAwB;MAC/E,WACS,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,eAAO,CAAC,UAAU,eAAe,GAAG,OAAO;MAC5C,OACK;AAEJ,gBAAQ,KAAK,QAAQ;MACtB;IACD,GAAE,SAAM,SAAUA,WAAU;AAK3BA,gBAAS,KAAK,MAAO,WAAY;AAC7B,YAAI,MAAMA,UAAS,IAAI,gBAAgB,OAAO;AAE9C,YAAI,YAAY,IAAI,YAAY,IAAI,OAAO;UACvC,cAAc,gBAAAjB,QAAA,SAAU,OAAO,QAAQ;AAEnC,gBAAI,SAAS,KAAK;AAClB,gBAAI,YAAY,OAAO;AACvB,gBAAI,KAAK,KAAK;AACd,gBAAI,UAAU,KAAK;AAGnB,gBAAI,IAAI;AACJ,wBAAU,KAAK,WAAW,GAAG,MAAM,CAAC;AAGpC,mBAAK,MAAM;YACf;AACA,gBAAI,YAAY,QAAQ,MAAM,CAAC;AAC/B,mBAAO,aAAa,WAAW,CAAC;AAGhC,oBAAQ,YAAY,CAAC,IAAK,QAAQ,YAAY,CAAC,IAAI,IAAK;AAGxD,qBAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AAChC,oBAAM,SAAS,CAAC,KAAK,UAAU,CAAC;YACpC;UACJ,GAxBc,cAAA;QAyBlB,CAAC;AAED,YAAI,YAAY;AAEhB,eAAO;MACX,EAAE;AAGF,aAAOiB,UAAS,KAAK;IAEtB,CAAC;EAAA;AAAA,CAAA;ACzDD,IAAA,2BAAA,WAAA;EAAA,gDAAA,SAAA,QAAA;AAAA,4CAAA;AAAA,uBAAA;AAAC,KAAC,SAAU,MAAM,SAAS,OAAO;AACjC,UAAI,OAAO,YAAY,UAAU;AAEhC,eAAO,UAAU,UAAU,QAAQ,aAAA,GAAmB,oBAAA,CAAwB;MAC/E,WACS,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,eAAO,CAAC,UAAU,eAAe,GAAG,OAAO;MAC5C,OACK;AAEJ,gBAAQ,KAAK,QAAQ;MACtB;IACD,GAAE,SAAM,SAAUA,WAAU;AAO3BA,gBAAS,KAAK,aAAc,WAAY;AACpC,YAAI,aAAaA,UAAS,IAAI,gBAAgB,OAAO;AAExD,iBAAS,QAAQ,MACjB;AACC,eAAM,QAAQ,KAAM,SAAU,KAAM;AACpC,gBAAI,KAAM,QAAQ,KAAI;AACtB,gBAAI,KAAM,QAAQ,IAAG;AACrB,gBAAI,KAAK,OAAO;AAEhB,gBAAI,OAAO,KACX;AACA,mBAAK;AACL,kBAAI,OAAO,KACX;AACC,qBAAK;AACL,oBAAI,OAAO,KACX;AACC,uBAAK;gBACN,OAEA;AACC,oBAAE;gBACH;cACD,OAEA;AACC,kBAAE;cACH;YACA,OAEA;AACA,gBAAE;YACF;AAEA,mBAAO;AACP,oBAAS,MAAM;AACf,oBAAS,MAAM;AACf,oBAAQ;UACR,OAEA;AACA,oBAAS,KAAQ;UACjB;AACA,iBAAO;QACR;AA1CS;AAAA,QAAAjB,QAAA,SAAA,SAAA;AA4CT,iBAAS,WAAW,SACpB;AACC,eAAK,QAAQ,CAAC,IAAI,QAAQ,QAAQ,CAAC,CAAC,OAAO,GAC3C;AAEC,oBAAQ,CAAC,IAAI,QAAQ,QAAQ,CAAC,CAAC;UAChC;AACA,iBAAO;QACR;AARS;AAAA,QAAAA,QAAA,YAAA,YAAA;AAUN,YAAI,YAAY,WAAW,YAAY,WAAW,OAAO;UACrD,cAAc,gBAAAA,QAAA,SAAU,OAAO,QAAQ;AAEnC,gBAAI,SAAS,KAAK;AAClB,gBAAI,YAAY,OAAO;AACvB,gBAAI,KAAK,KAAK;AACd,gBAAI,UAAU,KAAK;AAGnB,gBAAI,IAAI;AACJ,wBAAU,KAAK,WAAW,GAAG,MAAM,CAAC;AAGpC,mBAAK,MAAM;YACf;AAET,uBAAW,OAAO;AAElB,gBAAI,YAAY,QAAQ,MAAM,CAAC;AACtB,mBAAO,aAAa,WAAW,CAAC;AAGhC,qBAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AAChC,oBAAM,SAAS,CAAC,KAAK,UAAU,CAAC;YACpC;UACJ,GAxBc,cAAA;QAyBlB,CAAC;AAED,mBAAW,YAAY;AAEvB,eAAO;MACX,EAAE;AAKF,aAAOiB,UAAS,KAAK;IAEtB,CAAC;EAAA;AAAA,CAAA;ACnHD,IAAA,mBAAA,WAAA;EAAA,wCAAA,SAAA,QAAA;AAAA,4CAAA;AAAA,uBAAA;AAAC,KAAC,SAAU,MAAM,SAAS,OAAO;AACjC,UAAI,OAAO,YAAY,UAAU;AAEhC,eAAO,UAAU,UAAU,QAAQ,aAAA,GAAmB,oBAAA,CAAwB;MAC/E,WACS,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,eAAO,CAAC,UAAU,eAAe,GAAG,OAAO;MAC5C,OACK;AAEJ,gBAAQ,KAAK,QAAQ;MACtB;IACD,GAAE,SAAM,SAAUA,WAAU;AAK3BA,gBAAS,KAAK,MAAO,WAAY;AAC7B,YAAI,MAAMA,UAAS,IAAI,gBAAgB,OAAO;AAE9C,YAAI,YAAY,IAAI,YAAY,IAAI,OAAO;UACvC,cAAc,gBAAAjB,QAAA,SAAU,OAAO,QAAQ;AAEnC,gBAAI,SAAS,KAAK;AAClB,gBAAI,YAAY,OAAO;AACvB,gBAAI,KAAK,KAAK;AACd,gBAAI,YAAY,KAAK;AAGrB,gBAAI,IAAI;AACJ,0BAAY,KAAK,aAAa,GAAG,MAAM,CAAC;AAGxC,mBAAK,MAAM;YACf;AACA,mBAAO,aAAa,WAAW,CAAC;AAGhC,qBAAS,IAAI,GAAG,IAAI,WAAW,KAAK;AAChC,oBAAM,SAAS,CAAC,KAAK,UAAU,CAAC;YACpC;UACJ,GApBc,cAAA;QAqBlB,CAAC;AAED,YAAI,YAAY;AAEhB,eAAO;MACX,EAAE;AAGF,aAAOiB,UAAS,KAAK;IAEtB,CAAC;EAAA;AAAA,CAAA;ACrDD,IAAA,mBAAA,WAAA;EAAA,wCAAA,SAAA,QAAA;AAAA,4CAAA;AAAA,uBAAA;AAAC,KAAC,SAAU,MAAM,SAAS,OAAO;AACjC,UAAI,OAAO,YAAY,UAAU;AAEhC,eAAO,UAAU,UAAU,QAAQ,aAAA,GAAmB,oBAAA,CAAwB;MAC/E,WACS,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,eAAO,CAAC,UAAU,eAAe,GAAG,OAAO;MAC5C,OACK;AAEJ,gBAAQ,KAAK,QAAQ;MACtB;IACD,GAAE,SAAM,SAAUA,WAAU;AAK3BA,gBAAS,KAAK,MAAO,WAAY;AAC7B,YAAI,MAAMA,UAAS,IAAI,gBAAgB,OAAO;AAE9C,YAAI,YAAY,IAAI,OAAO;UACvB,cAAc,gBAAAjB,QAAA,SAAU,OAAO,QAAQ;AACnC,iBAAK,QAAQ,aAAa,OAAO,MAAM;UAC3C,GAFc,cAAA;QAGlB,CAAC;AAED,YAAI,YAAY,IAAI,OAAO;UACvB,cAAc,gBAAAA,QAAA,SAAU,OAAO,QAAQ;AACnC,iBAAK,QAAQ,aAAa,OAAO,MAAM;UAC3C,GAFc,cAAA;QAGlB,CAAC;AAED,eAAO;MACX,EAAE;AAGF,aAAOiB,UAAS,KAAK;IAEtB,CAAC;EAAA;AAAA,CAAA;ACvCD,IAAA,uBAAA,WAAA;EAAA,4CAAA,SAAA,QAAA;AAAA,4CAAA;AAAA,uBAAA;AAAC,KAAC,SAAU,MAAM,SAAS,OAAO;AACjC,UAAI,OAAO,YAAY,UAAU;AAEhC,eAAO,UAAU,UAAU,QAAQ,aAAA,GAAmB,oBAAA,CAAwB;MAC/E,WACS,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,eAAO,CAAC,UAAU,eAAe,GAAG,OAAO;MAC5C,OACK;AAEJ,gBAAQ,KAAK,QAAQ;MACtB;IACD,GAAE,SAAM,SAAUA,WAAU;AAK3BA,gBAAS,IAAI,WAAW;QACpB,KAAK,gBAAAjB,QAAA,SAAU,MAAM,WAAW;AAE5B,cAAI,eAAe,KAAK;AACxB,cAAI,iBAAiB,YAAY;AAGjC,cAAI,gBAAgB,iBAAiB,eAAe;AAGpD,cAAI,cAAc,eAAe,gBAAgB;AAGjD,eAAK,MAAM;AACX,eAAK,MAAM,gBAAgB,CAAC,KAAK,iBAAkB,KAAM,cAAc,IAAK;AAC5E,eAAK,YAAY;QACrB,GAfK,KAAA;QAiBL,OAAO,gBAAAA,QAAA,SAAU,MAAM;AAEnB,cAAI,gBAAgB,KAAK,MAAO,KAAK,WAAW,MAAO,CAAC,IAAI;AAG5D,eAAK,YAAY;QACrB,GANO,OAAA;MAOX;AAGA,aAAOiB,UAAS,IAAI;IAErB,CAAC;EAAA;AAAA,CAAA;AChDD,IAAA,uBAAA,WAAA;EAAA,4CAAA,SAAA,QAAA;AAAA,4CAAA;AAAA,uBAAA;AAAC,KAAC,SAAU,MAAM,SAAS,OAAO;AACjC,UAAI,OAAO,YAAY,UAAU;AAEhC,eAAO,UAAU,UAAU,QAAQ,aAAA,GAAmB,oBAAA,CAAwB;MAC/E,WACS,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,eAAO,CAAC,UAAU,eAAe,GAAG,OAAO;MAC5C,OACK;AAEJ,gBAAQ,KAAK,QAAQ;MACtB;IACD,GAAE,SAAM,SAAUA,WAAU;AAK3BA,gBAAS,IAAI,WAAW;QACpB,KAAK,gBAAAjB,QAAA,SAAU,MAAM,WAAW;AAE5B,cAAI,iBAAiB,YAAY;AAGjC,cAAI,gBAAgB,iBAAiB,KAAK,WAAW;AAGrD,eAAK,OAAOiB,UAAS,IAAI,UAAU,OAAO,gBAAgB,CAAC,CAAC,EACvD,OAAOA,UAAS,IAAI,UAAU,OAAO,CAAC,iBAAiB,EAAE,GAAG,CAAC,CAAC;QACvE,GAVK,KAAA;QAYL,OAAO,gBAAAjB,QAAA,SAAU,MAAM;AAEnB,cAAI,gBAAgB,KAAK,MAAO,KAAK,WAAW,MAAO,CAAC,IAAI;AAG5D,eAAK,YAAY;QACrB,GANO,OAAA;MAOX;AAGA,aAAOiB,UAAS,IAAI;IAErB,CAAC;EAAA;AAAA,CAAA;AC3CD,IAAA,uBAAA,WAAA;EAAA,4CAAA,SAAA,QAAA;AAAA,4CAAA;AAAA,uBAAA;AAAC,KAAC,SAAU,MAAM,SAAS,OAAO;AACjC,UAAI,OAAO,YAAY,UAAU;AAEhC,eAAO,UAAU,UAAU,QAAQ,aAAA,GAAmB,oBAAA,CAAwB;MAC/E,WACS,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,eAAO,CAAC,UAAU,eAAe,GAAG,OAAO;MAC5C,OACK;AAEJ,gBAAQ,KAAK,QAAQ;MACtB;IACD,GAAE,SAAM,SAAUA,WAAU;AAK3BA,gBAAS,IAAI,WAAW;QACpB,KAAK,gBAAAjB,QAAA,SAAU,MAAM,WAAW;AAE5B,eAAK,OAAOiB,UAAS,IAAI,UAAU,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC;AAG1DA,oBAAS,IAAI,YAAY,IAAI,MAAM,SAAS;QAChD,GANK,KAAA;QAQL,OAAO,gBAAAjB,QAAA,SAAU,MAAM;AAEnBiB,oBAAS,IAAI,YAAY,MAAM,IAAI;AAGnC,eAAK;QACT,GANO,OAAA;MAOX;AAGA,aAAOA,UAAS,IAAI;IAErB,CAAC;EAAA;AAAA,CAAA;ACvCD,IAAA,0BAAA,WAAA;EAAA,+CAAA,SAAA,QAAA;AAAA,4CAAA;AAAA,uBAAA;AAAC,KAAC,SAAU,MAAM,SAAS,OAAO;AACjC,UAAI,OAAO,YAAY,UAAU;AAEhC,eAAO,UAAU,UAAU,QAAQ,aAAA,GAAmB,oBAAA,CAAwB;MAC/E,WACS,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,eAAO,CAAC,UAAU,eAAe,GAAG,OAAO;MAC5C,OACK;AAEJ,gBAAQ,KAAK,QAAQ;MACtB;IACD,GAAE,SAAM,SAAUA,WAAU;AAK3BA,gBAAS,IAAI,cAAc;QACvB,KAAK,gBAAAjB,QAAA,SAAU,MAAM,WAAW;AAE5B,cAAI,iBAAiB,YAAY;AAGjC,eAAK,MAAM;AACX,eAAK,YAAY,kBAAmB,KAAK,WAAW,kBAAmB;QAC3E,GAPK,KAAA;QASL,OAAO,gBAAAA,QAAA,SAAU,MAAM;AAEnB,cAAI,YAAY,KAAK;AAGrB,cAAI,IAAI,KAAK,WAAW;AACxB,mBAAS,IAAI,KAAK,WAAW,GAAG,KAAK,GAAG,KAAK;AACzC,gBAAM,UAAU,MAAM,CAAC,MAAO,KAAM,IAAI,IAAK,IAAM,KAAO;AACtD,mBAAK,WAAW,IAAI;AACpB;YACJ;UACJ;QACJ,GAZO,OAAA;MAaX;AAGA,aAAOiB,UAAS,IAAI;IAErB,CAAC;EAAA;AAAA,CAAA;AC9CD,IAAA,wBAAA,WAAA;EAAA,6CAAA,SAAA,QAAA;AAAA,4CAAA;AAAA,uBAAA;AAAC,KAAC,SAAU,MAAM,SAAS,OAAO;AACjC,UAAI,OAAO,YAAY,UAAU;AAEhC,eAAO,UAAU,UAAU,QAAQ,aAAA,GAAmB,oBAAA,CAAwB;MAC/E,WACS,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,eAAO,CAAC,UAAU,eAAe,GAAG,OAAO;MAC5C,OACK;AAEJ,gBAAQ,KAAK,QAAQ;MACtB;IACD,GAAE,SAAM,SAAUA,WAAU;AAK3BA,gBAAS,IAAI,YAAY;QACrB,KAAK,gBAAAjB,QAAA,WAAY;QACjB,GADK,KAAA;QAGL,OAAO,gBAAAA,QAAA,WAAY;QACnB,GADO,OAAA;MAEX;AAGA,aAAOiB,UAAS,IAAI;IAErB,CAAC;EAAA;AAAA,CAAA;AC7BD,IAAA,qBAAA,WAAA;EAAA,0CAAA,SAAA,QAAA;AAAA,4CAAA;AAAA,uBAAA;AAAC,KAAC,SAAU,MAAM,SAAS,OAAO;AACjC,UAAI,OAAO,YAAY,UAAU;AAEhC,eAAO,UAAU,UAAU,QAAQ,aAAA,GAAmB,oBAAA,CAAwB;MAC/E,WACS,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,eAAO,CAAC,UAAU,eAAe,GAAG,OAAO;MAC5C,OACK;AAEJ,gBAAQ,KAAK,QAAQ;MACtB;IACD,GAAE,SAAM,SAAUA,WAAU;AAE3B,OAAC,SAAUE,YAAW;AAElB,YAAI,IAAIF;AACR,YAAI,QAAQ,EAAE;AACd,YAAI,eAAe,MAAM;AACzB,YAAI,QAAQ,EAAE;AACd,YAAI,MAAM,MAAM;AAChB,YAAI,WAAW,EAAE;AAEjB,YAAI,eAAe,SAAS,MAAM;;;;;;;;;;;;;;UAc9B,WAAW,gBAAAjB,QAAA,SAAU,cAAc;AAC/B,mBAAO,aAAa,WAAW,SAAS,GAAG;UAC/C,GAFW,WAAA;;;;;;;;;;;;;;UAiBX,OAAO,gBAAAA,QAAA,SAAU,OAAO;AACpB,gBAAI,aAAa,IAAI,MAAM,KAAK;AAChC,mBAAO,aAAa,OAAO,EAAE,WAAuB,CAAC;UACzD,GAHO,OAAA;QAIX;MACJ,GAAE;AAGF,aAAOiB,UAAS,OAAO;IAExB,CAAC;EAAA;AAAA,CAAA;ACjED,IAAA,cAAA,WAAA;EAAA,mCAAA,SAAA,QAAA;AAAA,4CAAA;AAAA,uBAAA;AAAC,KAAC,SAAU,MAAM,SAAS,OAAO;AACjC,UAAI,OAAO,YAAY,UAAU;AAEhC,eAAO,UAAU,UAAU,QAAQ,aAAA,GAAmB,mBAAA,GAAyB,YAAA,GAAkB,eAAA,GAAqB,oBAAA,CAAwB;MAC/I,WACS,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,eAAO,CAAC,UAAU,gBAAgB,SAAS,YAAY,eAAe,GAAG,OAAO;MACjF,OACK;AAEJ,gBAAQ,KAAK,QAAQ;MACtB;IACD,GAAE,SAAM,SAAUA,WAAU;AAE3B,OAAC,WAAY;AAET,YAAI,IAAIA;AACR,YAAI,QAAQ,EAAE;AACd,YAAI,cAAc,MAAM;AACxB,YAAI,SAAS,EAAE;AAGf,YAAI,OAAO,CAAC;AACZ,YAAI,WAAW,CAAC;AAChB,YAAI,YAAY,CAAC;AACjB,YAAI,YAAY,CAAC;AACjB,YAAI,YAAY,CAAC;AACjB,YAAI,YAAY,CAAC;AACjB,YAAI,gBAAgB,CAAC;AACrB,YAAI,gBAAgB,CAAC;AACrB,YAAI,gBAAgB,CAAC;AACrB,YAAI,gBAAgB,CAAC;AAGrB,SAAC,WAAY;AAET,cAAI,IAAI,CAAC;AACT,mBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC1B,gBAAI,IAAI,KAAK;AACT,gBAAE,CAAC,IAAI,KAAK;YAChB,OAAO;AACH,gBAAE,CAAC,IAAK,KAAK,IAAK;YACtB;UACJ;AAGA,cAAI,IAAI;AACR,cAAI,KAAK;AACT,mBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAE1B,gBAAI,KAAK,KAAM,MAAM,IAAM,MAAM,IAAM,MAAM,IAAM,MAAM;AACzD,iBAAM,OAAO,IAAM,KAAK,MAAQ;AAChC,iBAAK,CAAC,IAAI;AACV,qBAAS,EAAE,IAAI;AAGf,gBAAI,KAAK,EAAE,CAAC;AACZ,gBAAI,KAAK,EAAE,EAAE;AACb,gBAAI,KAAK,EAAE,EAAE;AAGb,gBAAI,IAAK,EAAE,EAAE,IAAI,MAAU,KAAK;AAChC,sBAAU,CAAC,IAAK,KAAK,KAAO,MAAM;AAClC,sBAAU,CAAC,IAAK,KAAK,KAAO,MAAM;AAClC,sBAAU,CAAC,IAAK,KAAK,IAAO,MAAM;AAClC,sBAAU,CAAC,IAAI;AAGf,gBAAI,IAAK,KAAK,WAAc,KAAK,QAAY,KAAK,MAAU,IAAI;AAChE,0BAAc,EAAE,IAAK,KAAK,KAAO,MAAM;AACvC,0BAAc,EAAE,IAAK,KAAK,KAAO,MAAM;AACvC,0BAAc,EAAE,IAAK,KAAK,IAAO,MAAM;AACvC,0BAAc,EAAE,IAAI;AAGpB,gBAAI,CAAC,GAAG;AACJ,kBAAI,KAAK;YACb,OAAO;AACH,kBAAI,KAAK,EAAE,EAAE,EAAE,KAAK,EAAE,CAAC,CAAC;AACxB,oBAAM,EAAE,EAAE,EAAE,CAAC;YACjB;UACJ;QACJ,GAAE;AAGF,YAAI,OAAO,CAAC,GAAM,GAAM,GAAM,GAAM,GAAM,IAAM,IAAM,IAAM,KAAM,IAAM,EAAI;AAK5E,YAAI,MAAM,OAAO,MAAM,YAAY,OAAO;UACtC,UAAU,gBAAAjB,QAAA,WAAY;AAClB,gBAAI;AAGJ,gBAAI,KAAK,YAAY,KAAK,mBAAmB,KAAK,MAAM;AACpD;YACJ;AAGA,gBAAI,MAAM,KAAK,iBAAiB,KAAK;AACrC,gBAAI,WAAW,IAAI;AACnB,gBAAI,UAAU,IAAI,WAAW;AAG7B,gBAAI,UAAU,KAAK,WAAW,UAAU;AAGxC,gBAAI,UAAU,UAAU,KAAK;AAG7B,gBAAI,cAAc,KAAK,eAAe,CAAC;AACvC,qBAAS,QAAQ,GAAG,QAAQ,QAAQ,SAAS;AACzC,kBAAI,QAAQ,SAAS;AACjB,4BAAY,KAAK,IAAI,SAAS,KAAK;cACvC,OAAO;AACH,oBAAI,YAAY,QAAQ,CAAC;AAEzB,oBAAI,EAAE,QAAQ,UAAU;AAEpB,sBAAK,KAAK,IAAM,MAAM;AAGtB,sBAAK,KAAK,MAAM,EAAE,KAAK,KAAO,KAAM,MAAM,KAAM,GAAI,KAAK,KAAO,KAAM,MAAM,IAAK,GAAI,KAAK,IAAK,KAAK,IAAI,GAAI;AAG5G,uBAAK,KAAM,QAAQ,UAAW,CAAC,KAAK;gBACxC,WAAW,UAAU,KAAK,QAAQ,WAAW,GAAG;AAE5C,sBAAK,KAAK,MAAM,EAAE,KAAK,KAAO,KAAM,MAAM,KAAM,GAAI,KAAK,KAAO,KAAM,MAAM,IAAK,GAAI,KAAK,IAAK,KAAK,IAAI,GAAI;gBAChH;AAEA,4BAAY,KAAK,IAAI,YAAY,QAAQ,OAAO,IAAI;cACxD;YACJ;AAGA,gBAAI,iBAAiB,KAAK,kBAAkB,CAAC;AAC7C,qBAAS,WAAW,GAAG,WAAW,QAAQ,YAAY;AAClD,kBAAI,QAAQ,SAAS;AAErB,kBAAI,WAAW,GAAG;AACd,oBAAI,IAAI,YAAY,KAAK;cAC7B,OAAO;AACH,oBAAI,IAAI,YAAY,QAAQ,CAAC;cACjC;AAEA,kBAAI,WAAW,KAAK,SAAS,GAAG;AAC5B,+BAAe,QAAQ,IAAI;cAC/B,OAAO;AACH,+BAAe,QAAQ,IAAI,cAAc,KAAK,MAAM,EAAE,CAAC,IAAI,cAAc,KAAM,MAAM,KAAM,GAAI,CAAC,IACrE,cAAc,KAAM,MAAM,IAAK,GAAI,CAAC,IAAI,cAAc,KAAK,IAAI,GAAI,CAAC;cACnG;YACJ;UACJ,GA/DU,UAAA;UAiEV,cAAc,gBAAAA,QAAA,SAAU,GAAG,QAAQ;AAC/B,iBAAK,cAAc,GAAG,QAAQ,KAAK,cAAc,WAAW,WAAW,WAAW,WAAW,IAAI;UACrG,GAFc,cAAA;UAId,cAAc,gBAAAA,QAAA,SAAU,GAAG,QAAQ;AAE/B,gBAAI,IAAI,EAAE,SAAS,CAAC;AACpB,cAAE,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC;AAC5B,cAAE,SAAS,CAAC,IAAI;AAEhB,iBAAK,cAAc,GAAG,QAAQ,KAAK,iBAAiB,eAAe,eAAe,eAAe,eAAe,QAAQ;AAGxH,gBAAI,IAAI,EAAE,SAAS,CAAC;AACpB,cAAE,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC;AAC5B,cAAE,SAAS,CAAC,IAAI;UACpB,GAZc,cAAA;UAcd,eAAe,gBAAAA,QAAA,SAAU,GAAG,QAAQ,aAAayB,YAAWC,YAAWC,YAAWC,YAAWC,OAAM;AAE/F,gBAAI,UAAU,KAAK;AAGnB,gBAAI,KAAK,EAAE,MAAM,IAAQ,YAAY,CAAC;AACtC,gBAAI,KAAK,EAAE,SAAS,CAAC,IAAI,YAAY,CAAC;AACtC,gBAAI,KAAK,EAAE,SAAS,CAAC,IAAI,YAAY,CAAC;AACtC,gBAAI,KAAK,EAAE,SAAS,CAAC,IAAI,YAAY,CAAC;AAGtC,gBAAI,QAAQ;AAGZ,qBAAS,QAAQ,GAAG,QAAQ,SAAS,SAAS;AAE1C,kBAAI,KAAKJ,WAAU,OAAO,EAAE,IAAIC,WAAW,OAAO,KAAM,GAAI,IAAIC,WAAW,OAAO,IAAK,GAAI,IAAIC,WAAU,KAAK,GAAI,IAAI,YAAY,OAAO;AACzI,kBAAI,KAAKH,WAAU,OAAO,EAAE,IAAIC,WAAW,OAAO,KAAM,GAAI,IAAIC,WAAW,OAAO,IAAK,GAAI,IAAIC,WAAU,KAAK,GAAI,IAAI,YAAY,OAAO;AACzI,kBAAI,KAAKH,WAAU,OAAO,EAAE,IAAIC,WAAW,OAAO,KAAM,GAAI,IAAIC,WAAW,OAAO,IAAK,GAAI,IAAIC,WAAU,KAAK,GAAI,IAAI,YAAY,OAAO;AACzI,kBAAI,KAAKH,WAAU,OAAO,EAAE,IAAIC,WAAW,OAAO,KAAM,GAAI,IAAIC,WAAW,OAAO,IAAK,GAAI,IAAIC,WAAU,KAAK,GAAI,IAAI,YAAY,OAAO;AAGzI,mBAAK;AACL,mBAAK;AACL,mBAAK;AACL,mBAAK;YACT;AAGA,gBAAI,MAAOC,MAAK,OAAO,EAAE,KAAK,KAAOA,MAAM,OAAO,KAAM,GAAI,KAAK,KAAOA,MAAM,OAAO,IAAK,GAAI,KAAK,IAAKA,MAAK,KAAK,GAAI,KAAK,YAAY,OAAO;AAC9I,gBAAI,MAAOA,MAAK,OAAO,EAAE,KAAK,KAAOA,MAAM,OAAO,KAAM,GAAI,KAAK,KAAOA,MAAM,OAAO,IAAK,GAAI,KAAK,IAAKA,MAAK,KAAK,GAAI,KAAK,YAAY,OAAO;AAC9I,gBAAI,MAAOA,MAAK,OAAO,EAAE,KAAK,KAAOA,MAAM,OAAO,KAAM,GAAI,KAAK,KAAOA,MAAM,OAAO,IAAK,GAAI,KAAK,IAAKA,MAAK,KAAK,GAAI,KAAK,YAAY,OAAO;AAC9I,gBAAI,MAAOA,MAAK,OAAO,EAAE,KAAK,KAAOA,MAAM,OAAO,KAAM,GAAI,KAAK,KAAOA,MAAM,OAAO,IAAK,GAAI,KAAK,IAAKA,MAAK,KAAK,GAAI,KAAK,YAAY,OAAO;AAG9I,cAAE,MAAM,IAAQ;AAChB,cAAE,SAAS,CAAC,IAAI;AAChB,cAAE,SAAS,CAAC,IAAI;AAChB,cAAE,SAAS,CAAC,IAAI;UACpB,GAvCe,eAAA;UAyCf,SAAS,MAAI;QACjB,CAAC;AAUD,UAAE,MAAM,YAAY,cAAc,GAAG;MACzC,GAAE;AAGF,aAAOZ,UAAS;IAEjB,CAAC;EAAA;AAAA,CAAA;ACzOD,IAAA,oBAAA,WAAA;EAAA,yCAAA,SAAA,QAAA;AAAA,4CAAA;AAAA,uBAAA;AAAC,KAAC,SAAU,MAAM,SAAS,OAAO;AACjC,UAAI,OAAO,YAAY,UAAU;AAEhC,eAAO,UAAU,UAAU,QAAQ,aAAA,GAAmB,mBAAA,GAAyB,YAAA,GAAkB,eAAA,GAAqB,oBAAA,CAAwB;MAC/I,WACS,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,eAAO,CAAC,UAAU,gBAAgB,SAAS,YAAY,eAAe,GAAG,OAAO;MACjF,OACK;AAEJ,gBAAQ,KAAK,QAAQ;MACtB;IACD,GAAE,SAAM,SAAUA,WAAU;AAE3B,OAAC,WAAY;AAET,YAAI,IAAIA;AACR,YAAI,QAAQ,EAAE;AACd,YAAI,YAAY,MAAM;AACtB,YAAI,cAAc,MAAM;AACxB,YAAI,SAAS,EAAE;AAGf,YAAI,MAAM;UACN;UAAI;UAAI;UAAI;UAAI;UAAI;UAAI;UAAI;UAC5B;UAAI;UAAI;UAAI;UAAI;UAAI;UAAI;UAAI;UAC5B;UAAI;UAAI;UAAI;UAAI;UAAI;UAAI;UAAI;UAC5B;UAAI;UAAI;UAAI;UAAI;UAAI;UAAI;UAAI;UAC5B;UAAI;UAAI;UAAI;UAAI;UAAI;UAAI;UAAI;UAC5B;UAAI;UAAI;UAAI;UAAI;UAAI;UAAI;UAAI;UAC5B;UAAI;UAAI;UAAI;UAAI;UAAI;UAAI;UAAI;QAChC;AAGA,YAAI,MAAM;UACN;UAAI;UAAI;UAAI;UAAI;UAAI;UACpB;UAAI;UAAI;UAAI;UAAI;UAAI;UACpB;UAAI;UAAI;UAAI;UAAI;UAAI;UACpB;UAAI;UAAI;UAAI;UAAI;UAAI;UACpB;UAAI;UAAI;UAAI;UAAI;UAAI;UACpB;UAAI;UAAI;UAAI;UAAI;UAAI;UACpB;UAAI;UAAI;UAAI;UAAI;UAAI;UACpB;UAAI;UAAI;UAAI;UAAI;UAAI;QACxB;AAGA,YAAI,aAAa,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE;AAGhF,YAAI,SAAS;UACT;YACI,GAAK;YACL,WAAY;YACZ,WAAY;YACZ,WAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,WAAW;YACX,WAAY;YACZ,WAAY;YACZ,WAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,GAAK;YACL,WAAY;YACZ,WAAY;YACZ,WAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,WAAW;YACX,WAAY;YACZ,WAAY;YACZ,WAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;UAChB;UACA;YACI,GAAK;YACL,UAAW;YACX,UAAW;YACX,UAAW;YACX,UAAW;YACX,UAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,SAAU;YACV,UAAW;YACX,UAAW;YACX,UAAW;YACX,UAAW;YACX,UAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAW;YACX,WAAY;YACZ,WAAY;YACZ,WAAY;YACZ,WAAY;YACZ,WAAY;YACZ,WAAY;YACZ,WAAY;YACZ,WAAY;YACZ,WAAY;YACZ,WAAY;YACZ,WAAY;YACZ,WAAY;YACZ,WAAY;YACZ,WAAY;YACZ,WAAY;YACZ,WAAY;YACZ,WAAY;YACZ,WAAY;YACZ,WAAY;YACZ,WAAY;YACZ,WAAY;YACZ,WAAY;YACZ,WAAY;YACZ,WAAY;YACZ,WAAY;YACZ,WAAY;YACZ,WAAY;YACZ,WAAY;YACZ,WAAY;YACZ,WAAY;YACZ,WAAY;YACZ,WAAY;UAChfd;UACA;YACI,GAAK;YACL,MAAQ;YACR,MAAQ;YACR,OAAQ;YACR,OAAQ;YACR,OAAQ;YACR,OAAQ;YACR,OAAQ;YACR,OAAQ;YACR,OAAQ;YACR,OAAQ;YACR,OAAQ;YACR,OAAQ;YACR,OAAQ;YACR,OAAQ;YACR,OAAQ;YACR,MAAO;YACP,MAAQ;YACR,OAAQ;YACR,OAAQ;YACR,OAAQ;YACR,OAAQ;YACR,OAAQ;YACR,OAAQ;YACR,OAAQ;YACR,OAAQ;YACR,OAAQ;YACR,OAAQ;YACR,OAAQ;YACR,OAAQ;YACR,OAAQ;YACR,OAAQ;YACR,OAAS;YACT,OAAS;YACT,OAAS;YACT,OAAS;YACT,OAAS;YACT,OAAS;YACT,OAAS;YACT,OAAS;YACT,OAAS;YACT,QAAS;YACT,QAAS;YACT,QAAS;YACT,QAAS;YACT,QAAS;YACT,QAAS;YACT,QAAS;YACT,OAAS;YACT,OAAS;YACT,OAAS;YACT,OAAS;YACT,OAAS;YACT,OAAS;YACT,OAAS;YACT,OAAS;YACT,QAAS;YACT,QAAS;YACT,QAAS;YACT,QAAS;YACT,QAAS;YACT,QAAS;YACT,QAAS;YACT,QAAS;UACb;UACA;YACI,GAAK;YACL,KAAO;YACP,KAAO;YACP,KAAO;YACP,MAAO;YACP,MAAO;YACP,MAAO;YACP,MAAO;YACP,MAAO;YACP,MAAO;YACP,MAAO;YACP,MAAO;YACP,MAAO;YACP,MAAO;YACP,MAAO;YACP,MAAO;YACP,KAAM;YACN,KAAO;YACP,KAAO;YACP,KAAO;YACP,MAAO;YACP,MAAO;YACP,MAAO;YACP,MAAO;YACP,MAAO;YACP,MAAO;YACP,MAAO;YACP,MAAO;YACP,MAAO;YACP,MAAO;YACP,MAAO;YACP,MAAO;YACP,MAAQ;YACR,MAAQ;YACR,MAAQ;YACR,MAAQ;YACR,MAAQ;YACR,MAAQ;YACR,MAAQ;YACR,MAAQ;YACR,MAAQ;YACR,MAAQ;YACR,MAAQ;YACR,MAAQ;YACR,MAAQ;YACR,MAAQ;YACR,MAAQ;YACR,MAAQ;YACR,MAAQ;YACR,MAAQ;YACR,MAAQ;YACR,MAAQ;YACR,MAAQ;YACR,MAAQ;YACR,MAAQ;YACR,MAAQ;YACR,MAAQ;YACR,MAAQ;YACR,MAAQ;YACR,MAAQ;YACR,MAAQ;YACR,MAAQ;YACR,MAAQ;YACR,MAAQ;UACZ;UACA;YACI,GAAK;YACL,IAAM;YACN,IAAM;YACN,IAAM;YACN,IAAM;YACN,IAAM;YACN,IAAM;YACN,KAAM;YACN,KAAM;YACN,KAAM;YACN,KAAM;YACN,KAAM;YACN,KAAM;YACN,KAAM;YACN,KAAM;YACN,KAAM;YACN,GAAK;YACL,IAAM;YACN,IAAM;YACN,IAAM;YACN,IAAM;YACN,IAAM;YACN,KAAM;YACN,KAAM;YACN,KAAM;YACN,KAAM;YACN,KAAM;YACN,KAAM;YACN,KAAM;YACN,KAAM;YACN,KAAM;YACN,KAAM;YACN,KAAO;YACP,KAAO;YACP,KAAO;YACP,KAAO;YACP,KAAO;YACP,KAAO;YACP,KAAO;YACP,KAAO;YACP,KAAO;YACP,KAAO;YACP,KAAO;YACP,KAAO;YACP,KAAO;YACP,KAAO;YACP,KAAO;YACP,KAAO;YACP,KAAO;YACP,KAAO;YACP,KAAO;YACP,KAAO;YACP,KAAO;YACP,KAAO;YACP,KAAO;YACP,KAAO;YACP,KAAO;YACP,KAAO;YACP,KAAO;YACP,KAAO;YACP,KAAO;YACP,KAAO;YACP,KAAO;YACP,KAAO;UACX;UACA;YACI,GAAK;YACL,GAAK;YACL,GAAK;YACL,GAAK;YACL,GAAK;YACL,GAAK;YACL,GAAK;YACL,GAAK;YACL,GAAK;YACL,GAAK;YACL,IAAK;YACL,IAAK;YACL,IAAK;YACL,IAAK;YACL,IAAK;YACL,IAAK;YACL,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,IAAM;YACN,IAAM;YACN,IAAM;YACN,IAAM;YACN,IAAM;YACN,IAAM;YACN,IAAM;YACN,IAAM;YACN,IAAM;YACN,IAAM;YACN,IAAM;YACN,IAAM;YACN,IAAM;YACN,IAAM;YACN,IAAM;YACN,IAAM;YACN,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;YACZ,YAAY;UAChB;QACJ;AAGA,YAAI,YAAY;UACZ;UAAY;UAAY;UAAY;UACpC;UAAY;UAAY;UAAY;QACxC;AAKA,YAAI,MAAM,OAAO,MAAM,YAAY,OAAO;UACtC,UAAU,gBAAAjB,QAAA,WAAY;AAElB,gBAAI,MAAM,KAAK;AACf,gBAAI,WAAW,IAAI;AAGnB,gBAAI,UAAU,CAAC;AACf,qBAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AACzB,kBAAI,YAAY,IAAI,CAAC,IAAI;AACzB,sBAAQ,CAAC,IAAK,SAAS,cAAc,CAAC,MAAO,KAAK,YAAY,KAAO;YACzE;AAGA,gBAAI,UAAU,KAAK,WAAW,CAAC;AAC/B,qBAAS,UAAU,GAAG,UAAU,IAAI,WAAW;AAE3C,kBAAI,SAAS,QAAQ,OAAO,IAAI,CAAC;AAGjC,kBAAI,WAAW,WAAW,OAAO;AAGjC,uBAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AAEzB,uBAAQ,IAAI,IAAK,CAAC,KAAK,SAAU,IAAI,CAAC,IAAI,IAAK,YAAY,EAAE,KAAM,KAAK,IAAI;AAG5E,uBAAO,KAAM,IAAI,IAAK,EAAE,KAAK,QAAQ,MAAQ,IAAI,IAAI,EAAE,IAAI,IAAK,YAAY,EAAG,KAAM,KAAK,IAAI;cAClG;AAKA,qBAAO,CAAC,IAAK,OAAO,CAAC,KAAK,IAAM,OAAO,CAAC,MAAM;AAC9C,uBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,uBAAO,CAAC,IAAI,OAAO,CAAC,OAAQ,IAAI,KAAK,IAAI;cAC7C;AACA,qBAAO,CAAC,IAAK,OAAO,CAAC,KAAK,IAAM,OAAO,CAAC,MAAM;YAClD;AAGA,gBAAI,aAAa,KAAK,cAAc,CAAC;AACrC,qBAAS,IAAI,GAAG,IAAI,IAAI,KAAK;AACzB,yBAAW,CAAC,IAAI,QAAQ,KAAK,CAAC;YAClC;UACJ,GA7CU,UAAA;UA+CV,cAAc,gBAAAA,QAAA,SAAU,GAAG,QAAQ;AAC/B,iBAAK,cAAc,GAAG,QAAQ,KAAK,QAAQ;UAC/C,GAFc,cAAA;UAId,cAAc,gBAAAA,QAAA,SAAU,GAAG,QAAQ;AAC/B,iBAAK,cAAc,GAAG,QAAQ,KAAK,WAAW;UAClD,GAFc,cAAA;UAId,eAAe,gBAAAA,QAAA,SAAU,GAAG,QAAQ,SAAS;AAEzC,iBAAK,UAAU,EAAE,MAAM;AACvB,iBAAK,UAAU,EAAE,SAAS,CAAC;AAG3B,uBAAW,KAAK,MAAM,GAAI,SAAU;AACpC,uBAAW,KAAK,MAAM,IAAI,KAAU;AACpC,uBAAW,KAAK,MAAM,GAAI,SAAU;AACpC,uBAAW,KAAK,MAAM,GAAI,QAAU;AACpC,uBAAW,KAAK,MAAM,GAAI,UAAU;AAGpC,qBAAS,QAAQ,GAAG,QAAQ,IAAI,SAAS;AAErC,kBAAI,SAAS,QAAQ,KAAK;AAC1B,kBAAI,SAAS,KAAK;AAClB,kBAAI,SAAS,KAAK;AAGlB,kBAAI,IAAI;AACR,uBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,qBAAK,OAAO,CAAC,IAAI,SAAS,OAAO,CAAC,KAAK,UAAU,CAAC,OAAO,CAAC;cAC9D;AACA,mBAAK,UAAU;AACf,mBAAK,UAAU,SAAS;YAC5B;AAGA,gBAAI,IAAI,KAAK;AACb,iBAAK,UAAU,KAAK;AACpB,iBAAK,UAAU;AAGf,uBAAW,KAAK,MAAM,GAAI,UAAU;AACpC,uBAAW,KAAK,MAAM,GAAI,QAAU;AACpC,uBAAW,KAAK,MAAM,GAAI,SAAU;AACpC,uBAAW,KAAK,MAAM,IAAI,KAAU;AACpC,uBAAW,KAAK,MAAM,GAAI,SAAU;AAGpC,cAAE,MAAM,IAAI,KAAK;AACjB,cAAE,SAAS,CAAC,IAAI,KAAK;UACzB,GA3Ce,eAAA;UA6Cf,SAAS,KAAG;UAEZ,QAAQ,KAAG;UAEX,WAAW,KAAG;QAClB,CAAC;AAGD,iBAAS,WAAW,QAAQ,MAAM;AAC9B,cAAI,KAAM,KAAK,YAAY,SAAU,KAAK,WAAW;AACrD,eAAK,WAAW;AAChB,eAAK,WAAW,KAAK;QACzB;AAJS;AAAA,QAAAA,QAAA,YAAA,YAAA;AAMT,iBAAS,WAAW,QAAQ,MAAM;AAC9B,cAAI,KAAM,KAAK,YAAY,SAAU,KAAK,WAAW;AACrD,eAAK,WAAW;AAChB,eAAK,WAAW,KAAK;QACzB;AAJS;AAAA,QAAAA,QAAA,YAAA,YAAA;AAcT,UAAE,MAAM,YAAY,cAAc,GAAG;AAKrC,YAAI,YAAY,OAAO,YAAY,YAAY,OAAO;UAClD,UAAU,gBAAAA,QAAA,WAAY;AAElB,gBAAI,MAAM,KAAK;AACf,gBAAI,WAAW,IAAI;AAEnB,gBAAI,SAAS,WAAW,KAAK,SAAS,WAAW,KAAK,SAAS,SAAS,GAAG;AACvE,oBAAM,IAAI,MAAM,+EAA+E;YACnG;AAGA,gBAAI,OAAO,SAAS,MAAM,GAAG,CAAC;AAC9B,gBAAI,OAAO,SAAS,SAAS,IAAI,SAAS,MAAM,GAAG,CAAC,IAAI,SAAS,MAAM,GAAG,CAAC;AAC3E,gBAAI,OAAO,SAAS,SAAS,IAAI,SAAS,MAAM,GAAG,CAAC,IAAI,SAAS,MAAM,GAAG,CAAC;AAG3E,iBAAK,QAAQ,IAAI,gBAAgB,UAAU,OAAO,IAAI,CAAC;AACvD,iBAAK,QAAQ,IAAI,gBAAgB,UAAU,OAAO,IAAI,CAAC;AACvD,iBAAK,QAAQ,IAAI,gBAAgB,UAAU,OAAO,IAAI,CAAC;UAC3D,GAlBU,UAAA;UAoBV,cAAc,gBAAAA,QAAA,SAAU,GAAG,QAAQ;AAC/B,iBAAK,MAAM,aAAa,GAAG,MAAM;AACjC,iBAAK,MAAM,aAAa,GAAG,MAAM;AACjC,iBAAK,MAAM,aAAa,GAAG,MAAM;UACrC,GAJc,cAAA;UAMd,cAAc,gBAAAA,QAAA,SAAU,GAAG,QAAQ;AAC/B,iBAAK,MAAM,aAAa,GAAG,MAAM;AACjC,iBAAK,MAAM,aAAa,GAAG,MAAM;AACjC,iBAAK,MAAM,aAAa,GAAG,MAAM;UACrC,GAJc,cAAA;UAMd,SAAS,MAAI;UAEb,QAAQ,KAAG;UAEX,WAAW,KAAG;QAClB,CAAC;AAUD,UAAE,YAAY,YAAY,cAAc,SAAS;MACrD,GAAE;AAGF,aAAOiB,UAAS;IAEjB,CAAC;EAAA;AAAA,CAAA;AC1wBD,IAAA,cAAA,WAAA;EAAA,mCAAA,SAAA,QAAA;AAAA,4CAAA;AAAA,uBAAA;AAAC,KAAC,SAAU,MAAM,SAAS,OAAO;AACjC,UAAI,OAAO,YAAY,UAAU;AAEhC,eAAO,UAAU,UAAU,QAAQ,aAAA,GAAmB,mBAAA,GAAyB,YAAA,GAAkB,eAAA,GAAqB,oBAAA,CAAwB;MAC/I,WACS,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,eAAO,CAAC,UAAU,gBAAgB,SAAS,YAAY,eAAe,GAAG,OAAO;MACjF,OACK;AAEJ,gBAAQ,KAAK,QAAQ;MACtB;IACD,GAAE,SAAM,SAAUA,WAAU;AAE3B,OAAC,WAAY;AAET,YAAI,IAAIA;AACR,YAAI,QAAQ,EAAE;AACd,YAAI,eAAe,MAAM;AACzB,YAAI,SAAS,EAAE;AAKf,YAAI,MAAM,OAAO,MAAM,aAAa,OAAO;UACvC,UAAU,gBAAAjB,QAAA,WAAY;AAElB,gBAAI,MAAM,KAAK;AACf,gBAAI,WAAW,IAAI;AACnB,gBAAI,cAAc,IAAI;AAGtB,gBAAI,IAAI,KAAK,KAAK,CAAC;AACnB,qBAAS,IAAI,GAAG,IAAI,KAAK,KAAK;AAC1B,gBAAE,CAAC,IAAI;YACX;AAGA,qBAAS,IAAI,GAAG,IAAI,GAAG,IAAI,KAAK,KAAK;AACjC,kBAAI,eAAe,IAAI;AACvB,kBAAI,UAAW,SAAS,iBAAiB,CAAC,MAAO,KAAM,eAAe,IAAK,IAAM;AAEjF,mBAAK,IAAI,EAAE,CAAC,IAAI,WAAW;AAG3B,kBAAI,IAAI,EAAE,CAAC;AACX,gBAAE,CAAC,IAAI,EAAE,CAAC;AACV,gBAAE,CAAC,IAAI;YACX;AAGA,iBAAK,KAAK,KAAK,KAAK;UACxB,GA3BU,UAAA;UA6BV,iBAAiB,gBAAAA,QAAA,SAAU,GAAG,QAAQ;AAClC,cAAE,MAAM,KAAK,sBAAsB,KAAK,IAAI;UAChD,GAFiB,iBAAA;UAIjB,SAAS,MAAI;UAEb,QAAQ;QACZ,CAAC;AAED,iBAAS,wBAAwB;AAE7B,cAAI,IAAI,KAAK;AACb,cAAI,IAAI,KAAK;AACb,cAAI,IAAI,KAAK;AAGb,cAAI,gBAAgB;AACpB,mBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,iBAAK,IAAI,KAAK;AACd,iBAAK,IAAI,EAAE,CAAC,KAAK;AAGjB,gBAAI,IAAI,EAAE,CAAC;AACX,cAAE,CAAC,IAAI,EAAE,CAAC;AACV,cAAE,CAAC,IAAI;AAEP,6BAAiB,GAAG,EAAE,CAAC,IAAI,EAAE,CAAC,KAAK,GAAG,KAAM,KAAK,IAAI;UACzD;AAGA,eAAK,KAAK;AACV,eAAK,KAAK;AAEV,iBAAO;QACX;AAzBS;AAAA,QAAAA,QAAA,uBAAA,uBAAA;AAmCT,UAAE,MAAM,aAAa,cAAc,GAAG;AAKtC,YAAI,UAAU,OAAO,UAAU,IAAI,OAAO;;;;;;UAMtC,KAAK,IAAI,IAAI,OAAO;YAChB,MAAM;UACV,CAAC;UAED,UAAU,gBAAAA,QAAA,WAAY;AAClB,gBAAI,SAAS,KAAK,IAAI;AAGtB,qBAAS,IAAI,KAAK,IAAI,MAAM,IAAI,GAAG,KAAK;AACpC,oCAAsB,KAAK,IAAI;YACnC;UACJ,GAPU,UAAA;QAQd,CAAC;AAUD,UAAE,UAAU,aAAa,cAAc,OAAO;MAClD,GAAE;AAGF,aAAOiB,UAAS;IAEjB,CAAC;EAAA;AAAA,CAAA;AC1ID,IAAA,iBAAA,WAAA;EAAA,sCAAA,SAAA,QAAA;AAAA,4CAAA;AAAA,uBAAA;AAAC,KAAC,SAAU,MAAM,SAAS,OAAO;AACjC,UAAI,OAAO,YAAY,UAAU;AAEhC,eAAO,UAAU,UAAU,QAAQ,aAAA,GAAmB,mBAAA,GAAyB,YAAA,GAAkB,eAAA,GAAqB,oBAAA,CAAwB;MAC/I,WACS,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,eAAO,CAAC,UAAU,gBAAgB,SAAS,YAAY,eAAe,GAAG,OAAO;MACjF,OACK;AAEJ,gBAAQ,KAAK,QAAQ;MACtB;IACD,GAAE,SAAM,SAAUA,WAAU;AAE3B,OAAC,WAAY;AAET,YAAI,IAAIA;AACR,YAAI,QAAQ,EAAE;AACd,YAAI,eAAe,MAAM;AACzB,YAAI,SAAS,EAAE;AAGf,YAAI,IAAK,CAAC;AACV,YAAI,KAAK,CAAC;AACV,YAAI,IAAK,CAAC;AAKV,YAAI,SAAS,OAAO,SAAS,aAAa,OAAO;UAC7C,UAAU,gBAAAjB,QAAA,WAAY;AAElB,gBAAI,IAAI,KAAK,KAAK;AAClB,gBAAI,KAAK,KAAK,IAAI;AAGlB,qBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,gBAAE,CAAC,KAAO,EAAE,CAAC,KAAK,IAAO,EAAE,CAAC,MAAM,MAAO,YAC/B,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM,KAAO;YAC7C;AAGA,gBAAI,IAAI,KAAK,KAAK;cACd,EAAE,CAAC;cAAI,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM;cAC/B,EAAE,CAAC;cAAI,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM;cAC/B,EAAE,CAAC;cAAI,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM;cAC/B,EAAE,CAAC;cAAI,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM;YACnC;AAGA,gBAAI8B,KAAI,KAAK,KAAK;cACb,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM;cAAM,EAAE,CAAC,IAAI,aAAe,EAAE,CAAC,IAAI;cAC3D,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM;cAAM,EAAE,CAAC,IAAI,aAAe,EAAE,CAAC,IAAI;cAC3D,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM;cAAM,EAAE,CAAC,IAAI,aAAe,EAAE,CAAC,IAAI;cAC3D,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM;cAAM,EAAE,CAAC,IAAI,aAAe,EAAE,CAAC,IAAI;YAChE;AAGA,iBAAK,KAAK;AAGV,qBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,wBAAU,KAAK,IAAI;YACvB;AAGA,qBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxBA,iBAAE,CAAC,KAAK,EAAG,IAAI,IAAK,CAAC;YACzB;AAGA,gBAAI,IAAI;AAEJ,kBAAI,KAAK,GAAG;AACZ,kBAAI,OAAO,GAAG,CAAC;AACf,kBAAI,OAAO,GAAG,CAAC;AAGf,kBAAI,MAAQ,QAAQ,IAAM,SAAS,MAAO,YAAiB,QAAQ,KAAO,SAAS,KAAM;AACzF,kBAAI,MAAQ,QAAQ,IAAM,SAAS,MAAO,YAAiB,QAAQ,KAAO,SAAS,KAAM;AACzF,kBAAI,KAAM,OAAO,KAAO,KAAK;AAC7B,kBAAI,KAAM,MAAM,KAAQ,KAAK;AAG7BA,iBAAE,CAAC,KAAK;AACRA,iBAAE,CAAC,KAAK;AACRA,iBAAE,CAAC,KAAK;AACRA,iBAAE,CAAC,KAAK;AACRA,iBAAE,CAAC,KAAK;AACRA,iBAAE,CAAC,KAAK;AACRA,iBAAE,CAAC,KAAK;AACRA,iBAAE,CAAC,KAAK;AAGR,uBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,0BAAU,KAAK,IAAI;cACvB;YACJ;UACJ,GApEU,UAAA;UAsEV,iBAAiB,gBAAA9B,QAAA,SAAU,GAAG,QAAQ;AAElC,gBAAI,IAAI,KAAK;AAGb,sBAAU,KAAK,IAAI;AAGnB,cAAE,CAAC,IAAI,EAAE,CAAC,IAAK,EAAE,CAAC,MAAM,KAAO,EAAE,CAAC,KAAK;AACvC,cAAE,CAAC,IAAI,EAAE,CAAC,IAAK,EAAE,CAAC,MAAM,KAAO,EAAE,CAAC,KAAK;AACvC,cAAE,CAAC,IAAI,EAAE,CAAC,IAAK,EAAE,CAAC,MAAM,KAAO,EAAE,CAAC,KAAK;AACvC,cAAE,CAAC,IAAI,EAAE,CAAC,IAAK,EAAE,CAAC,MAAM,KAAO,EAAE,CAAC,KAAK;AAEvC,qBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAExB,gBAAE,CAAC,KAAO,EAAE,CAAC,KAAK,IAAO,EAAE,CAAC,MAAM,MAAO,YAC/B,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM,KAAO;AAGzC,gBAAE,SAAS,CAAC,KAAK,EAAE,CAAC;YACxB;UACJ,GArBiB,iBAAA;UAuBjB,WAAW,MAAI;UAEf,QAAQ,KAAG;QACf,CAAC;AAED,iBAAS,YAAY;AAEjB,cAAI,IAAI,KAAK;AACb,cAAI8B,KAAI,KAAK;AAGb,mBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,eAAG,CAAC,IAAIA,GAAE,CAAC;UACf;AAGAA,aAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,aAAa,KAAK,KAAM;AACvCA,aAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,cAAeA,GAAE,CAAC,MAAM,IAAM,GAAG,CAAC,MAAM,IAAK,IAAI,KAAM;AACtEA,aAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,aAAeA,GAAE,CAAC,MAAM,IAAM,GAAG,CAAC,MAAM,IAAK,IAAI,KAAM;AACtEA,aAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,cAAeA,GAAE,CAAC,MAAM,IAAM,GAAG,CAAC,MAAM,IAAK,IAAI,KAAM;AACtEA,aAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,cAAeA,GAAE,CAAC,MAAM,IAAM,GAAG,CAAC,MAAM,IAAK,IAAI,KAAM;AACtEA,aAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,aAAeA,GAAE,CAAC,MAAM,IAAM,GAAG,CAAC,MAAM,IAAK,IAAI,KAAM;AACtEA,aAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,cAAeA,GAAE,CAAC,MAAM,IAAM,GAAG,CAAC,MAAM,IAAK,IAAI,KAAM;AACtEA,aAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,cAAeA,GAAE,CAAC,MAAM,IAAM,GAAG,CAAC,MAAM,IAAK,IAAI,KAAM;AACtE,eAAK,KAAMA,GAAE,CAAC,MAAM,IAAM,GAAG,CAAC,MAAM,IAAK,IAAI;AAG7C,mBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,gBAAI,KAAK,EAAE,CAAC,IAAIA,GAAE,CAAC;AAGnB,gBAAI,KAAK,KAAK;AACd,gBAAI,KAAK,OAAO;AAGhB,gBAAI,OAAS,KAAK,OAAQ,MAAM,KAAK,OAAQ,MAAM,KAAK;AACxD,gBAAI,OAAQ,KAAK,cAAc,KAAM,OAAQ,KAAK,SAAc,KAAM;AAGtE,cAAE,CAAC,IAAI,KAAK;UAChB;AAGA,YAAE,CAAC,IAAK,EAAE,CAAC,KAAM,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM,OAAS,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM,MAAQ;AAClF,YAAE,CAAC,IAAK,EAAE,CAAC,KAAM,EAAE,CAAC,KAAK,IAAO,EAAE,CAAC,MAAM,MAAO,EAAE,CAAC,IAAK;AACxD,YAAE,CAAC,IAAK,EAAE,CAAC,KAAM,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM,OAAS,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM,MAAQ;AAClF,YAAE,CAAC,IAAK,EAAE,CAAC,KAAM,EAAE,CAAC,KAAK,IAAO,EAAE,CAAC,MAAM,MAAO,EAAE,CAAC,IAAK;AACxD,YAAE,CAAC,IAAK,EAAE,CAAC,KAAM,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM,OAAS,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM,MAAQ;AAClF,YAAE,CAAC,IAAK,EAAE,CAAC,KAAM,EAAE,CAAC,KAAK,IAAO,EAAE,CAAC,MAAM,MAAO,EAAE,CAAC,IAAK;AACxD,YAAE,CAAC,IAAK,EAAE,CAAC,KAAM,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM,OAAS,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM,MAAQ;AAClF,YAAE,CAAC,IAAK,EAAE,CAAC,KAAM,EAAE,CAAC,KAAK,IAAO,EAAE,CAAC,MAAM,MAAO,EAAE,CAAC,IAAK;QAC5D;AA9CS;AAAA,QAAA9B,QAAA,WAAA,WAAA;AAwDT,UAAE,SAAS,aAAa,cAAc,MAAM;MAChD,GAAE;AAGF,aAAOiB,UAAS;IAEjB,CAAC;EAAA;AAAA,CAAA;AC/LD,IAAA,wBAAA,WAAA;EAAA,6CAAA,SAAA,QAAA;AAAA,4CAAA;AAAA,uBAAA;AAAC,KAAC,SAAU,MAAM,SAAS,OAAO;AACjC,UAAI,OAAO,YAAY,UAAU;AAEhC,eAAO,UAAU,UAAU,QAAQ,aAAA,GAAmB,mBAAA,GAAyB,YAAA,GAAkB,eAAA,GAAqB,oBAAA,CAAwB;MAC/I,WACS,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,eAAO,CAAC,UAAU,gBAAgB,SAAS,YAAY,eAAe,GAAG,OAAO;MACjF,OACK;AAEJ,gBAAQ,KAAK,QAAQ;MACtB;IACD,GAAE,SAAM,SAAUA,WAAU;AAE3B,OAAC,WAAY;AAET,YAAI,IAAIA;AACR,YAAI,QAAQ,EAAE;AACd,YAAI,eAAe,MAAM;AACzB,YAAI,SAAS,EAAE;AAGf,YAAI,IAAK,CAAC;AACV,YAAI,KAAK,CAAC;AACV,YAAI,IAAK,CAAC;AASV,YAAI,eAAe,OAAO,eAAe,aAAa,OAAO;UACzD,UAAU,gBAAAjB,QAAA,WAAY;AAElB,gBAAI,IAAI,KAAK,KAAK;AAClB,gBAAI,KAAK,KAAK,IAAI;AAGlB,gBAAI,IAAI,KAAK,KAAK;cACd,EAAE,CAAC;cAAI,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM;cAC/B,EAAE,CAAC;cAAI,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM;cAC/B,EAAE,CAAC;cAAI,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM;cAC/B,EAAE,CAAC;cAAI,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM;YACnC;AAGA,gBAAI8B,KAAI,KAAK,KAAK;cACb,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM;cAAM,EAAE,CAAC,IAAI,aAAe,EAAE,CAAC,IAAI;cAC3D,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM;cAAM,EAAE,CAAC,IAAI,aAAe,EAAE,CAAC,IAAI;cAC3D,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM;cAAM,EAAE,CAAC,IAAI,aAAe,EAAE,CAAC,IAAI;cAC3D,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM;cAAM,EAAE,CAAC,IAAI,aAAe,EAAE,CAAC,IAAI;YAChE;AAGA,iBAAK,KAAK;AAGV,qBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,wBAAU,KAAK,IAAI;YACvB;AAGA,qBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxBA,iBAAE,CAAC,KAAK,EAAG,IAAI,IAAK,CAAC;YACzB;AAGA,gBAAI,IAAI;AAEJ,kBAAI,KAAK,GAAG;AACZ,kBAAI,OAAO,GAAG,CAAC;AACf,kBAAI,OAAO,GAAG,CAAC;AAGf,kBAAI,MAAQ,QAAQ,IAAM,SAAS,MAAO,YAAiB,QAAQ,KAAO,SAAS,KAAM;AACzF,kBAAI,MAAQ,QAAQ,IAAM,SAAS,MAAO,YAAiB,QAAQ,KAAO,SAAS,KAAM;AACzF,kBAAI,KAAM,OAAO,KAAO,KAAK;AAC7B,kBAAI,KAAM,MAAM,KAAQ,KAAK;AAG7BA,iBAAE,CAAC,KAAK;AACRA,iBAAE,CAAC,KAAK;AACRA,iBAAE,CAAC,KAAK;AACRA,iBAAE,CAAC,KAAK;AACRA,iBAAE,CAAC,KAAK;AACRA,iBAAE,CAAC,KAAK;AACRA,iBAAE,CAAC,KAAK;AACRA,iBAAE,CAAC,KAAK;AAGR,uBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,0BAAU,KAAK,IAAI;cACvB;YACJ;UACJ,GA9DU,UAAA;UAgEV,iBAAiB,gBAAA9B,QAAA,SAAU,GAAG,QAAQ;AAElC,gBAAI,IAAI,KAAK;AAGb,sBAAU,KAAK,IAAI;AAGnB,cAAE,CAAC,IAAI,EAAE,CAAC,IAAK,EAAE,CAAC,MAAM,KAAO,EAAE,CAAC,KAAK;AACvC,cAAE,CAAC,IAAI,EAAE,CAAC,IAAK,EAAE,CAAC,MAAM,KAAO,EAAE,CAAC,KAAK;AACvC,cAAE,CAAC,IAAI,EAAE,CAAC,IAAK,EAAE,CAAC,MAAM,KAAO,EAAE,CAAC,KAAK;AACvC,cAAE,CAAC,IAAI,EAAE,CAAC,IAAK,EAAE,CAAC,MAAM,KAAO,EAAE,CAAC,KAAK;AAEvC,qBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AAExB,gBAAE,CAAC,KAAO,EAAE,CAAC,KAAK,IAAO,EAAE,CAAC,MAAM,MAAO,YAC/B,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM,KAAO;AAGzC,gBAAE,SAAS,CAAC,KAAK,EAAE,CAAC;YACxB;UACJ,GArBiB,iBAAA;UAuBjB,WAAW,MAAI;UAEf,QAAQ,KAAG;QACf,CAAC;AAED,iBAAS,YAAY;AAEjB,cAAI,IAAI,KAAK;AACb,cAAI8B,KAAI,KAAK;AAGb,mBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,eAAG,CAAC,IAAIA,GAAE,CAAC;UACf;AAGAA,aAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,aAAa,KAAK,KAAM;AACvCA,aAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,cAAeA,GAAE,CAAC,MAAM,IAAM,GAAG,CAAC,MAAM,IAAK,IAAI,KAAM;AACtEA,aAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,aAAeA,GAAE,CAAC,MAAM,IAAM,GAAG,CAAC,MAAM,IAAK,IAAI,KAAM;AACtEA,aAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,cAAeA,GAAE,CAAC,MAAM,IAAM,GAAG,CAAC,MAAM,IAAK,IAAI,KAAM;AACtEA,aAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,cAAeA,GAAE,CAAC,MAAM,IAAM,GAAG,CAAC,MAAM,IAAK,IAAI,KAAM;AACtEA,aAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,aAAeA,GAAE,CAAC,MAAM,IAAM,GAAG,CAAC,MAAM,IAAK,IAAI,KAAM;AACtEA,aAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,cAAeA,GAAE,CAAC,MAAM,IAAM,GAAG,CAAC,MAAM,IAAK,IAAI,KAAM;AACtEA,aAAE,CAAC,IAAKA,GAAE,CAAC,IAAI,cAAeA,GAAE,CAAC,MAAM,IAAM,GAAG,CAAC,MAAM,IAAK,IAAI,KAAM;AACtE,eAAK,KAAMA,GAAE,CAAC,MAAM,IAAM,GAAG,CAAC,MAAM,IAAK,IAAI;AAG7C,mBAAS,IAAI,GAAG,IAAI,GAAG,KAAK;AACxB,gBAAI,KAAK,EAAE,CAAC,IAAIA,GAAE,CAAC;AAGnB,gBAAI,KAAK,KAAK;AACd,gBAAI,KAAK,OAAO;AAGhB,gBAAI,OAAS,KAAK,OAAQ,MAAM,KAAK,OAAQ,MAAM,KAAK;AACxD,gBAAI,OAAQ,KAAK,cAAc,KAAM,OAAQ,KAAK,SAAc,KAAM;AAGtE,cAAE,CAAC,IAAI,KAAK;UAChB;AAGA,YAAE,CAAC,IAAK,EAAE,CAAC,KAAM,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM,OAAS,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM,MAAQ;AAClF,YAAE,CAAC,IAAK,EAAE,CAAC,KAAM,EAAE,CAAC,KAAK,IAAO,EAAE,CAAC,MAAM,MAAO,EAAE,CAAC,IAAK;AACxD,YAAE,CAAC,IAAK,EAAE,CAAC,KAAM,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM,OAAS,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM,MAAQ;AAClF,YAAE,CAAC,IAAK,EAAE,CAAC,KAAM,EAAE,CAAC,KAAK,IAAO,EAAE,CAAC,MAAM,MAAO,EAAE,CAAC,IAAK;AACxD,YAAE,CAAC,IAAK,EAAE,CAAC,KAAM,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM,OAAS,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM,MAAQ;AAClF,YAAE,CAAC,IAAK,EAAE,CAAC,KAAM,EAAE,CAAC,KAAK,IAAO,EAAE,CAAC,MAAM,MAAO,EAAE,CAAC,IAAK;AACxD,YAAE,CAAC,IAAK,EAAE,CAAC,KAAM,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM,OAAS,EAAE,CAAC,KAAK,KAAO,EAAE,CAAC,MAAM,MAAQ;AAClF,YAAE,CAAC,IAAK,EAAE,CAAC,KAAM,EAAE,CAAC,KAAK,IAAO,EAAE,CAAC,MAAM,MAAO,EAAE,CAAC,IAAK;QAC5D;AA9CS;AAAA,QAAA9B,QAAA,WAAA,WAAA;AAwDT,UAAE,eAAe,aAAa,cAAc,YAAY;MAC5D,GAAE;AAGF,aAAOiB,UAAS;IAEjB,CAAC;EAAA;AAAA,CAAA;AC7LD,IAAA,mBAAA,WAAA;EAAA,wCAAA,SAAA,QAAA;AAAA,4CAAA;AAAA,uBAAA;AAAC,KAAC,SAAU,MAAM,SAAS,OAAO;AACjC,UAAI,OAAO,YAAY,UAAU;AAEhC,eAAO,UAAU,UAAU,QAAQ,aAAA,GAAmB,mBAAA,GAAyB,YAAA,GAAkB,eAAA,GAAqB,oBAAA,CAAwB;MAC/I,WACS,OAAO,WAAW,cAAc,OAAO,KAAK;AAEpD,eAAO,CAAC,UAAU,gBAAgB,SAAS,YAAY,eAAe,GAAG,OAAO;MACjF,OACK;AAEJ,gBAAQ,KAAK,QAAQ;MACtB;IACD,GAAE,SAAM,SAAUA,WAAU;AAE3B,OAAC,WAAY;AAET,YAAI,IAAIA;AACR,YAAI,QAAQ,EAAE;AACd,YAAI,cAAc,MAAM;AACxB,YAAI,SAAS,EAAE;AAEf,cAAM,IAAI;AAGV,cAAM,SAAS;UACX;UAAY;UAAY;UAAY;UACpC;UAAY;UAAY;UAAY;UACpC;UAAY;UAAY;UAAY;UACpC;UAAY;UAAY;UAAY;UACpC;UAAY;QAChB;AAEA,cAAM,SAAS;UACX;YAAI;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;UAAa;UACrD;YAAI;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;UAAa;UACrD;YAAI;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;UAAY;UACpD;YAAI;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY;YAAY;YAAY;YACpC;YAAY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AW;cACT,QAAU;cACV,UAAY;cACZ,QAAU;YACZ;YACA,QAAU;cACR,QAAU;cACV,UAAY;cACZ,QAAU;YACZ;UACF;UACA,SAAW;YACT,SAAW;cACT,IAAM;cACN,SAAS;YACX;YACA,QAAU;cACR,IAAM;cACN,SAAS;YACX;UACF;UACA,UAAY;YACV,IAAM;cACJ;cACA;cACA;cACA;cACA;YACF;YACA,SAAS;cACP;cACA;cACA;cACA;cACA;YACF;UACF;UACA,eAAiB;UACjB,SAAW;QACb;QACA,cAAgB;UACd,IAAM;UACN,MAAQ;YACN,IAAM;YACN,SAAS;UACX;UACA,aAAe;YACb,IAAM;YACN,SAAS;UACX;UACA,OAAS;YACP,SAAW;cACT,QAAU;cACV,UAAY;cACZ,QAAU;YACZ;YACA,QAAU;cACR,QAAU;cACV,UAAY;cACZ,QAAU;YACZ;UACF;UACA,SAAW;YACT,SAAW;cACT,IAAM;cACN,SAAS;YACX;YACA,QAAU;cACR,IAAM;cACN,SAAS;YACX;UACF;UACA,UAAY;YACV,IAAM;cACJ;cACA;cACA;cACA;cACA;cACA;cACA;cACA;YACF;YACA,SAAS;cACP;cACA;cACA;cACA;cACA;cACA;cACA;cACA;YACF;UACF;UACA,eAAiB;UACjB,SAAW;QACb;QACA,YAAc;UACZ,IAAM;UACN,MAAQ;YACN,IAAM;YACN,SAAS;UACX;UACA,aAAe;YACb,IAAM;YACN,SAAS;UACX;UACA,OAAS;YACP,SAAW;cACT,QAAU;cACV,UAAY;cACZ,QAAU;YACZ;YACA,QAAU;cACR,QAAU;cACV,UAAY;cACZ,QAAU;YACZ;UACF;UACA,SAAW;YACT,SAAW;cACT,IAAM;cACN,SAAS;YACX;YACA,QAAU;cACR,IAAM;cACN,SAAS;YACX;UACF;UACA,UAAY;YACV,IAAM;cACJ;cACA;cACA;cACA;cACA;cACA;cACA;cACA;YACF;YACA,SAAS;cACP;cACA;cACA;cACA;cACA;cACA;cACA;cACA;YACF;UACF;UACA,eAAiB;UACjB,SAAW;QACb;MACF;IACF;EAAA;AAAA,CAAA;ACxKA,IAAa;AAAb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",
  "names": ["checkURL", "urls", "__name", "createUser", "db", "user", "isNewUser", "updatePreferredLoginMethod", "sendNewUserNotification", "error", "parseCookies", "signJwt", "onRequestGet", "init_callback", "processPendingPayments", "getUserByEmail", "onRequestOptions", "onRequestPut", "onRequestPost", "CryptoJS", "Math", "undefined", "crypto", "__require", "n", "H", "CBC", "SUB_MIX_0", "SUB_MIX_1", "SUB_MIX_2", "SUB_MIX_3", "SBOX", "C", "import_crypto_js", "processPendingInvoices", "init_status", "uptimeKumaUrl", "metricsText", "processedDomains", "verifyJwt", "onRequest", "createInvoiceRecord", "key", "onRequestDelete", "getUserById", "createCreditNote", "resendApiKey", "value", "_a", "result", "char", "prefix", "i", "drainBody", "middleware_ensure_req_body_drained_default", "reduceError", "jsonError", "middleware_miniflare3_json_error_default", "__INTERNAL_WRANGLER_MIDDLEWARE__", "middleware_ensure_req_body_drained_default", "middleware_miniflare3_json_error_default", "middleware_insertion_facade_default", "__facade_middleware__", "__facade_register__", "__facade_invokeChain__", "__facade_invoke__", "__facade_middleware__", "__Facade_ScheduledController__", "___Facade_ScheduledController__", "wrapExportedHandler", "__INTERNAL_WRANGLER_MIDDLEWARE__", "__facade_register__", "__facade_invoke__", "wrapWorkerEntrypoint", "WRAPPED_ENTRY", "middleware_insertion_facade_default", "middleware_loader_entry_default"]
}
